<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>W.T.的博客</title>
  
  <subtitle>Every day to be a little better</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.runaccepted.com/"/>
  <updated>2020-05-06T21:39:39.132Z</updated>
  <id>https://www.runaccepted.com/</id>
  
  <author>
    <name>Wang Ting</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>压力测试工具-ApacheAB</title>
    <link href="https://www.runaccepted.com/2020/04/19/%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7-ApacheAB/"/>
    <id>https://www.runaccepted.com/2020/04/19/压力测试工具-ApacheAB/</id>
    <published>2020-04-19T07:43:38.000Z</published>
    <updated>2020-05-06T21:39:39.132Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Apache AB 模拟并发请求，测试服务器在并发请求下的运行效率</blockquote><a id="more"></a><h1 id="压力测试Apache-AB"><a href="#压力测试Apache-AB" class="headerlink" title="压力测试Apache AB"></a><font size="4px">压力测试Apache AB</font></h1><h2 id="下载Apache-HTTP-Server"><a href="#下载Apache-HTTP-Server" class="headerlink" title="下载Apache HTTP Server"></a><font size="3px">下载Apache HTTP Server</font></h2><p><a href="http://httpd.apache.org/download.cgi" target="_blank" rel="noopener">http://httpd.apache.org/download.cgi</a></p><p>打开终端，进入到刚刚解压完的http server目录</p><p>执行 ./configure （根据官方文档说明，不加prefix会有默认的路径）</p><p>可能你会见到如下错误，找不到APR</p><h2 id="安装APR-Apache-Portable-Runtime"><a href="#安装APR-Apache-Portable-Runtime" class="headerlink" title="安装APR (Apache Portable Runtime)"></a><font size="3px">安装APR (Apache Portable Runtime)</font></h2><p><a href="http://apr.apache.org/download.cgi" target="_blank" rel="noopener">http://apr.apache.org/download.cgi</a></p><p>安装 APR，prefix后面跟着的是你想要安装APR的路径，前提：进入到解压后的APR路径</p><p>./configure –prefix=/usr/local/apr<br>make<br>make install</p><h2 id="安装APR-Util"><a href="#安装APR-Util" class="headerlink" title="安装APR-Util"></a><font size="3px">安装APR-Util</font></h2><p>前提：进入到解压后的APR-Util路径，prefix后面跟着的是你想要安装APR的路径，-with-apr是指向我们安装apr的路径</p><p>./configure –prefix=/usr/local/apr-util -with-apr=/usr/local/apr/<br>make<br>make install</p><h2 id="重新安装Apache-HTTP-Server"><a href="#重新安装Apache-HTTP-Server" class="headerlink" title="重新安装Apache HTTP Server"></a><font size="3px">重新安装Apache HTTP Server</font></h2><p>进入到http server的解压路径，执行下列命令<br>前提：记得创建/usr/local/httpd/这个路径</p><p>./configure –prefix=/usr/local/httpd/ -with-apr=/usr/local/apr -with-apr-util=/usr/local/apr-util/<br>make</p><p>make install</p><p>进入到httpd的安装目录，启动服务</p><p>cd /usr/local/httpd/bin<br>apachectl -k start</p><p><font color="#f00">遇到“AH00558: httpd: Could not reliably determine the server’s fully qualified domain name”错误</font></p><p><strong>进入到/usr/local/httpd/conf目录</strong></p><p>编辑httpd.conf文件，搜索”#ServerName”，添加ServerName localhost:80</p><p>重新进入/usr/local/httpd/bin </p><p>apachectl -k start</p><p><strong>在浏览器中输入localhost:80</strong></p><p><img src="/2020/04/19/压力测试工具-ApacheAB/ab.png" alt></p><h1 id="开启ab测试"><a href="#开启ab测试" class="headerlink" title="开启ab测试"></a><font size="4px">开启ab测试</font></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ab</span></span><br><span class="line">ab: wrong number of arguments</span><br><span class="line">Usage: ab [options] [http[s]://]hostname[:port]/path</span><br><span class="line">Options are:</span><br><span class="line">    -n requests     Number of requests to perform</span><br><span class="line">    -c concurrency  Number of multiple requests to make at a time</span><br><span class="line">    -t timelimit    Seconds to max. to spend on benchmarking</span><br><span class="line">                    This implies -n 50000</span><br><span class="line">    -s timeout      Seconds to max. wait for each response</span><br><span class="line">                    Default is 30 seconds</span><br><span class="line">    -b windowsize   Size of TCP send/receive buffer, in bytes</span><br><span class="line">    -B address      Address to bind to when making outgoing connections</span><br><span class="line">    -p postfile     File containing data to POST. Remember also to set -T</span><br><span class="line">    -u putfile      File containing data to PUT. Remember also to set -T</span><br><span class="line">    -T content-type Content-type header to use for POST/PUT data, eg.</span><br><span class="line">                    'application/x-www-form-urlencoded'</span><br><span class="line">                    Default is 'text/plain'</span><br><span class="line">    -v verbosity    How much troubleshooting info to print</span><br><span class="line">    -w              Print out results in HTML tables</span><br><span class="line">    -i              Use HEAD instead of GET</span><br><span class="line">    -x attributes   String to insert as table attributes</span><br><span class="line">    -y attributes   String to insert as tr attributes</span><br><span class="line">    -z attributes   String to insert as td or th attributes</span><br><span class="line">    -C attribute    Add cookie, eg. 'Apache=1234'. (repeatable)</span><br><span class="line">    -H attribute    Add Arbitrary header line, eg. 'Accept-Encoding: gzip'</span><br><span class="line">                    Inserted after all normal header lines. (repeatable)</span><br><span class="line">    -A attribute    Add Basic WWW Authentication, the attributes</span><br><span class="line">                    are a colon separated username and password.</span><br><span class="line">    -P attribute    Add Basic Proxy Authentication, the attributes</span><br><span class="line">                    are a colon separated username and password.</span><br><span class="line">    -X proxy:port   Proxyserver and port number to use</span><br><span class="line">    -V              Print version number and exit</span><br><span class="line">    -k              Use HTTP KeepAlive feature</span><br><span class="line">    -d              Do not show percentiles served table.</span><br><span class="line">    -S              Do not show confidence estimators and warnings.</span><br><span class="line">    -q              Do not show progress when doing more than 150 requests</span><br><span class="line">    -l              Accept variable document length (use this for dynamic pages)</span><br><span class="line">    -g filename     Output collected data to gnuplot format file.</span><br><span class="line">    -e filename     Output CSV file with percentages served</span><br><span class="line">    -r              Don't exit on socket receive errors.</span><br><span class="line">    -m method       Method name</span><br><span class="line">    -h              Display usage information (this message)</span><br><span class="line">    -I              Disable TLS Server Name Indication (SNI) extension</span><br><span class="line">    -Z ciphersuite  Specify SSL/TLS cipher suite (See openssl ciphers)</span><br><span class="line">    -f protocol     Specify SSL/TLS protocol</span><br><span class="line">                    (TLS1, TLS1.1, TLS1.2 or ALL)</span><br><span class="line">    -E certfile     Specify optional client certificate chain and private key</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ab -n 10000 http://localhost:9500/edu-teacher/listTeachers</span></span><br><span class="line">This is ApacheBench, Version 2.3 &lt;$Revision: 1843412 $&gt;</span><br><span class="line">Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/</span><br><span class="line">Licensed to The Apache Software Foundation, http://www.apache.org/</span><br><span class="line"></span><br><span class="line">Benchmarking localhost (be patient)</span><br><span class="line">Completed 1000 requests</span><br><span class="line">Completed 2000 requests</span><br><span class="line">Completed 3000 requests</span><br><span class="line">Completed 4000 requests</span><br><span class="line">Completed 5000 requests</span><br><span class="line">Completed 6000 requests</span><br><span class="line">Completed 7000 requests</span><br><span class="line">Completed 8000 requests</span><br><span class="line">Completed 9000 requests</span><br><span class="line">Completed 10000 requests</span><br><span class="line">Finished 10000 requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Software:        </span><br><span class="line">Server Hostname:        localhost</span><br><span class="line">Server Port:            9500</span><br><span class="line"></span><br><span class="line">Document Path:          /edu-teacher/listTeachers</span><br><span class="line">Document Length:        5685 bytes</span><br><span class="line"></span><br><span class="line">Concurrency Level:      100</span><br><span class="line">Time taken for tests:   39.782 seconds</span><br><span class="line">Complete requests:      10000</span><br><span class="line">Failed requests:        9885</span><br><span class="line">   (Connect: 0, Receive: 0, Length: 9885, Exceptions: 0)</span><br><span class="line">Total transferred:      59491075 bytes</span><br><span class="line">HTML transferred:       56781075 bytes</span><br><span class="line">Requests per second:    251.37 [#/sec] (mean)</span><br><span class="line">Time per request:       397.820 [ms] (mean)</span><br><span class="line">Time per request:       3.978 [ms] (mean, across all concurrent requests)</span><br><span class="line">Transfer rate:          1460.38 [Kbytes/sec] received</span><br><span class="line"></span><br><span class="line">Connection Times (ms)</span><br><span class="line">              min  mean[+/-sd] median   max</span><br><span class="line">Connect:        0    1   6.5      0      83</span><br><span class="line">Processing:    44  371 250.6    309    6235</span><br><span class="line">Waiting:       41  366 245.3    306    6117</span><br><span class="line">Total:         44  372 254.0    309    6235</span><br><span class="line"></span><br><span class="line">Percentage of the requests served within a certain time (ms)</span><br><span class="line"><span class="meta">  50%</span><span class="bash">    309</span></span><br><span class="line"><span class="meta">  66%</span><span class="bash">    349</span></span><br><span class="line"><span class="meta">  75%</span><span class="bash">    386</span></span><br><span class="line"><span class="meta">  80%</span><span class="bash">    415</span></span><br><span class="line"><span class="meta">  90%</span><span class="bash">    544</span></span><br><span class="line"><span class="meta">  95%</span><span class="bash">    710</span></span><br><span class="line"><span class="meta">  98%</span><span class="bash">    964</span></span><br><span class="line"><span class="meta">  99%</span><span class="bash">   1313</span></span><br><span class="line"><span class="meta"> 100%</span><span class="bash">   6235 (longest request)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Apache AB 模拟并发请求，测试服务器在并发请求下的运行效率&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工具" scheme="https://www.runaccepted.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="ApacheAB" scheme="https://www.runaccepted.com/tags/ApacheAB/"/>
    
  </entry>
  
  <entry>
    <title>Parallels Desktop 15 For Mac 破解版</title>
    <link href="https://www.runaccepted.com/2020/03/30/Parallels%E5%AE%89%E8%A3%85/"/>
    <id>https://www.runaccepted.com/2020/03/30/Parallels安装/</id>
    <published>2020-03-30T14:36:10.000Z</published>
    <updated>2020-04-07T06:07:02.096Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Parallels安装 CentOS7安装</blockquote><a id="more"></a><h1 id="Parallels-Desktop-15-安装"><a href="#Parallels-Desktop-15-安装" class="headerlink" title="Parallels Desktop 15 安装"></a><font size="4px">Parallels Desktop 15 安装</font></h1><p>官网 <a href="https://www.parallels.cn/products/desktop/buy/" target="_blank" rel="noopener">https://www.parallels.cn/products/desktop/buy/</a></p><p>链接: <a href="https://pan.baidu.com/s/1A4F2RhT4bT-SLK70jLXAoQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1A4F2RhT4bT-SLK70jLXAoQ</a>  密码: 08f0</p><p>安装不要联网！不要联网！</p><p>双击安装</p><p><img src="/2020/03/30/Parallels安装/setup.png" alt></p><p>出现 <font color="#f00">无法打开“Parallels Desktop.app”,因为Apple无法检查其是否包含恶意软件</font></p><p>终端输入 <code>sudo spctl --master-disable</code>  允许任何来源的安装</p><p>而后不检查更新，这就是不联网的原因，安装当前版</p><p>最终</p><p><img src="/2020/03/30/Parallels安装/active.png" alt></p><p>关闭检查</p><p><img src="/2020/03/30/Parallels安装/nocheck.png" alt></p><p>同样不联网，安装Parallels Tools</p><p><img src="/2020/03/30/Parallels安装/tools.png" alt></p><p>禁用</p><p><img src="/2020/03/30/Parallels安装/tooldis.png" alt></p><h1 id="安装win10"><a href="#安装win10" class="headerlink" title="安装win10"></a><font size="4px">安装win10</font></h1><p>ed2k://|file|cn_windows_10_multi-edition_vl_version_1709_updated_sept_2017_x64_dvd_100090774.iso|4630972416|8867C5E54405FF9452225B66EFEE690A|/</p><h1 id="CentOS-7下载及配置"><a href="#CentOS-7下载及配置" class="headerlink" title="CentOS 7下载及配置"></a><font size="4px">CentOS 7下载及配置</font></h1><p><a href="http://mirrors.aliyun.com/centos/7.7.1908/isos/x86_64/" target="_blank" rel="noopener">http://mirrors.aliyun.com/centos/7.7.1908/isos/x86_64/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CentOS-7-x86_64-DVD-1908.iso                       没有桌面(选择☑️)</span><br><span class="line">CentOS-7-x86_64-DVD-1908.torrent                   </span><br><span class="line">CentOS-7-x86_64-Everything-1908.iso                完整版，集成所有软件</span><br><span class="line">CentOS-7-x86_64-Everything-1908.torrent            </span><br><span class="line">CentOS-7-x86_64-LiveGNOME-1908.iso                 有桌面版         </span><br><span class="line">CentOS-7-x86_64-LiveGNOME-1908.torrent             </span><br><span class="line">CentOS-7-x86_64-LiveKDE-1908.iso                   有桌面版</span><br><span class="line">CentOS-7-x86_64-LiveKDE-1908.torrent               </span><br><span class="line">CentOS-7-x86_64-Minimal-1908.iso                   精简版，自带的软件最少</span><br><span class="line">CentOS-7-x86_64-Minimal-1908.torrent               </span><br><span class="line">CentOS-7-x86_64-NetInstall-1908.iso                网络安装版</span><br><span class="line">CentOS-7-x86_64-NetInstall-1908.torrent</span><br></pre></td></tr></table></figure><h2 id="查看ip-固定ip"><a href="#查看ip-固定ip" class="headerlink" title="查看ip-固定ip"></a><font size="3px">查看ip-固定ip</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ip address</span></span><br></pre></td></tr></table></figure><h2 id="ip相关配置文件"><a href="#ip相关配置文件" class="headerlink" title="ip相关配置文件"></a><font size="3px">ip相关配置文件</font></h2><p>/etc/sysconfig/network-scripts/ifcfg-eth0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost network-scripts]$ cd /etc/sysconfig/network-scripts</span><br><span class="line">[linux@localhost network-scripts]$ ls</span><br><span class="line">ifcfg-eth0  ifdown-bnep  ifdown-ipv6  ifdown-ppp     ifdown-Team      ifup          ifup-eth   ifup-isdn   ifup-post    ifup-sit       ifup-tunnel       network-functions</span><br><span class="line">ifcfg-lo    ifdown-eth   ifdown-isdn  ifdown-routes  ifdown-TeamPort  ifup-aliases  ifup-ippp  ifup-plip   ifup-ppp     ifup-Team      ifup-wireless     network-functions-ipv6</span><br><span class="line">ifdown      ifdown-ippp  ifdown-post  ifdown-sit     ifdown-tunnel    ifup-bnep     ifup-ipv6  ifup-plusb  ifup-routes  ifup-TeamPort  init.ipv6-global</span><br><span class="line">[linux@192 network-scripts]$ vi ifcfg-eth0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">默认配置</span></span><br><span class="line">TYPE="Ethernet"</span><br><span class="line">PROXY_METHOD="none"</span><br><span class="line">BROWSER_ONLY="no"</span><br><span class="line">BOOTPROTO="static"</span><br><span class="line">DEFROUTE="yes"</span><br><span class="line">IPV4_FAILURE_FATAL="no"</span><br><span class="line">IPV6INIT="yes"</span><br><span class="line">IPV6_AUTOCONF="yes"</span><br><span class="line">IPV6_DEFROUTE="yes"</span><br><span class="line">IPV6_FAILURE_FATAL="no"</span><br><span class="line">IPV6_ADDR_GEN_MODE="stable-privacy"</span><br><span class="line">NAME="eth0"</span><br><span class="line">UUID="0ae56f0b-16f1-42cd-adc0-b3bc4daa57c2"</span><br><span class="line">DEVICE="eth0"</span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改配置</span></span><br><span class="line">TYPE="Ethernet" #网关类型：以太网</span><br><span class="line">BOOTPROTO="static" #ip设置：静态ip</span><br><span class="line">DEVICE="eth0" #网卡名</span><br><span class="line">ONBOOT="yes" #随系统启动</span><br><span class="line">IPADDR="192.168.0.101" #ip地址</span><br><span class="line">GATEWAY="192.168.0.1" #网关</span><br><span class="line">NETMASK="255.255.255.0" #子网掩码</span><br><span class="line">DNS1="8.8.8.8" #谷歌免费dns</span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"></span><br><span class="line">[linux@localhost network-scripts]$ reboot</span><br></pre></td></tr></table></figure><h2 id="Mac-连接linux"><a href="#Mac-连接linux" class="headerlink" title="Mac 连接linux"></a><font size="3px">Mac 连接linux</font></h2><p><code>ssh 用户名@ip</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LearningtekiMacBook-Air:myblog Learning$ ssh linux@192.168.0.101</span><br><span class="line">[linux@192 ~]$ </span><br><span class="line">[linux@192 ~]$ ip addr</span><br><span class="line">2: eth0: inet 192.168.0.101/24 </span><br><span class="line">[linux@192 ~]$ </span><br><span class="line">[linux@192 ~]$</span><br></pre></td></tr></table></figure><h2 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a><font size="3px">防火墙</font></h2><p>查看防火墙状态： service firewalld status</p><p>启动防火墙：  systemctl start firewalld</p><p>停止防火墙：  systemctl stop firewalld </p><p>禁用防火墙：  systemctl disable firewalld</p><hr><p>查看版本： firewall-cmd –version</p><p>查看帮助： firewall-cmd –help </p><p>显示状态： firewall-cmd –state</p><p>开启端口：firewall-cmd –zone=public(作用域) –add-port=80/tcp(端口和访问类型) –permanent(永久生效)</p><p>更新防火墙：firewall-cmd –reload</p><p>查看该端口是否开启：firewall-cmd –zone= public –query-port=80/tcp </p><p>关闭端口：firewall-cmd –zone= public –remove-port=80/tcp –permanent </p><h2 id="yum源中加入阿里云源"><a href="#yum源中加入阿里云源" class="headerlink" title="yum源中加入阿里云源"></a><font size="3px">yum源中加入阿里云源</font></h2><ol><li><p>打开centos的yum文件夹 </p><p>cd  /etc/yum.repos.d/</p></li><li><p>用wget下载repo文件 </p><p>wget  <a href="http://mirrors.aliyun.com/repo/Centos-7.repo" target="_blank" rel="noopener">http://mirrors.aliyun.com/repo/Centos-7.repo</a></p><p>如果wget命令不生效</p><p>yum -y install wget</p></li><li><p>备份系统原来的repo文件 </p><p>mv  CentOS-Base.repo CentOs-Base.repo.bak</p></li><li><p>替换系统原理的repo文件</p><p>mv Centos-7.repo CentOS-Base.repo</p></li><li><p>执行yum源更新命令</p><p>yum clean all</p><p>yum makecache</p><p>yum update</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost ~]$ su</span><br><span class="line">Password:</span><br><span class="line">[root@localhost linux]# cd /etc/yum.repos.d/</span><br><span class="line">[root@localhost yum.repos.d]# ls</span><br><span class="line">CentOS-Base.repo      CentOS-CR.repo         CentOS-fasttrack.repo  CentOS-Sources.repo</span><br><span class="line">CentOS-Debuginfo.repo  CentOS-Media.repo      CentOS-Vault.repo</span><br><span class="line">[root@localhost yum.repos.d]# yum -y install wget</span><br><span class="line">[root@localhost yum.repos.d]# wget  http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">[root@localhost yum.repos.d]# mv CentOS-Base.repo CentOs-Base.repo.bak</span><br><span class="line">[root@localhost yum.repos.d]# mv Centos-7.repo CentOs-Base.repo</span><br><span class="line">[root@localhost yum.repos.d]# yum clean all</span><br><span class="line">[root@localhost yum.repos.d]# yum makecache</span><br><span class="line">[root@localhost yum.repos.d]# yum update</span><br></pre></td></tr></table></figure><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a><font size="4px">安装docker</font></h1><p><a href="https://www.runaccepted.com/2019/10/21/Docker/">https://www.runaccepted.com/2019/10/21/Docker/</a></p><h1 id="重启后docker无法启动"><a href="#重启后docker无法启动" class="headerlink" title="重启后docker无法启动"></a><font size="4px">重启后docker无法启动</font></h1><p><code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code></p><p>解决：</p><p><code>systemctl daemon-reload</code></p><p><code>service docker restart</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost ~]$ docker ps</span><br><span class="line">Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$</span><br><span class="line">[linux@localhost ~]$ systemctl daemon-reload</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.reload-daemon ===</span><br><span class="line">Authentication is required to reload the systemd state.</span><br><span class="line">Authenticating as: root</span><br><span class="line">Password: </span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$ service docker restart</span><br><span class="line">Redirecting to /bin/systemctl restart docker.service</span><br><span class="line">==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ===</span><br><span class="line">Authentication is required to manage system services or units.</span><br><span class="line">Authenticating as: root</span><br><span class="line">Password: </span><br><span class="line">==== AUTHENTICATION COMPLETE ===</span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$ docker ps</span><br><span class="line">Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/json: dial unix /var/run/docker.sock: connect: permission denied</span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$ su</span><br><span class="line">密码：</span><br><span class="line">[root@localhost linux]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">[root@localhost linux]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                       PORTS               NAMES</span><br><span class="line">19d9ac40ba76        elasticsearch:5.6.11   "/docker-entrypoint.…"   8 hours ago         Exited (143) 6 minutes ago                       elasticsearch</span><br><span class="line">c7473e2145bc        logstash:5.6.11        "/docker-entrypoint.…"   9 hours ago         Exited (137) 8 hours ago                         logstash</span><br><span class="line">7122d84209e4        kibana:5.6.11          "/docker-entrypoint.…"   10 hours ago        Exited (143) 8 hours ago                         kibana</span><br><span class="line">[root@localhost linux]#</span><br></pre></td></tr></table></figure><h1 id="克隆linux"><a href="#克隆linux" class="headerlink" title="克隆linux"></a><font size="4px">克隆linux</font></h1><p>在关机情况下操作</p><p><img src="/2020/03/30/Parallels安装/kelong.png" alt></p><p>修改IP地址 为192.168.0.102</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost ~]$ cd /etc/sysconfig/network-scripts</span><br><span class="line">[linux@localhost network-scripts]$ nano ifcfg-eth0</span><br><span class="line"></span><br><span class="line">TYPE="Ethernet"</span><br><span class="line">BOOTPROTO="static"</span><br><span class="line">DEVICE="eth0"</span><br><span class="line">ONBOOT="yes"</span><br><span class="line">IPADDR="192.168.0.102"</span><br><span class="line">GATEWAY="192.168.0.1"</span><br><span class="line">NETMASK="255.255.255.0"</span><br><span class="line">DNS1="8.8.8.8"</span><br><span class="line"></span><br><span class="line">[linux@localhost network-scripts]$</span><br></pre></td></tr></table></figure><p>删除Linux物理地址绑定的文件（该文件会在操作系统重启并生成物理地址以后将物理地址绑定到IP上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost network-scripts]$ rm -rf /etc/udev/rules.d/70-persistent-net.rules</span><br><span class="line">[linux@localhost network-scripts]$ reboot</span><br></pre></td></tr></table></figure><h2 id="Mac-连接linux2"><a href="#Mac-连接linux2" class="headerlink" title="Mac 连接linux2"></a><font size="3px">Mac 连接linux2</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">LearningtekiMacBook-Air:myblog Learning$ ssh linux@192.168.0.102</span><br><span class="line">[linux@localhost ~]$ </span><br><span class="line">[linux@localhost ~]$ ip addr</span><br><span class="line">2: eth0: inet 192.168.0.102/24 </span><br><span class="line">[linux@localhost ~]$</span><br></pre></td></tr></table></figure><p>启动elasticsearch</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost network-scripts]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                        PORTS               NAMES</span><br><span class="line">19d9ac40ba76        elasticsearch:5.6.11   "/docker-entrypoint.…"   9 hours ago         Exited (143) 40 minutes ago                       elasticsearch</span><br><span class="line">[root@localhost network-scripts]# docker start 19d9ac40ba76</span><br><span class="line">19d9ac40ba76</span><br><span class="line">[root@localhost network-scripts]#</span><br></pre></td></tr></table></figure><p><a href="http://192.168.0.102:9200/" target="_blank" rel="noopener">http://192.168.0.102:9200/</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// http://192.168.0.102:9200/</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"efBli3S"</span>,</span><br><span class="line">  <span class="attr">"cluster_name"</span>: <span class="string">"elasticsearch"</span>,</span><br><span class="line">  <span class="attr">"cluster_uuid"</span>: <span class="string">"RmnRPDI-T4G8hOH92bX5wQ"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: &#123;</span><br><span class="line">    <span class="attr">"number"</span>: <span class="string">"5.6.11"</span>,</span><br><span class="line">    <span class="attr">"build_hash"</span>: <span class="string">"bc3eef4"</span>,</span><br><span class="line">    <span class="attr">"build_date"</span>: <span class="string">"2018-08-16T15:25:17.293Z"</span>,</span><br><span class="line">    <span class="attr">"build_snapshot"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"lucene_version"</span>: <span class="string">"6.6.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"tagline"</span>: <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="再重启ssh拒绝-Connection-refused"><a href="#再重启ssh拒绝-Connection-refused" class="headerlink" title="再重启ssh拒绝 Connection refused"></a><font size="3px">再重启ssh拒绝 Connection refused</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LearningtekiMacBook-Air:~ Learning$ ssh linux@192.168.0.102</span><br><span class="line">ssh: connect to host 192.168.0.102 port 22: Connection refused</span><br><span class="line">LearningtekiMacBook-Air:~ Learning$</span><br></pre></td></tr></table></figure><p>查看ssh是否启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost ~]$ ps -e | grep ssh</span><br><span class="line">  981 ?        00:00:00 sshd</span><br><span class="line">[linux@localhost ~]$</span><br></pre></td></tr></table></figure><p>查看22端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost ~]$ ss -lnt</span><br><span class="line">State      Recv-Q Send-Q                          Local Address:Port                                         Peer Address:Port              </span><br><span class="line">LISTEN     0      128                                         *:22                                                      *:*                  </span><br><span class="line">LISTEN     0      100                                 127.0.0.1:25                                                      *:*                  </span><br><span class="line">LISTEN     0      128                                      [::]:22                                                   [::]:*                  </span><br><span class="line">LISTEN     0      100                                     [::1]:25                                                   [::]:*                  </span><br><span class="line">[linux@localhost ~]$</span><br></pre></td></tr></table></figure><p>查看hosts名单</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br></pre></td></tr></table></figure><p>添加本地ip和hostname</p><p>– 本机hostname是？ ping 192.168.0.100</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost ~]$ ping 192.168.0.100</span><br><span class="line">PING 192.168.0.100 (192.168.0.100) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.0.100: icmp_seq=1 ttl=64 time=0.165 ms</span><br><span class="line">64 bytes from 192.168.0.100: icmp_seq=2 ttl=64 time=0.274 ms</span><br><span class="line">64 bytes from 192.168.0.100: icmp_seq=3 ttl=64 time=0.374 ms</span><br><span class="line">^C</span><br><span class="line">--- 192.168.0.100 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 received, 0% packet loss, time 2002ms</span><br><span class="line">rtt min/avg/max/mdev = 0.165/0.271/0.374/0.085 ms</span><br><span class="line">[linux@localhost ~]$</span><br></pre></td></tr></table></figure><p>hostname就是ip吧，添加</p><p><code>192.168.0.100 192.168.0.100</code></p><p><strong>ssh hostname</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost ~]$ ssh 192.168.0.100</span><br><span class="line">Warning: Permanently added '192.168.0.100' (ECDSA) to the list of known hosts.</span><br></pre></td></tr></table></figure><p>再次ssh linux2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LearningtekiMacBook-Air:~ Learning$ ssh linux@192.168.0.102</span><br><span class="line">linux@192.168.0.102's password: </span><br><span class="line">[linux@localhost ~]$</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Parallels安装 CentOS7安装&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.runaccepted.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://www.runaccepted.com/tags/Linux/"/>
    
      <category term="Parallels_Desktop_15" scheme="https://www.runaccepted.com/tags/Parallels-Desktop-15/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch安装及实践</title>
    <link href="https://www.runaccepted.com/2020/03/29/ElasticSearch%E5%AE%89%E8%A3%85%E5%8F%8A%E5%AE%9E%E8%B7%B5/"/>
    <id>https://www.runaccepted.com/2020/03/29/ElasticSearch安装及实践/</id>
    <published>2020-03-29T09:15:01.000Z</published>
    <updated>2020-05-06T21:40:07.819Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">elasticsearch kibana logstash ELK 最终选用低版本运行</blockquote><a id="more"></a><h1 id="linux的docker中安装"><a href="#linux的docker中安装" class="headerlink" title="linux的docker中安装"></a><font size="4px">linux的docker中安装</font></h1><h2 id="ElasticSearch5-6-11"><a href="#ElasticSearch5-6-11" class="headerlink" title="ElasticSearch5.6.11"></a><font size="3px">ElasticSearch5.6.11</font></h2><p>安装镜像 docker pull elasticsearch:5.6.11</p><p>创建本地文件 </p><p>mkdir -p /mydata/elasticsearch/config</p><p>mkdir -p /mydata/elasticsearch/data</p><p>echo “http.host: 0.0.0.0” &gt;&gt; /mydata/elasticsearch/config/elasticsearch.yml</p><p>创建容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run </span><br><span class="line">--name elasticsearch  #容器名</span><br><span class="line">-p 9200:9200 -p 9300:9300 #端口映射 9200暴露外部端口 9300 内部集群交互</span><br><span class="line">-e "discovery.type=single-node" </span><br><span class="line">-e ES_JAVA_OPTS="-Xms128m -Xmx128m" #elasticsearch初始内存和最大内存</span><br><span class="line">-v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml #内部配置文件挂载到本地</span><br><span class="line">-v /mydata/elasticsearch/data:/usr/share/elasticsearch/data #数据存储到本地</span><br><span class="line">-d elasticsearch:5.6.11</span><br></pre></td></tr></table></figure><p>命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@192 /]# docker pull elasticsearch:5.6.11</span><br><span class="line">[root@192 /]# </span><br><span class="line">[root@192 /]# mkdir -p /mydata/elasticsearch/config</span><br><span class="line">[root@192 /]# mkdir -p /mydata/elasticsearch/data</span><br><span class="line">[root@192 /]# echo "http.host: 0.0.0.0" &gt;&gt; /mydata/elasticsearch/config/elasticsearch.yml</span><br><span class="line">[root@192 /]# </span><br><span class="line">[root@192 /]# docker run --name elasticsearch -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" -e ES_JAVA_OPTS="-Xms256m -Xmx256m" -v /mydata/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /mydata/elasticsearch/data:/usr/share/elasticsearch/data -d elasticsearch:5.6.11</span><br><span class="line">760ba5e8259c75eb577e493537b632ba4750cfae8f8e14ad361762d2e6a21d2d</span><br><span class="line">[root@192 /]#</span><br><span class="line">[root@192 /]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                                            NAMES</span><br><span class="line">760ba5e8259c        elasticsearch:5.6.11   "/docker-entrypoint.…"   17 seconds ago      Up 14 seconds       0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp   elasticsearch</span><br><span class="line">[root@192 /]# systemctl stop firewalld</span><br><span class="line">[root@192 /]#</span><br></pre></td></tr></table></figure><p>远程访问 <a href="http://192.168.0.101:9200/" target="_blank" rel="noopener">http://192.168.0.101:9200/</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 20200331013255</span><br><span class="line">// http://192.168.0.101:9200/</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"efBli3S"</span>,</span><br><span class="line">  <span class="attr">"cluster_name"</span>: <span class="string">"elasticsearch"</span>,</span><br><span class="line">  <span class="attr">"cluster_uuid"</span>: <span class="string">"RmnRPDI-T4G8hOH92bX5wQ"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: &#123;</span><br><span class="line">    <span class="attr">"number"</span>: <span class="string">"5.6.11"</span>,</span><br><span class="line">    <span class="attr">"build_hash"</span>: <span class="string">"bc3eef4"</span>,</span><br><span class="line">    <span class="attr">"build_date"</span>: <span class="string">"2018-08-16T15:25:17.293Z"</span>,</span><br><span class="line">    <span class="attr">"build_snapshot"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"lucene_version"</span>: <span class="string">"6.6.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"tagline"</span>: <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="es集群"><a href="#es集群" class="headerlink" title="es集群"></a><font size="3px">es集群</font></h3><h4 id="es1"><a href="#es1" class="headerlink" title="es1"></a><font size="3px">es1</font></h4><p>/mydata/elasticsearch/config/elasticsearch.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启跨域</span></span><br><span class="line"><span class="string">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="string">http.cors.allow-origin:</span> <span class="string">"*"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群名</span></span><br><span class="line"><span class="string">cluster.name:</span> <span class="string">elasticsearch</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点名</span></span><br><span class="line"><span class="string">node.name:</span> <span class="number">101</span><span class="bullet">-es1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定该节点是否有资格被选举成为master节点，默认是true，es是默认集群中的第一台机器为master，如果这台机挂了就会重新选举master</span></span><br><span class="line"><span class="string">node.master:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许该节点存储数据(默认开启)</span></span><br><span class="line"><span class="string">node.data:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许任何ip访问</span></span><br><span class="line"><span class="string">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过这个ip列表进行节点发现</span></span><br><span class="line"><span class="string">discovery.zen.ping.unicast.hosts:</span> <span class="string">["192.168.0.101:9300",</span> <span class="string">"192.168.0.101:9301"</span><span class="string">,"192.168.0.101:9302"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Prevent the "split brain" by configuring the majority of nodes (total number of master-eligible nodes / 2 + 1):</span></span><br><span class="line"><span class="comment"># 如果没有这种设置,遭受网络故障的集群就有可能将集群分成两个独立的集群 – 导致脑裂 - 这将导致数据丢失</span></span><br><span class="line"><span class="string">discovery.zen.minimum_master_nodes:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><p>修改文件名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost mydata]$ mv elasticsearch elasticsearch1</span><br></pre></td></tr></table></figure><p>创建容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost /]$ docker run --name es1 -p 9200:9200 -p 9300:9300 -e ES_JAVA_OPTS="-Xms128m -Xmx128m" -v /mydata/elasticsearch1/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /mydata/elasticsearch1/data:/usr/share/elasticsearch/data -d elasticsearch:5.6.11</span><br><span class="line">f3f915ff2443bc850b80831829983e7090c8988d420588266001c82898d216b7</span><br><span class="line">[linux@localhost /]$ </span><br><span class="line">[linux@localhost /]$ docker ps</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                                            NAMES</span><br><span class="line">f3f915ff2443        elasticsearch:5.6.11   "/docker-entrypoint.…"   39 seconds ago      Up 33 seconds       0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp   es1</span><br><span class="line">[linux@localhost /]$ docker logs f3f915ff2443</span><br><span class="line">ERROR: [1] bootstrap checks failed</span><br><span class="line">[1]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span><br></pre></td></tr></table></figure><p>修改linux进程数限制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost /]$ su</span><br><span class="line">密码：</span><br><span class="line">[root@localhost /]# nano /etc/sysctl.conf</span><br><span class="line">vm.max_map_count=655360</span><br><span class="line">[root@localhost /]# sysctl -p</span><br><span class="line">vm.max_map_count = 655360</span><br></pre></td></tr></table></figure><h4 id="es2"><a href="#es2" class="headerlink" title="es2"></a><font size="3px">es2</font></h4><p>创建文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost mydata]$ cp -rf elasticsearch1 elasticsearch2</span><br><span class="line">[linux@localhost mydata]$ ls</span><br><span class="line">elasticsearch1  elasticsearch2  kibana  logstash</span><br></pre></td></tr></table></figure><p>config/elasticsearch.yml 仅修改节点名 101-es2</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost /]$ docker run --name es2 -p 9201:9200 -p 9301:9300 -e ES_JAVA_OPTS="-Xms128m -Xmx128m" -v /mydata/elasticsearch2/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /mydata/elasticsearch2/data:/usr/share/elasticsearch/data -d elasticsearch:5.6.11</span><br></pre></td></tr></table></figure><h4 id="es3"><a href="#es3" class="headerlink" title="es3"></a><font size="3px">es3</font></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost mydata]$ cp -rf elasticsearch1 elasticsearch3</span><br><span class="line">[linux@localhost mydata]$ ls</span><br><span class="line">elasticsearch1  elasticsearch2  elasticsearch3 kibana  logstash</span><br></pre></td></tr></table></figure><p>config/elasticsearch.yml 仅修改节点名 101-es3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[linux@localhost /]$ docker run --name es3 -p 9202:9200 -p 9302:9300 -e ES_JAVA_OPTS="-Xms128m -Xmx128m" -v /mydata/elasticsearch3/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml -v /mydata/elasticsearch3/data:/usr/share/elasticsearch/data -d elasticsearch:5.6.11</span><br></pre></td></tr></table></figure><h3 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a><font size="3px">测试连接</font></h3><p>es2  当选</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET _cat/master</span><br><span class="line">4glKS6mYRO2M1aGwMbSWPQ 172.17.0.4 172.17.0.4 101-es2</span><br><span class="line"></span><br><span class="line">GET _cat/health</span><br><span class="line">1585690357 21:32:37 elasticsearch green 3 3 2 1 0 0 0 0 - 100.0%</span><br><span class="line"></span><br><span class="line">GET /_cat/nodes</span><br><span class="line">172.17.0.5 48 93 5 0.32 0.96 0.66 mdi - 101-es3</span><br><span class="line">172.17.0.2 55 93 5 0.32 0.96 0.66 mdi - 101-es1</span><br><span class="line">172.17.0.4 58 93 5 0.32 0.96 0.66 mdi * 101-es2</span><br></pre></td></tr></table></figure><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a><font size="3px">原理</font></h3><p>一个运行中的 Elasticsearch 实例称为一个 节点，而集群是由一个或者多个拥有相同 cluster.name 配置的节点组成， 它们共同承担数据和负载的压力。当有节点加入集群中或者从集群中移除节点时，<font color="#f00">集群将会重新平均分布所有的数据</font></p><p>当一个节点被选举成为 <code>主</code>节点时，<font color="#f00">它将负责管理集群范围内的所有变更</font>，例如增加、删除索引，或者增加、删除节点等。 而<font color="#f00">主节点并不需要涉及到文档级别的变更和搜索等操作</font>，所以当集群只拥有一个主节点的情况下，即使流量的增加它也不会成为瓶颈。 任何节点都可以成为主节点。我们的示例集群就只有一个节点，所以它同时也成为了主节点。</p><p>作为用户，我们可以将请求发送到 集群中的任何节点 ，包括主节点。 每个节点都知道任意文档所处的位置，并且能够将我们的请求直接转发到存储我们所需文档的节点。 无论我们将请求发送到哪个节点，它都能负责从各个包含我们所需文档的节点收集回数据，并将最终结果返回給客户端。 Elasticsearch 对这一切的管理都是透明的。</p><p>当集群中只有一个节点在运行时，意味着会有一个单点故障问题——没有冗余。 你可以在同一个目录内，完全依照启动第一个节点的方式来启动一个新节点（参考安装并运行 Elasticsearch）。多个节点可以共享同一个目录。</p><p> 当你在同一台机器上启动了第二个节点时，只要它和第一个节点有同样的 cluster.name 配置，它就会自动发现集群并加入到其中。 但是在不同机器上启动节点的时候，为了加入到同一集群，你需要配置一个可连接到的单播主机列表。</p><h4 id="分片"><a href="#分片" class="headerlink" title="分片"></a><font size="3px">分片</font></h4><p>查看分片信息 p主 r副</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">GET /_cat/shards</span><br><span class="line"></span><br><span class="line">customer 1 p STARTED 0  162b 172.17.0.4 101-es2</span><br><span class="line">customer 1 r STARTED 0  162b 172.17.0.2 101-es1</span><br><span class="line">customer 3 r STARTED 1 3.3kb 172.17.0.5 101-es3</span><br><span class="line">customer 3 p STARTED 1 3.3kb 172.17.0.2 101-es1</span><br><span class="line">customer 4 p STARTED 0  162b 172.17.0.4 101-es2</span><br><span class="line">customer 4 r STARTED 0  162b 172.17.0.2 101-es1</span><br><span class="line">customer 2 r STARTED 0  162b 172.17.0.4 101-es2</span><br><span class="line">customer 2 p STARTED 0  162b 172.17.0.5 101-es3</span><br><span class="line">customer 0 r STARTED 0  162b 172.17.0.5 101-es3</span><br><span class="line">customer 0 p STARTED 0  162b 172.17.0.2 101-es1</span><br><span class="line">.kibana  0 p STARTED 1 3.2kb 172.17.0.4 101-es2</span><br><span class="line">.kibana  0 r STARTED 1 3.2kb 172.17.0.5 101-es3</span><br></pre></td></tr></table></figure><p>查看集群信息</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET /_cluster/health</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"cluster_name"</span>: <span class="string">"elasticsearch"</span>,</span><br><span class="line">  <span class="attr">"status"</span>: <span class="string">"green"</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"number_of_nodes"</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="attr">"number_of_data_nodes"</span>: <span class="number">3</span>, </span><br><span class="line">  "active_primary_shards": 6, #es2 3 es3 1 es1 2</span><br><span class="line">  "active_shards": 12,</span><br><span class="line">  "relocating_shards": 0,</span><br><span class="line">  "initializing_shards": 0,</span><br><span class="line">  "unassigned_shards": 0,</span><br><span class="line">  "delayed_unassigned_shards": 0,</span><br><span class="line">  "number_of_pending_tasks": 0,</span><br><span class="line">  "number_of_in_flight_fetch": 0,</span><br><span class="line">  "task_max_waiting_in_queue_millis": 0,</span><br><span class="line">  "active_shards_percent_as_number": 100</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>停止es2</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">GET _cat/master</span><br><span class="line">xWuBdPbpSMqkCCbIfY07Mg 172.17.0.2 172.17.0.2 101-es1</span><br><span class="line"></span><br><span class="line">GET /_cat/shards</span><br><span class="line"></span><br><span class="line">customer 1 p STARTED    0  162b 172.17.0.2 101-es1</span><br><span class="line">customer 1 r UNASSIGNED                    </span><br><span class="line">customer 3 r STARTED    1 3.4kb 172.17.0.5 101-es3</span><br><span class="line">customer 3 p STARTED    1 3.4kb 172.17.0.2 101-es1</span><br><span class="line">customer 4 p STARTED    0  162b 172.17.0.2 101-es1</span><br><span class="line">customer 4 r UNASSIGNED                    </span><br><span class="line">customer 2 p STARTED    0  162b 172.17.0.5 101-es3</span><br><span class="line">customer 2 r UNASSIGNED                    </span><br><span class="line">customer 0 r STARTED    0  162b 172.17.0.5 101-es3</span><br><span class="line">customer 0 p STARTED    0  162b 172.17.0.2 101-es1</span><br><span class="line">.kibana  0 p STARTED    1 3.2kb 172.17.0.5 101-es3</span><br><span class="line">.kibana  0 r UNASSIGNED   </span><br><span class="line"></span><br><span class="line">#重新分配</span><br><span class="line">customer 1 r STARTED 0  162b 172.17.0.5 101-es3</span><br><span class="line">customer 1 p STARTED 0  162b 172.17.0.2 101-es1</span><br><span class="line">customer 3 r STARTED 1 3.4kb 172.17.0.5 101-es3</span><br><span class="line">customer 3 p STARTED 1 3.4kb 172.17.0.2 101-es1</span><br><span class="line">customer 4 r STARTED 0  162b 172.17.0.5 101-es3</span><br><span class="line">customer 4 p STARTED 0  162b 172.17.0.2 101-es1</span><br><span class="line">customer 2 p STARTED 0  162b 172.17.0.5 101-es3</span><br><span class="line">customer 2 r STARTED 0  162b 172.17.0.2 101-es1</span><br><span class="line">customer 0 r STARTED 0  162b 172.17.0.5 101-es3</span><br><span class="line">customer 0 p STARTED 0  162b 172.17.0.2 101-es1</span><br><span class="line">.kibana  0 p STARTED 1 3.2kb 172.17.0.5 101-es3</span><br><span class="line">.kibana  0 r STARTED 1 3.2kb 172.17.0.2 101-es1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET /_cluster/health</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"cluster_name"</span>: <span class="string">"elasticsearch"</span>,</span><br><span class="line">  <span class="attr">"status"</span>: <span class="string">"green"</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"number_of_nodes"</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">"number_of_data_nodes"</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">"active_primary_shards"</span>: <span class="number">6</span>,</span><br><span class="line">  <span class="attr">"active_shards"</span>: <span class="number">12</span>,</span><br><span class="line">  <span class="attr">"relocating_shards"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"initializing_shards"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"unassigned_shards"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"delayed_unassigned_shards"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"number_of_pending_tasks"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"number_of_in_flight_fetch"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"task_max_waiting_in_queue_millis"</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">"active_shards_percent_as_number"</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分片原理</p><p><img src="/2020/03/29/ElasticSearch安装及实践/liang.png" alt>)</p><p>当第二个节点加入到集群后，3个 副本分片 将会分配到这个节点上——每个主分片对应一个副本分片。 这意味着当集群内任何一个节点出现问题时，我们的数据都完好无损。</p><p>所有新近被索引的文档都将<strong>会保存在主分片上</strong>，然后被并行的复制到对应的副本分片上。这就保证了我们既可以从主分片又可以从副本分片上获得文档。</p><p>cluster-health 现在展示的状态为 green ，这表示所有6个分片（包括3个主分片和3个副本分片）都在正常运行。</p><h3 id="集群健康"><a href="#集群健康" class="headerlink" title="集群健康"></a><font size="3px">集群健康</font></h3><p>GET /_cluster/health</p><p>status 字段指示着当前集群在总体上是否工作正常。它的三种颜色含义如下： </p><p>green 所有的主分片和副本分片都正常运行。</p><p>yellow 所有的主分片都正常运行，但不是所有的副本分片都正常运行。</p><p>red 有主分片没能正常运行。</p><h4 id="水平扩容"><a href="#水平扩容" class="headerlink" title="水平扩容"></a><font size="3px">水平扩容</font></h4><p>三个节点的集群为了分散负载而对分片进行重新分配</p><p>P0的副本存在R0中，P1的副本存在R1中，P2的副本存在R2中，即使node3 挂了，数据仍完整</p><p><img src="/2020/03/29/ElasticSearch安装及实践/three.png" alt></p><p> 读操作——搜索和返回数据——可以同时被主分片 或 副本分片所处理，所以当你拥有越多的副本分片时，也将拥有越高的吞吐量。</p><p>在运行中的集群上是可以动态调整副本分片数目的, 我们可以按需伸缩集群.让我们把副本数从默认的 1 增加到 2 </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUT /blogs/_settings</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"number_of_replicas"</span> : <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关闭Node 1 的同时也失去了主分片 1 和 2 ，并且在缺失主分片的时候索引也不能正常工作。 如果此时来检查集群的状况，我们看到的状态将会为 red ：不是所有主分片都在正常工作。</p><p>幸运的是，在其它节点上存在着这两个主分片的完整副本， 所以新的主节点立即将这些分片在 Node 2 和 Node 3 上对应的副本分片提升为主分片， 此时集群的状态将会为 yellow（不是green是因为我们之前设置主分片存在两个副本，而现在只剩一个了） 。 这个提升主分片的过程是瞬间发生的，如同按下一个开关一般</p><h4 id="脑裂问题"><a href="#脑裂问题" class="headerlink" title="脑裂问题"></a><font size="3px">脑裂问题</font></h4><p>集群中不同的节点对于master的选择出现了分歧，出现了多个master竞争，导致主分片和副本的识别也发生了分歧，对一些分歧中的分片标识为了坏片。</p><p><strong>脑裂问题可能的成因 - 主不能工作了就得选</strong> </p><ol><li><p>网络问题：集群间的网络延迟导致一些节点访问不到master，认为master挂掉了从而选举出新的master，并对master上的分片和副本标红，分配新的主分片</p></li><li><p>节点负载：主节点的角色既为master又为data，访问量较大时可能会导致ES停止响应造成大面积延迟，此时其他节点得不到主节点的响应认为主节点挂掉了，会重新选取主节点。</p></li><li><p>内存回收：data节点上的ES进程占用的内存较大，引发JVM的大规模内存回收，造成ES进程失去响应。</p></li></ol><p><strong>脑裂问题解决方案</strong></p><ol><li><p>减少误判：discovery.zen.ping_timeout节点状态的响应时间，默认为3s，可以适当调大，如果master在该响应时间的范围内没有做出响应应答，判断该节点已经挂掉了。调大参数（如6s，discovery.zen.ping_timeout:6），可适当减少误判。</p></li><li><p>选举触发 discovery.zen.minimum_master_nodes:1。</p><p>discovery.zen.minimum_master_nodes（默认是1）：这个参数控制的是，一个节点需要看到的具有master节点资格的最小数量，然后才能在集群中做操作。官方的推荐值是(N/2)+1，其中N是具有master资格的节点的数量（我们的情况是3，因此这个参数设置为2，但对于只有2个节点的情况，设置为2就有些问题了，一个节点DOWN掉后，你肯定连不上2台服务器了，这点需要注意）。</p><p>增大该参数，当该值为2时，我们可以设置master的数量为3，这样，挂掉一台，其他两台都认为主节点挂掉了，才进行主节点选举。</p></li></ol><ol start="3"><li><p>角色分离：即master节点与data节点分离，限制角色</p><p>主节点配置为： node.master: true   ##作为master节点</p><p>​                            node.data: false   ##不作为存储数据节点</p><p>从节点配置为： node.master: false  </p><p>​                            node.data: true</p></li></ol><p><strong>最终考虑到资源有限，解决方案如下：</strong></p><p>增加一台物理机，这样，一共有了三台物理机。在这三台物理机上，搭建了6个ES的节点，三个data节点，三个master节点（每台物理机分别起了一个data和一个master），3个master节点，目的是达到（n/2）+1等于2的要求，这样挂掉一台master后（不考虑data），n等于2，满足参数，其他两个master节点都认为master挂掉之后开始重新选举</p><p><img src="/2020/03/29/ElasticSearch安装及实践/master.png" alt></p><h2 id="Kibana5-6-11"><a href="#Kibana5-6-11" class="headerlink" title="Kibana5.6.11"></a><font size="3px">Kibana5.6.11</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@192 /]# docker pull kibana:5.6.11</span><br><span class="line"></span><br><span class="line">[root@192 /]# docker run --name kibana -v /mydata/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml -p 5601:5601 -d kibana:5.6.11</span><br><span class="line"></span><br><span class="line">25d1bd1a0531c0aec95e7885adf82dc14adbb71df43d4dbc15d6fee7cce58e34</span><br><span class="line">docker: Error response from daemon: driver failed programming external connectivity on endpoint kibana (84808062bec07bb507621f089d0f31d73cc7c3f57402cb6c61444cffddbcc14d):  (iptables failed: iptables --wait -t nat -A DOCKER -p tcp -d 0/0 --dport 5601 -j DNAT --to-destination 172.17.0.3:5601 ! -i docker0: iptables: No chain/target/match by that name.</span><br><span class="line"> (exit status 1)).</span><br><span class="line">[root@192 /]#</span><br></pre></td></tr></table></figure><p>重启docker？？</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@192 /]# </span><br><span class="line">[root@192 /]# systemctl restart docker</span><br><span class="line">[root@192 /]# </span><br><span class="line">[root@192 /]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED              STATUS                       PORTS               NAMES</span><br><span class="line">25d1bd1a0531        kibana:5.6.11          "/docker-entrypoint.…"   About a minute ago   Created                                          kibana</span><br><span class="line">760ba5e8259c        elasticsearch:5.6.11   "/docker-entrypoint.…"   21 minutes ago       Exited (143) 7 seconds ago                       elasticsearch</span><br><span class="line">[root@192 /]# docker start 25d1bd1a0531</span><br><span class="line">25d1bd1a0531</span><br><span class="line">[root@192 /]# docker start 760ba5e8259c</span><br><span class="line">760ba5e8259c</span><br><span class="line">[root@192 /]#</span><br></pre></td></tr></table></figure><p>访问 <a href="http://192.168.0.101:5601/" target="_blank" rel="noopener">http://192.168.0.101:5601/</a></p><p><img src="/2020/03/29/ElasticSearch安装及实践/kibana5.png" alt></p><p>修改配置文件 原kibana.yml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Kibana is served by a back end server. This setting specifies the port to use.</span><br><span class="line"><span class="meta">#</span>server.port: 5601</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Specifies the address to which the Kibana server will bind. IP addresses and host names are both valid values.</span><br><span class="line"><span class="meta">#</span> The default is 'localhost', which usually means remote machines will not be able to connect.</span><br><span class="line"><span class="meta">#</span> To allow connections from remote users, set this parameter to a non-loopback address.</span><br><span class="line"><span class="meta">#</span>server.host: "localhost"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Enables you to specify a path to mount Kibana at if you are running behind a proxy. This only affects</span><br><span class="line"><span class="meta">#</span> the URLs generated by Kibana, your proxy is expected to remove the basePath value before forwarding requests</span><br><span class="line"><span class="meta">#</span> to Kibana. This setting cannot end in a slash.</span><br><span class="line"><span class="meta">#</span>server.basePath: ""</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> The maximum payload size in bytes for incoming server requests.</span><br><span class="line"><span class="meta">#</span>server.maxPayloadBytes: 1048576</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> The Kibana server's name.  This is used for display purposes.</span><br><span class="line"><span class="meta">#</span>server.name: "your-hostname"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> The URL of the Elasticsearch instance to use for all your queries.</span><br><span class="line"><span class="meta">#</span>elasticsearch.url: "http://localhost:9200"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> When this setting's value is true Kibana uses the hostname specified in the server.host</span><br><span class="line"><span class="meta">#</span> setting. When the value of this setting is false, Kibana uses the hostname of the host</span><br><span class="line"><span class="meta">#</span> that connects to this Kibana instance.</span><br><span class="line"><span class="meta">#</span>elasticsearch.preserveHost: true</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Kibana uses an index in Elasticsearch to store saved searches, visualizations and</span><br><span class="line"><span class="meta">#</span> dashboards. Kibana creates a new index if the index doesn't already exist.</span><br><span class="line"><span class="meta">#</span>kibana.index: ".kibana"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> The default application to load.</span><br><span class="line"><span class="meta">#</span>kibana.defaultAppId: "discover"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> If your Elasticsearch is protected with basic authentication, these settings provide</span><br><span class="line"><span class="meta">#</span> the username and password that the Kibana server uses to perform maintenance on the Kibana</span><br><span class="line"><span class="meta">#</span> index at startup. Your Kibana users still need to authenticate with Elasticsearch, which</span><br><span class="line"><span class="meta">#</span> is proxied through the Kibana server.</span><br><span class="line"><span class="meta">#</span>elasticsearch.username: "user"</span><br><span class="line"><span class="meta">#</span>elasticsearch.password: "pass"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Enables SSL and paths to the PEM-format SSL certificate and SSL key files, respectively.</span><br><span class="line"><span class="meta">#</span> These settings enable SSL for outgoing requests from the Kibana server to the browser.</span><br><span class="line"><span class="meta">#</span>server.ssl.enabled: false</span><br><span class="line"><span class="meta">#</span>server.ssl.certificate: /path/to/your/server.crt</span><br><span class="line"><span class="meta">#</span>server.ssl.key: /path/to/your/server.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Optional settings that provide the paths to the PEM-format SSL certificate and key files.</span><br><span class="line"><span class="meta">#</span> These files validate that your Elasticsearch backend uses the same key files.</span><br><span class="line"><span class="meta">#</span>elasticsearch.ssl.certificate: /path/to/your/client.crt</span><br><span class="line"><span class="meta">#</span>elasticsearch.ssl.key: /path/to/your/client.key</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Optional setting that enables you to specify a path to the PEM file for the certificate</span><br><span class="line"><span class="meta">#</span> authority for your Elasticsearch instance.</span><br><span class="line"><span class="meta">#</span>elasticsearch.ssl.certificateAuthorities: [ "/path/to/your/CA.pem" ]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> To disregard the validity of SSL certificates, change this setting's value to 'none'.</span><br><span class="line"><span class="meta">#</span>elasticsearch.ssl.verificationMode: full</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Time in milliseconds to wait for Elasticsearch to respond to pings. Defaults to the value of</span><br><span class="line"><span class="meta">#</span> the elasticsearch.requestTimeout setting.</span><br><span class="line"><span class="meta">#</span>elasticsearch.pingTimeout: 1500</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Time in milliseconds to wait for responses from the back end or Elasticsearch. This value</span><br><span class="line"><span class="meta">#</span> must be a positive integer.</span><br><span class="line"><span class="meta">#</span>elasticsearch.requestTimeout: 30000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> List of Kibana client-side headers to send to Elasticsearch. To send *no* client-side</span><br><span class="line"><span class="meta">#</span> headers, set this value to [] (an empty list).</span><br><span class="line"><span class="meta">#</span>elasticsearch.requestHeadersWhitelist: [ authorization ]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten</span><br><span class="line"><span class="meta">#</span> by client-side headers, regardless of the elasticsearch.requestHeadersWhitelist configuration.</span><br><span class="line"><span class="meta">#</span>elasticsearch.customHeaders: &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Time in milliseconds for Elasticsearch to wait for responses from shards. Set to 0 to disable.</span><br><span class="line"><span class="meta">#</span>elasticsearch.shardTimeout: 0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying.</span><br><span class="line"><span class="meta">#</span>elasticsearch.startupTimeout: 5000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Specifies the path where Kibana creates the process ID file.</span><br><span class="line"><span class="meta">#</span>pid.file: /var/run/kibana.pid</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Enables you specify a file where Kibana stores log output.</span><br><span class="line"><span class="meta">#</span>logging.dest: stdout</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Set the value of this setting to true to suppress all logging output.</span><br><span class="line"><span class="meta">#</span>logging.silent: false</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Set the value of this setting to true to suppress all logging output other than error messages.</span><br><span class="line"><span class="meta">#</span>logging.quiet: false</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Set the value of this setting to true to log all events, including system usage information</span><br><span class="line"><span class="meta">#</span> and all requests.</span><br><span class="line"><span class="meta">#</span>logging.verbose: false</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Set the interval in milliseconds to sample system and process performance</span><br><span class="line"><span class="meta">#</span> metrics. Minimum is 100ms. Defaults to 5000.</span><br><span class="line"><span class="meta">#</span>ops.interval: 5000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> The default locale. This locale can be used in certain circumstances to substitute any missing</span><br><span class="line"><span class="meta">#</span> translations.</span><br><span class="line"><span class="meta">#</span>i18n.defaultLocale: "en"</span><br></pre></td></tr></table></figure><p>创建 /mydata/kibana/config/kibana.yml</p><p>kibana配置文件挂载到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@192 /]# mkdir -p /mydata/kibana/config</span><br><span class="line">[root@192 /]# cd /mydata/kibana/config</span><br><span class="line">[root@192 config]# nano kibana.yml</span><br><span class="line">bash: nano: 未找到命令</span><br><span class="line">[root@192 config]# yum install nano</span><br><span class="line">[root@192 config]# nano kibana.yml</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>############################################</span><br><span class="line">server.port: 5601</span><br><span class="line"></span><br><span class="line">server.host: "0.0.0.0"</span><br><span class="line"></span><br><span class="line">elasticsearch.url: "http://192.168.0.101:9200"</span><br><span class="line"></span><br><span class="line">elasticsearch.requestTimeout: 90000</span><br><span class="line"></span><br><span class="line">i18n.defaultLocale: "zh-CN"</span><br><span class="line"><span class="meta">#</span>#################################################</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@192 config]# docker rm 25d1bd1a0531</span><br><span class="line">25d1bd1a0531</span><br><span class="line">[root@192 config]# docker run --name kibana -v /mydata/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml -p 5601:5601 -d kibana:5.6.11</span><br><span class="line">7122d84209e4d082dc6e0e18065567eb0bbfd5e4aa3017b3ff8d8457c217b66b</span><br><span class="line"></span><br><span class="line">[root@192 config]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                                            NAMES</span><br><span class="line">7122d84209e4        kibana:5.6.11          "/docker-entrypoint.…"   25 minutes ago      Up 10 minutes       0.0.0.0:5601-&gt;5601/tcp                           kibana</span><br><span class="line">760ba5e8259c        elasticsearch:5.6.11   "/docker-entrypoint.…"   About an hour ago   Up 49 minutes       0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp   elasticsearch</span><br><span class="line">[root@192 config]# </span><br><span class="line">[root@192 config]# </span><br><span class="line">[root@192 config]# docker logs 7122d84209e4</span><br><span class="line">"tags":["status","ui settings","info"],"pid":9,"state":"green","message":"Status changed from yellow to green - Ready","prevState":"yellow","prevMsg":"Elasticsearch plugin is yellow"&#125;</span><br></pre></td></tr></table></figure><h2 id="logstash5-6-11"><a href="#logstash5-6-11" class="headerlink" title="logstash5.6.11"></a><font size="3px">logstash5.6.11</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@192 config]# docker pull logstash:5.6.11</span><br><span class="line">[root@192 config]# mkdir -p /mydata/logstash</span><br><span class="line">[root@192 config]# cd /mydata/logstash</span><br><span class="line">[root@192 logstash]# nano logstash.conf</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>################################################</span><br><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 4560</span><br><span class="line">    codec =&gt; json_lines</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; ["192.168.0.101:9200"]</span><br><span class="line">    index =&gt; "applog"</span><br><span class="line">    #user =&gt; "elastic"</span><br><span class="line">    #password =&gt; "changeme"</span><br><span class="line">  &#125;</span><br><span class="line">  stdout&#123; codec =&gt; rubydebug&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span>###################################################</span><br><span class="line"></span><br><span class="line">[root@192 logstash]# </span><br><span class="line">[root@192 logstash]# pwd</span><br><span class="line">/mydata/logstash</span><br><span class="line">[root@192 logstash]# docker run --name logstash -p 4560:4560 -v /mydata/logstash/logstash.conf:/etc/logstash.conf --link elasticsearch:elasticsearch -d logstash:5.6.11 logstash -f /etc/logstash.conf</span><br><span class="line">c7473e2145bc7478835f08b08caf8134b126899a4031b78baf5b234c732bd7fa</span><br><span class="line">[root@192 logstash]# </span><br><span class="line">[root@192 logstash]# </span><br><span class="line">[root@192 logstash]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS              PORTS                                            NAMES</span><br><span class="line">c7473e2145bc        logstash:5.6.11        "/docker-entrypoint.…"   6 seconds ago       Up 3 seconds        0.0.0.0:4560-&gt;4560/tcp                           logstash</span><br><span class="line">7122d84209e4        kibana:5.6.11          "/docker-entrypoint.…"   About an hour ago   Up 49 minutes       0.0.0.0:5601-&gt;5601/tcp                           kibana</span><br><span class="line">760ba5e8259c        elasticsearch:5.6.11   "/docker-entrypoint.…"   2 hours ago         Up 2 hours          0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp   elasticsearch</span><br><span class="line">[root@192 logstash]#</span><br></pre></td></tr></table></figure><h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a><font size="4px">linux</font></h1><h2 id="ElasticSearch-存储和检索数据"><a href="#ElasticSearch-存储和检索数据" class="headerlink" title="ElasticSearch 存储和检索数据"></a><font size="3px">ElasticSearch 存储和检索数据</font></h2><p><a href="https://www.elastic.co/cn/downloads/elasticsearch" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/elasticsearch</a></p><p>elasticsearch只能用非root启动</p><p>拷贝至/usr/local/elasticsearch-7.6.1</p><p>编译 elasticsearch.yml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@192 Downloads]# tar zxvf elasticsearch-7.6.1-linux-x86_64.tar.gz</span><br><span class="line">[root@192 Downloads]# ls</span><br><span class="line">elasticsearch-7.6.1  elasticsearch-7.6.1-linux-x86_64.tar.gz  tomcat-users.xml</span><br><span class="line">[root@192 Downloads]# cp -rf elasticsearch-7.6.1 /usr/local/elasticsearch-7.6.1</span><br><span class="line">[root@192 Downloads]# cd /usr/local/elasticsearch-7.6.1</span><br><span class="line">[root@192 elasticsearch-7.6.1]# ls</span><br><span class="line">bin  config  jdk  lib  LICENSE.txt  logs  modules  NOTICE.txt  plugins  README.asciidoc</span><br><span class="line">[root@192 elasticsearch-7.6.1]# cd config</span><br><span class="line">[root@192 config]# ls</span><br><span class="line">elasticsearch.yml  jvm.options  log4j2.properties  role_mapping.yml  roles.yml  users  users_roles</span><br><span class="line">[root@192 config]# nano elasticsearch.yml</span><br></pre></td></tr></table></figure><p><strong>elasticsearch.yml</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">cluster.name: es-linux</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> ------------------------------------ Node ------------------------------------</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Use a descriptive name for the node:</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">node.name: node-linux</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Add custom attributes to the node:</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> node.attr.rack: r1</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> ----------------------------------- Paths ------------------------------------</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Path to directory where to store the data (separate multiple locations by comma):</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">path.data: /usr/local/elasticsearch-7.6.1/data</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Path to log files:</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">path.logs: /usr/local/elasticsearch-7.6.1/logs</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> ----------------------------------- Memory -----------------------------------</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Lock the memory on startup:</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">bootstrap.memory_lock: false</span><br><span class="line">bootstrap.system_call_filter: false</span><br><span class="line"><span class="meta">#</span> ---------------------------------- Network -----------------------------------</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Set the bind address to a specific IP (IPv4 or IPv6):</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Set a custom port for HTTP:</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">http.port: 9200</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> --------------------------------- Discovery ----------------------------------</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Pass an initial list of hosts to perform discovery when this node is started:</span><br><span class="line"><span class="meta">#</span> The default list of hosts is ["127.0.0.1", "[::1]"]</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">discovery.zen.ping.unicast.hosts: ["127.0.0.1","192.168.0.100","192.168.0.112"]</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> Bootstrap the cluster using an initial set of master-eligible nodes:</span><br><span class="line"><span class="meta">#</span></span><br><span class="line">cluster.initial_master_nodes: ["es-linux"]</span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span> For more information, consult the discovery and cluster formation module documentation.</span><br><span class="line"><span class="meta">#</span></span><br></pre></td></tr></table></figure><p><strong>jvm.options</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-Xms256m</span><br><span class="line">-Xmx256m</span><br></pre></td></tr></table></figure><p><strong>创建用户和权限</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@192 bin]# adduser elasticsearch</span><br><span class="line">[root@192 bin]# passwd elasticsearch</span><br><span class="line"></span><br><span class="line">[root@192 local]# chown -R elasticsearch:elasticsearch elasticsearch-7.6.1</span><br></pre></td></tr></table></figure><p><font color="#f00">ERROR Unable to invoke factory method in class org.apache.logging.log4j.core.appender.RollingFileAppender for element RollingFile</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@192 bin]# yum install -y log4j</span><br></pre></td></tr></table></figure><p><font color="#f00">max file descriptors [4096] for elasticsearch process likely too low, increase to at least [65536]</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@192 bin]# nano /etc/security/limits.conf</span><br><span class="line"></span><br><span class="line">*               soft    nofile          65536</span><br><span class="line">*               hard    nofile          65536</span><br><span class="line">*               soft    nproc           4096</span><br><span class="line">*               hard    nproc           4096</span><br></pre></td></tr></table></figure><p><font color="#f00">max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">vm.max_map_count=262144</span><br><span class="line"></span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><p><strong>运行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@192 bin]# su elasticsearch</span><br><span class="line">[elasticsearch@192 bin]$ ./elasticsearch</span><br></pre></td></tr></table></figure><p><a href="http://192.168.0.113:9200/" target="_blank" rel="noopener">http://192.168.0.113:9200/</a></p><h2 id="Logstash-收集数据保存到es"><a href="#Logstash-收集数据保存到es" class="headerlink" title="Logstash 收集数据保存到es"></a><font size="3px">Logstash 收集数据保存到es</font></h2><p><a href="https://www.elastic.co/cn/downloads/logstash" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/logstash</a> 解压后进入config文件夹下</p><p>nano  config/logstash-sample.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> Sample Logstash configuration for creating a simple</span><br><span class="line"><span class="meta">#</span> Beats -&gt; Logstash -&gt; Elasticsearch pipeline.</span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5044</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; ["localhost:9200"]</span><br><span class="line">    index =&gt; "%&#123;[@metadata][beat]&#125;-%&#123;[@metadata][version]&#125;-%&#123;+YYYY.MM.dd&#125;"</span><br><span class="line">    #user =&gt; "elastic"</span><br><span class="line">    #password =&gt; "changeme"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>logstash-sample.conf中的内容改为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 4560</span><br><span class="line">    codec =&gt; json_lines</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; ["192.168.0.113:9200"]</span><br><span class="line">    index =&gt; "applog"</span><br><span class="line">    #user =&gt; "elastic"</span><br><span class="line">    #password =&gt; "changeme"</span><br><span class="line">  &#125;</span><br><span class="line">  stdout&#123; codec =&gt; rubydebug&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>安装json_lines</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./logstash-plugin list|grep json-lines</span><br><span class="line">./logstash-plugin install logstash-codec-json_lines</span><br></pre></td></tr></table></figure><h2 id="Kibana-可视化界面"><a href="#Kibana-可视化界面" class="headerlink" title="Kibana 可视化界面"></a><font size="3px">Kibana 可视化界面</font></h2><p><a href="https://www.elastic.co/cn/downloads/kibana" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/kibana</a></p><p>config/kibana.yml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server.port: 5601</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> To allow connections from remote users</span><br><span class="line">server.host: "192.168.0.100"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> The URLs of the Elasticsearch instances to use for all your queries.</span><br><span class="line">elasticsearch.hosts: ["http://192.168.0.100:9200"]</span><br></pre></td></tr></table></figure><p>虚拟机中ELK全开+本机Intellij项目运行 笔记本完全卡死了。。。故采用树莓派安装ELK</p><h1 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a><font size="3px">树莓派</font></h1><p><a href="https://zhuanlan.zhihu.com/p/23111516" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/23111516</a></p><h2 id="elasticsearch-1-0-1"><a href="#elasticsearch-1-0-1" class="headerlink" title="elasticsearch-1.0.1"></a><font size="3px">elasticsearch-1.0.1</font></h2><p><a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-1-0-1" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/past-releases/elasticsearch-1-0-1</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">pi@pi:/usr/local $ cd es1</span><br><span class="line">pi@pi:/usr/local/es1 $ ls</span><br><span class="line">bin  config  lib  LICENSE.txt  NOTICE.txt  README.textile</span><br><span class="line">root@pi:/usr/local/es1# cd config</span><br><span class="line">root@pi:/usr/local/es1/config# nano elasticsearch.yml </span><br><span class="line"><span class="meta">#</span> 集群名字，如果要搭集群的话，同个网段内的Elasticsearch应用集群名取得一样就行了，应用会自动广播组成集群的，非常方便</span><br><span class="line">cluster.name: es-pi</span><br><span class="line"><span class="meta">#</span> 节点的名称，这个应用的节点名字叫啥，用于区分同个集群里的不同节点</span><br><span class="line">node.name: "node-pi"</span><br><span class="line"><span class="meta">#</span> 是否为主节点，一个集群里必须有一个主节点，也只能有一个主节点。当出现一个主节点后，其他master: true的节点都只会成为备用主节点，只有当之前的主节点挂了的时候其他备用的节点才会顶上来。</span><br><span class="line">node.master: true</span><br><span class="line"><span class="meta">#</span> 是否是数据节点，一个集群必须要有至少一个数据节点来存储数据</span><br><span class="line">node.data: true</span><br><span class="line"><span class="meta">#</span> 默认这个集群中每个索引的分片数量。Elasticsearch中的数据都是存储在索引（index）中的（不同于sql数据库中的索引的概念），每个索引会被分成多个分片到不同的数据节点中进行保存。这就是一个分布式文件数据库的概念</span><br><span class="line">index.number_of_shards: 1</span><br><span class="line"><span class="meta">#</span> 默认这个集群中每个分片的副本数量。Elasticsearch中的每个分片都会产生等同于该配置数量的副本，副本分片一般不会与主分片存储在相同的主机节点中，当有主机挂掉的时候，该节点上的分片就丢失了，这时，如果设置了副本分片（相当于备份），那就会保证索引的完整性。如果是单节点没有集群的话，这里配置0就可以了</span><br><span class="line">index.number_of_replicas: 0</span><br><span class="line"><span class="meta">#</span> 节点中数据存储的路径，这条不配也没事，默认存储在Elasticsearch文件夹中</span><br><span class="line"><span class="meta">#</span> path.data: /path/to/data</span><br><span class="line"></span><br><span class="line">root@pi:/usr/local/es1/bin# nano elasticsearch.in.sh</span><br><span class="line">root@pi:/usr/local/es1/bin# </span><br><span class="line">ES_MIN_MEM=128m</span><br><span class="line">ES_MAX_MEM=128m</span><br></pre></td></tr></table></figure><h2 id="Kibana-3-0-0"><a href="#Kibana-3-0-0" class="headerlink" title="Kibana-3.0.0"></a><font size="3px">Kibana-3.0.0</font></h2><p><a href="https://www.elastic.co/cn/downloads/past-releases/kibana-3-0-0" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/past-releases/kibana-3-0-0</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/home/pi# cd /usr/local/kibana</span><br><span class="line">root@pi:/usr/local/kibana# ls</span><br><span class="line">app  build.txtconfig.js  cssfavicon.ico  font  imgindex.html  LICENSE.mdREADME.md  vendor</span><br><span class="line">root@pi:/usr/local/kibana# nano config.js</span><br><span class="line"></span><br><span class="line">elasticsearch: "http://192.168.0.112:9200",</span><br></pre></td></tr></table></figure><p>kibana需要挂载到tomcat或nignx中显示</p><p>整个文件添加到tomcat的webapps文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/tomcat8/webapps# cp -rf /usr/local/kibana /usr/local/tomcat8/webapps</span><br><span class="line">root@pi:/usr/local/tomcat8/webapps# ls</span><br><span class="line">root@pi:/usr/local/tomcat8/webapps# ls</span><br><span class="line">docs  exampleshost-manager  kibana  manager  ROOT</span><br></pre></td></tr></table></figure><p>运行tomcat <a href="http://192.168.0.112:8080/kibana/index.html" target="_blank" rel="noopener">http://192.168.0.112:8080/kibana/index.html</a></p><p><img src="/2020/03/29/ElasticSearch安装及实践/kibanaindex.png" alt></p><p>根据索引查找</p><p><img src="/2020/03/29/ElasticSearch安装及实践/kibana-index.png" alt></p><h2 id="logstash-2-0-0"><a href="#logstash-2-0-0" class="headerlink" title="logstash-2.0.0"></a><font size="3px">logstash-2.0.0</font></h2><p><a href="https://www.elastic.co/cn/downloads/past-releases/logstash-2-0-0" target="_blank" rel="noopener">https://www.elastic.co/cn/downloads/past-releases/logstash-2-0-0</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/home/pi/Downloads# tar zxvf logstash-2.0.0.tar.gz</span><br><span class="line">root@pi:/home/pi/Downloads# cp -rf logstash-2.0.0 /usr/local/logstash</span><br><span class="line">root@pi:/home/pi# cd /usr/local/logstash</span><br><span class="line">root@pi:/usr/local/logstash# ls</span><br><span class="line">bin  CHANGELOG.md  CONTRIBUTORS  Gemfile  Gemfile.jruby-1.9.lock  lib  LICENSElogstash.conf  NOTICE.TXT  vendor</span><br><span class="line">root@pi:/usr/local/logstash# cd bin</span><br><span class="line">root@pi:/usr/local/logstash/bin# ls</span><br><span class="line">logstash  logstash.batlogstash.lib.sh  plugin  plugin.bat  rspec  rspec.bat  setup.bat</span><br><span class="line">root@pi:/usr/local/logstash/bin# ./logstash</span><br></pre></td></tr></table></figure><h3 id="运行出错-libjffi-1-2-so"><a href="#运行出错-libjffi-1-2-so" class="headerlink" title="运行出错 libjffi-1.2.so"></a><font size="3px">运行出错 libjffi-1.2.so</font></h3><p><font color="#f00">java.lang.UnsatisfiedLinkError: /usr/local/logstash/vendor/jruby/lib/jni/arm-Linux/libjffi-1.2.so: /usr/local/logstash/vendor/jruby/lib/jni/arm-Linux/libjffi-1.2.so: 无法打开共享对象文件: 没有那个文件或目录</font></p><p><a href="https://discuss.elastic.co/t/logstash-7-x-on-raspberry-pi-4/205348" target="_blank" rel="noopener">https://discuss.elastic.co/t/logstash-7-x-on-raspberry-pi-4/205348</a></p><p><strong>安装texinfo,jruby</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/logstash/bin# apt-get install apt-transport-https jruby -y</span><br><span class="line">root@pi:/usr/local/logstash/bin# apt-get install texinfo build-essential ant git -y</span><br></pre></td></tr></table></figure><p><font color="#f00">perl-base 5.24.1-3+deb9u6 [无候选版本]</font></p><p><strong>安装perl</strong></p><p><a href="https://packages.debian.org/buster/arm64/perl/download" target="_blank" rel="noopener">https://packages.debian.org/buster/arm64/perl/download</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/logstash/bin# nano /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>镜像</span><br><span class="line">deb http://ftp.cn.debian.org/debian buster main </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>升级</span><br><span class="line">root@pi:/usr/local/logstash/bin# apt-get install update</span><br></pre></td></tr></table></figure><p><font color="#f00">W: GPG 错误:<a href="http://ftp.us.debian.org/debian" target="_blank" rel="noopener">http://ftp.us.debian.org/debian</a> stretch Release: 由于没有公钥,无W: GPG 错误:<a href="http://ftp.us.debian.org/debian" target="_blank" rel="noopener">http://ftp.us.debian.org/debian</a> stretch Release: 由于没有公钥,无法验证下列签名 NO_PUBKEY &lt;&lt; key&gt;&gt;</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys &lt;&lt;key&gt;&gt;</span><br></pre></td></tr></table></figure><p><font color="#f00">W: 目标 Packages (main/binary-armhf/Packages) 在 /etc/apt/sources.list.d/elastic-7.x.list:1和 /etc/apt/sources.list.d/elastic-7.x.list:2 中被配置了多次</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/logstash/bin# cd /etc/apt/sources.list.d</span><br><span class="line">root@pi:/etc/apt/sources.list.d# ls</span><br><span class="line">docker.list elastic-7.x.list raspi.list</span><br><span class="line">root@pi:/etc/apt/sources.list.d# rm -r elastic-7.x.list</span><br><span class="line">root@pi:/etc/apt/sources.list.d# sudo apt-get update</span><br><span class="line">root@pi:/etc/apt/sources.list.d#</span><br><span class="line">root@pi:/etc/apt/sources.list.d#</span><br><span class="line">root@pi:/etc/apt/sources.list.d# apt-get install perl</span><br></pre></td></tr></table></figure><p><font color="#f00">依旧perl-base 5.24.1-3+deb9u6 [无候选版本]</font></p><p>手动安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/home/pi/Downloads# wget http://www.cpan.org/src/5.0/perl-5.24.1.tar.gz</span><br><span class="line">root@pi:/home/pi/Downloads# tar zxvf perl-5.24.1.tar.gz</span><br><span class="line">root@pi:/home/pi/Downloads# cp -rf perl-5.24.1 /usr/local/perl-5.24.1</span><br><span class="line">root@pi:/home/pi/Downloads# cd /usr/local/perl-5.24.1</span><br><span class="line">root@pi:/usr/local/perl-5.24.1# ./Configure -des -Dprefix=/usr  </span><br><span class="line">root@pi:/usr/local/perl-5.24.1# make  &amp;&amp; make install</span><br><span class="line">root@pi:/usr/local/perl-5.24.1# perl -v</span><br></pre></td></tr></table></figure><p><strong>编译jffi库</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/<span class="built_in">local</span><span class="comment"># git clone https://github.com/jnr/jffi 9</span></span><br><span class="line">root@pi:/usr/<span class="built_in">local</span><span class="comment"># cd jffi/</span></span><br><span class="line">root@pi:/usr/<span class="built_in">local</span>/jffi<span class="comment"># ant jar</span></span><br></pre></td></tr></table></figure><p><strong>替换jffi</strong></p><p>将/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux下的libjffi-1.2.so 替换为/usr/local/jffi/build/jni/下的libjffi-1.2.so </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/jffi# cd /usr/local/logstash/vendor/jruby/lib/jni/arm-Linux</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux# ls</span><br><span class="line">libjffi-1.2.so</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux# cd /usr/local/jffi/build/jni/</span><br><span class="line">root@pi:/usr/local/jffi/build/jni# ls</span><br><span class="line">com_kenai_jffi_Foreign.h com_kenai_jffi_Foreign_InValidInstanceHolder.h  com_kenai_jffi_ObjectBuffer.hjffi  libjffi-1.2.so</span><br><span class="line">com_kenai_jffi_Foreign_InstanceHolder.h  com_kenai_jffi_Foreign_ValidInstanceHolder.h com_kenai_jffi_Version.hlibffi-arm-linux</span><br><span class="line">root@pi:/usr/local/jffi/build/jni# cd /usr/local/logstash/vendor/jruby/lib/jni/arm-Linux</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux# mv libjffi-1.2.so libjffi-1.2.so.old</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux# cd /usr/local/jffi/build/jni/</span><br><span class="line">root@pi:/usr/local/jffi/build/jni# cp libjffi-1.2.so /usr/local/logstash/vendor/jruby/lib/jni/arm-Linux/libjffi-1.2.so</span><br><span class="line">root@pi:/usr/local/jffi/build/jni# cd /usr/local/logstash/vendor/jruby/lib/jni/arm-Linux</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux# ls</span><br><span class="line">libjffi-1.2.solibjffi-1.2.so.old</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux#</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux#</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux#</span><br><span class="line">root@pi:/usr/local/logstash/vendor/jruby/lib/jni/arm-Linux# cd /usr/local/logstash/bin</span><br><span class="line">root@pi:/usr/local/logstash/bin# ./logstash</span><br><span class="line">io/console not supported; tty will not be manipulated</span><br><span class="line">No command given</span><br><span class="line"></span><br><span class="line">Usage: logstash &lt;command&gt; [command args]</span><br><span class="line">Run a command with the --help flag to see the arguments.</span><br><span class="line">For example: logstash agent --help</span><br><span class="line"></span><br><span class="line">Available commands:</span><br><span class="line">  agent - runs the logstash agent</span><br><span class="line">  version - emits version info about this logstash</span><br><span class="line">root@pi:/usr/local/logstash/bin# ls</span><br><span class="line">logstash  logstash.batlogstash.lib.sh  plugin  plugin.bat  rspec  rspec.bat  setup.bat</span><br><span class="line">root@pi:/usr/local/logstash/bin# logstash</span><br><span class="line">bash: logstash：未找到命令</span><br><span class="line">root@pi:/usr/local/logstash/bin# ./logstash --help</span><br><span class="line">io/console not supported; tty will not be manipulated</span><br><span class="line">Usage:</span><br><span class="line">    /bin/logstash agent [OPTIONS]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">    -f, --config CONFIG_PATH      Load the logstash config from a specific file</span><br><span class="line">                                  or directory.  If a directory is given, all</span><br><span class="line">                                  files in that directory will be concatenated</span><br><span class="line">                                  in lexicographical order and then parsed as a</span><br><span class="line">                                  single config file. You can also specify</span><br><span class="line">                                  wildcards (globs) and any matched files will</span><br><span class="line">                                  be loaded in the order described above.</span><br><span class="line">    -e CONFIG_STRING              Use the given string as the configuration</span><br><span class="line">                                  data. Same syntax as the config file. If no</span><br><span class="line">                                  input is specified, then the following is</span><br><span class="line">                                  used as the default input:</span><br><span class="line">                                  "input &#123; stdin &#123; type =&gt; stdin &#125; &#125;"</span><br><span class="line">                                  and if no output is specified, then the</span><br><span class="line">                                  following is used as the default output:</span><br><span class="line">                                  "output &#123; stdout &#123; codec =&gt; rubydebug &#125; &#125;"</span><br><span class="line">                                  If you wish to use both defaults, please use</span><br><span class="line">                                  the empty string for the '-e' flag.</span><br><span class="line">                                   (default: "")</span><br><span class="line">    -w, --filterworkers COUNT     Sets the number of filter workers to run.</span><br><span class="line">                                   (default: 2)</span><br><span class="line">    -l, --log FILE                Write logstash internal logs to the given</span><br><span class="line">                                  file. Without this flag, logstash will emit</span><br><span class="line">                                  logs to standard output.</span><br><span class="line">    -v                            Increase verbosity of logstash internal logs.</span><br><span class="line">                                  Specifying once will show 'informational'</span><br><span class="line">                                  logs. Specifying twice will show 'debug'</span><br><span class="line">                                  logs. This flag is deprecated. You should use</span><br><span class="line">                                  --verbose or --debug instead.</span><br><span class="line">    --quiet                       Quieter logstash logging. This causes only </span><br><span class="line">                                  errors to be emitted.</span><br><span class="line">    --verbose                     More verbose logging. This causes 'info' </span><br><span class="line">                                  level logs to be emitted.</span><br><span class="line">    --debug                       Most verbose logging. This causes 'debug'</span><br><span class="line">                                  level logs to be emitted.</span><br><span class="line">    -V, --version                 Emit the version of logstash and its friends,</span><br><span class="line">                                  then exit.</span><br><span class="line">    -p, --pluginpath PATH         A path of where to find plugins. This flag</span><br><span class="line">                                  can be given multiple times to include</span><br><span class="line">                                  multiple paths. Plugins are expected to be</span><br><span class="line">                                  in a specific directory hierarchy:</span><br><span class="line">                                  'PATH/logstash/TYPE/NAME.rb' where TYPE is</span><br><span class="line">                                  'inputs' 'filters', 'outputs' or 'codecs'</span><br><span class="line">                                  and NAME is the name of the plugin.</span><br><span class="line">    -t, --configtest              Check configuration for valid syntax and then exit.</span><br><span class="line">    -h, --help                    print help</span><br><span class="line">root@pi:/usr/local/logstash/bin#</span><br></pre></td></tr></table></figure><p><strong>运行logstash脚本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/logstash/bin# ./logstash -e 'input&#123;stdin&#123;&#125;&#125;output&#123;stdout&#123;codec=&gt;rubydebug&#125;&#125;'</span><br><span class="line">io/console not supported; tty will not be manipulated</span><br><span class="line">Default settings used: Filter workers: 2</span><br><span class="line">Logstash startup completed</span><br><span class="line">Hello World</span><br><span class="line">&#123;</span><br><span class="line">       "message" =&gt; "Hello World",</span><br><span class="line">      "@version" =&gt; "1",</span><br><span class="line">    "@timestamp" =&gt; "2020-03-29T08:28:52.594Z",</span><br><span class="line">          "host" =&gt; "pi"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/logstash/bin#cd /usr/local/logstash</span><br><span class="line">root@pi:/usr/local/logstash# ls</span><br><span class="line">bin  CHANGELOG.md  CONTRIBUTORS  Gemfile  Gemfile.jruby-1.9.lock  lib  LICENSElogstash.conf  NOTICE.TXT  vendor</span><br><span class="line">root@pi:/usr/local/logstash# nano logstash.conf</span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">  tcp &#123;</span><br><span class="line">    port =&gt; 4560</span><br><span class="line">    codec =&gt; json_lines</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; ["192.168.0.112:9200"]</span><br><span class="line">    index =&gt; "applog"</span><br><span class="line">    #user =&gt; "elastic"</span><br><span class="line">    #password =&gt; "changeme"</span><br><span class="line">  &#125;</span><br><span class="line">  stdout&#123; codec =&gt; rubydebug&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>开放4560端口</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/logstash# iptables -I INPUT -i eth0 -p tcp --dport 4560 -j ACCEPT</span><br><span class="line">root@pi:/usr/local/logstash# iptables  -I OUTPUT -o eth0 -p tcp --sport 4560 -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="创建Maven依赖"><a href="#创建Maven依赖" class="headerlink" title="创建Maven依赖"></a><font size="3px">创建Maven依赖</font></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.logstash.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logstash-logback-encoder<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="logback-spring-xml"><a href="#logback-spring-xml" class="headerlink" title="logback-spring.xml"></a><font size="3px">logback-spring.xml</font></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">"org/springframework/boot/logging/logback/base.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">"org/springframework/boot/logging/logback/defaults.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">resource</span>=<span class="string">"org/springframework/boot/logging/logback/console-appender.xml"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--应用名称--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"APP_NAME"</span> <span class="attr">value</span>=<span class="string">"edu-service"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志文件保存路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"LOG_FILE_PATH"</span> <span class="attr">value</span>=<span class="string">"edu-service"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">contextName</span>&gt;</span>$&#123;APP_NAME&#125;<span class="tag">&lt;/<span class="name">contextName</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--每天记录日志到文件appender--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"FILE"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>$&#123;LOG_FILE_PATH&#125;/$&#123;APP_NAME&#125;-%d&#123;yyyy-MM-dd&#125;.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>$&#123;FILE_LOG_PATTERN&#125;<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--输出到logstash的appender--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"LOGSTASH"</span> <span class="attr">class</span>=<span class="string">"net.logstash.logback.appender.LogstashTcpSocketAppender"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">destination</span>&gt;</span>192.168.0.100:4560<span class="tag">&lt;/<span class="name">destination</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">class</span>=<span class="string">"net.logstash.logback.encoder.LogstashEncoder"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--日志级别   DEBUG-INFO-WARN-ERROR  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"DEBUG"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"CONSOLE"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"FILE"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"LOGSTASH"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="运行SpringBoot"><a href="#运行SpringBoot" class="headerlink" title="运行SpringBoot"></a><font size="4px">运行SpringBoot</font></h1><p><a href="http://192.168.0.112:8080/kibana/index.html#/dashboard/file/logstash.json" target="_blank" rel="noopener">http://192.168.0.112:8080/kibana/index.html#/dashboard/file/logstash.json</a></p><p><img src="/2020/03/29/ElasticSearch安装及实践/kibana.png" alt></p><p>树莓派终端</p><p><img src="/2020/03/29/ElasticSearch安装及实践/logstash.png" alt></p><p>运行一次就两千多个数据</p><p><img src="/2020/03/29/ElasticSearch安装及实践/result.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;elasticsearch kibana logstash ELK 最终选用低版本运行&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://www.runaccepted.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://www.runaccepted.com/tags/Java/"/>
    
      <category term="ElasticSearch" scheme="https://www.runaccepted.com/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>20200229</title>
    <link href="https://www.runaccepted.com/2020/02/29/20200229/"/>
    <id>https://www.runaccepted.com/2020/02/29/20200229/</id>
    <published>2020-02-29T14:26:57.000Z</published>
    <updated>2020-02-29T15:26:06.131Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">2020-02-29 四年一次的2月29日</blockquote><a id="more"></a><div class="tabs" id="选项卡"><ul class="nav-tabs"><li class="tab"><a href="#选项卡-1">学习</a></li><li class="tab active"><a href="#选项卡-2">生活</a></li><li class="tab"><a href="#选项卡-3">情感</a></li><li class="tab"><a href="#选项卡-4">祖国</a></li></ul><div class="tab-content"><div class="tab-pane" id="选项卡-1"><p>在自己喜欢的专业领域内有所成就</p><p>考不上 - 安心工作 升职</p><p>考上 - 成功毕业 - 晋升 - 为下一个4年后努力</p></div><div class="tab-pane active" id="选项卡-2"><p>不必再依靠父母，而是成为父母的依靠</p><p>这时候的你已经带父母去过远方</p><p>财务自由，有十万之上的存款</p></div><div class="tab-pane" id="选项卡-3"><p>并不强求 - 但得一个心，平淡一生</p><p>和父母有更多的沟通和了解</p><p>和真心的朋友正在聚餐</p></div><div class="tab-pane" id="选项卡-4"><p>希望<strong>中华人民共和国外国人永久居留管理条例</strong>没有通过，中国是中国</p><p>2003年出生，2020年的新冠肺炎高考，2024年毕业的学子一切顺利</p><p>新冠肺炎 – 李文亮，钟南山，武汉，红十字协会，社会的光亮和黑暗都可以放在镜头下</p></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;2020-02-29 四年一次的2月29日&lt;/blockquote&gt;
    
    </summary>
    
      <category term="闲谈" scheme="https://www.runaccepted.com/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="闲谈" scheme="https://www.runaccepted.com/tags/%E9%97%B2%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>树莓派安装hexo</title>
    <link href="https://www.runaccepted.com/2020/02/19/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85hexo/"/>
    <id>https://www.runaccepted.com/2020/02/19/树莓派安装hexo/</id>
    <published>2020-02-19T14:45:37.000Z</published>
    <updated>2020-02-26T07:11:58.846Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">nodejs npm hexo</blockquote><a id="more"></a><h1 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a><font size="4px">安装nodejs</font></h1><p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p><p><img src="/2020/02/19/树莓派安装hexo/nodejs.png" alt></p><p>下载到树莓派，解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> tar -xJvf node-v12.16.0-linux-armv7l.tar.xz</span></span><br></pre></td></tr></table></figure><p>复制到目标文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cp -rf node-v12.16.0-linux-armv7l /usr/<span class="built_in">local</span>/nodejs</span></span><br></pre></td></tr></table></figure><h1 id="创建软链接"><a href="#创建软链接" class="headerlink" title="创建软链接"></a><font size="4px">创建软链接</font></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/<span class="built_in">local</span>/nodejs/bin/node /usr/bin/node</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/<span class="built_in">local</span>/nodejs/bin/npm /usr/bin/npm</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -s /usr/<span class="built_in">local</span>/nodejs/bin/npx /usr/bin/npx</span></span><br></pre></td></tr></table></figure><h1 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a><font size="4px">查看版本</font></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> node -v</span></span><br><span class="line">v12.16.0</span><br><span class="line"><span class="meta">#</span><span class="bash"> npm -v</span></span><br><span class="line">6.13.4</span><br></pre></td></tr></table></figure><h1 id="下载hexo"><a href="#下载hexo" class="headerlink" title="下载hexo"></a><font size="4px">下载hexo</font></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm install -g hexo-cli</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;nodejs npm hexo&lt;/blockquote&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://www.runaccepted.com/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://www.runaccepted.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
      <category term="hexo" scheme="https://www.runaccepted.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat8无法进入管理页面</title>
    <link href="https://www.runaccepted.com/2020/02/19/Tomcat8%E6%97%A0%E6%B3%95%E8%BF%9B%E5%85%A5%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2/"/>
    <id>https://www.runaccepted.com/2020/02/19/Tomcat8无法进入管理页面/</id>
    <published>2020-02-19T07:46:23.000Z</published>
    <updated>2020-02-19T07:57:58.759Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Manager-App管理权限设置后仍无法进入页面</blockquote><a id="more"></a><h1 id="配置管理账号密码"><a href="#配置管理账号密码" class="headerlink" title="配置管理账号密码"></a><font size="4px">配置管理账号密码</font></h1><p>当首次打开localhost:8080时，点击Manager App按钮，出现403配置信息</p><p>进入tomcat8/conf/tomcat-users.xml配置账号密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@pi:/usr/local/tomcat8/bin# cd ..</span><br><span class="line">root@pi:/usr/local/tomcat8# cd conf</span><br><span class="line">root@pi:/usr/local/tomcat8/conf# nano tomcat-users.xml</span><br><span class="line"></span><br><span class="line">&lt;role rolename="manager-gui"/&gt;</span><br><span class="line">&lt;user username="tomcat8" password="tomcat8" roles="manager-gui,manager-script"/&gt;</span><br></pre></td></tr></table></figure><h1 id="重启tomcat仍出现403"><a href="#重启tomcat仍出现403" class="headerlink" title="重启tomcat仍出现403"></a><font size="4px">重启tomcat仍出现403</font></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You are not authorized to view this page.</span><br><span class="line">By default the Host Manager is only accessible from a browser running on the same machine as Tomcat. If you wish to modify this restriction, you'll need to edit the Host Manager's context.xml file.</span><br></pre></td></tr></table></figure><p>编辑tomcat8/webapps/manager/META-INF/context.xml</p><p>tomcat8/webapps/host-manager/META-INF/context.xml</p><p>将其中的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" /&gt; --&gt;</span></span><br></pre></td></tr></table></figure><p>注释掉</p><p>重启tomcat</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Manager-App管理权限设置后仍无法进入页面&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://www.runaccepted.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://www.runaccepted.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse自动代码补全</title>
    <link href="https://www.runaccepted.com/2020/02/12/Eclipse%E8%87%AA%E5%8A%A8%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8/"/>
    <id>https://www.runaccepted.com/2020/02/12/Eclipse自动代码补全/</id>
    <published>2020-02-12T11:13:12.000Z</published>
    <updated>2020-07-04T08:27:53.052Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Eclipse操作-同时适用于jsp，xml提示</blockquote><a id="more"></a><p>window-&gt;Preferences-&gt;Java-&gt;Editor-&gt;Content Assist</p><p>auto activaction -&gt; Enable auto activation -&gt; Auto Activation triggers for java “.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,([{”<br><img src="/2020/02/12/Eclipse自动代码补全/eclipse.png" alt></p><p>window-&gt;Preferences-&gt;Java-&gt;Editor-&gt;Content Assist-&gt;Advanced </p><p>Select the proposal kinds contained in the ‘default’ content assist list中全部勾上！</p><p><img src="/2020/02/12/Eclipse自动代码补全/2.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Eclipse操作-同时适用于jsp，xml提示&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://www.runaccepted.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://www.runaccepted.com/tags/Java/"/>
    
      <category term="Eclipse" scheme="https://www.runaccepted.com/tags/Eclipse/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://www.runaccepted.com/2020/02/08/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://www.runaccepted.com/2020/02/08/正则表达式/</id>
    <published>2020-02-08T15:04:41.000Z</published>
    <updated>2020-02-08T16:02:35.360Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">描述的是一个规则，匹配一类字符串</blockquote><a id="more"></a><h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a><font size="4px">转义字符</font></h1><table>  <tr>    <td>\n</td>    <td>换行符</td>  </tr>  <tr>    <td>\t</td>    <td>制表符</td>  </tr>  <tr>    <td>\\</td>    <td>\</td>  </tr>  <tr>    <td>\^,\$,\.,\(,\),\{,\},\?,\+,\-,\[,\],\|</td>    <td>匹配字符本身</td>  </tr></table><h1 id="标准字符"><a href="#标准字符" class="headerlink" title="标准字符"></a><font size="4px">标准字符</font></h1><table>  <tr>    <td>\d</td>    <td>0-9数字</td>  </tr>  <tr>    <td>\w</td>    <td>字母，数字，下划线 A-Z,a-z,0-9</td>  </tr>  <tr>    <td>\s</td>    <td>空格，制表符，换行符等空白字符的其中任意一个</td>  </tr>  <tr>    <td>.</td>    <td>任意字符</td>  </tr></table><h1 id="内任意字符"><a href="#内任意字符" class="headerlink" title="[] 内任意字符"></a><font size="4px">[] 内任意字符</font></h1><table>  <tr>    <td>[ab5@]</td>    <td>匹配 a\b\c\5\@</td>  </tr>  <tr>    <td>[^abc]</td>    <td>a,b,c以外的任意字符</td>  </tr>  <tr>    <td>[f-k]</td>    <td>f-k之间的任意字母</td>  </tr>  <tr>    <td>[^A-F0-3]</td>    <td>A-F,0-3之外的任意字符</td>  </tr></table><p>包含在中括号中的特殊符号会失去特殊意义，除了^,-之外。</p><p>如<code>[\d.\-+]</code>表示数字，小数点，-，+</p><h1 id="量词"><a href="#量词" class="headerlink" title="量词"></a><font size="4px">量词</font></h1><table>  <tr>    <td>{n}</td>    <td>表达式重复n次</td>  </tr>  <tr>    <td>{m,n}</td>    <td>重复至少m次，至多n次</td>  </tr>  <tr>    <td>{m,}</td>    <td>重复至少m次</td>  </tr>  <tr>    <td>?</td>    <td>0次或1次，{0,1}</td>  </tr>  <tr>    <td>+</td>    <td>至少1次，{1,}</td>  </tr>  <tr>    <td>*</td>    <td>不出现或出现任意次，{0,}</td>  </tr></table><h1 id="字符边界"><a href="#字符边界" class="headerlink" title="字符边界"></a><font size="4px">字符边界</font></h1><table>  <tr>    <td>^</td>    <td>与字符串开始的地方匹配</td>  </tr>  <tr>    <td>$</td>    <td>与字符串结束的地方匹配</td>  </tr>  <tr>    <td>\b</td>    <td>匹配一个单词边界, (前面的字符和后面的字符不全是\w)</td>  </tr></table><h1 id="选择符和分组"><a href="#选择符和分组" class="headerlink" title="选择符和分组"></a><font size="4px">选择符和分组</font></h1><table>  <tr>    <td>|</td>    <td>两个表达式之间 或 关系</td>  </tr>  <tr>    <td>()</td>    <td>括号内的表达式可以作为整体被修饰，()\1表示捕获的整体作为匹配模式 go gogo</td>  </tr>  <tr>    <td>(?:表达式)</td>    <td>抵消()带来的作用</td>  </tr></table><h1 id="预搜索-零宽断言"><a href="#预搜索-零宽断言" class="headerlink" title="预搜索-零宽断言"></a><font size="4px">预搜索-零宽断言</font></h1><table>  <tr>    <td>(?=exp)</td>    <td>断言后匹配exp <br>[a-z]+(?:\d) go222 222本身不计入匹配</td>  </tr>  <tr>    <td>(?<=exp)< td>    <td>断言前匹配exp</td>  </=exp)<></td></tr>  <tr>    <td>(?!exp)</td>    <td>断言后不匹配exp</td>  </tr>  <tr>    <td>(?<!exp)</td>    </td><td>断言前不匹配exp</td>  </tr></table><h1 id="常用表达"><a href="#常用表达" class="headerlink" title="常用表达"></a><font size="4px">常用表达</font></h1><h2 id="电话号码"><a href="#电话号码" class="headerlink" title="电话号码"></a><font size="3px">电话号码</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0\d&#123;2-3&#125;-\d&#123;7,9&#125;</span><br><span class="line">1[356789]\d&#123;11&#125;</span><br></pre></td></tr></table></figure><h2 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a><font size="3px">邮箱</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">12334@qq.com</span><br><span class="line">234@sina.com.cn</span><br><span class="line"></span><br><span class="line">[\w\-]+@[A-Za-z0-9]+(\.[A-Za-z]&#123;2,3&#125;)&#123;1,2&#125;</span><br></pre></td></tr></table></figure><h1 id="java中使用"><a href="#java中使用" class="headerlink" title="java中使用"></a><font size="4px">java中使用</font></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line">Pattern pattern = Pattern.compile(<span class="string">"\\d"</span>);</span><br><span class="line"></span><br><span class="line">Matcher matcher = pattern.matcher(<span class="string">"aw"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">boolean</span> flag =matcher.matches();</span><br><span class="line"></span><br><span class="line">System.out.println(flag);  <span class="comment">//false</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;描述的是一个规则，匹配一类字符串&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://www.runaccepted.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://www.runaccepted.com/tags/Java/"/>
    
      <category term="正则表达式" scheme="https://www.runaccepted.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>java设计模式</title>
    <link href="https://www.runaccepted.com/2020/02/07/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>https://www.runaccepted.com/2020/02/07/java设计模式/</id>
    <published>2020-02-07T10:56:29.000Z</published>
    <updated>2020-02-08T14:50:36.072Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">GOF(Group For Four)23设计模式</blockquote><a id="more"></a><h1 id="创建型模式"><a href="#创建型模式" class="headerlink" title="创建型模式"></a><font size="4px">创建型模式</font></h1><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a><font size="3px">单例模式</font></h2><p>只生成一个实例</p><h3 id="饿汉式"><a href="#饿汉式" class="headerlink" title="饿汉式"></a><font size="3px">饿汉式</font></h3><p>线程安全，调用效率高。不能延时加载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line">  <span class="comment">//类初始化时，立即加载这个对象加载时，天然是线程安全的</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//方法没有同步，调用效率高</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="懒汉式"><a href="#懒汉式" class="headerlink" title="懒汉式"></a><font size="3px">懒汉式</font></h3><p>线程安全，调用效率不高，可以延时加载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">null</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">      instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="双重检测锁式"><a href="#双重检测锁式" class="headerlink" title="双重检测锁式"></a><font size="3px">双重检测锁式</font></h3><p>由于JVM底层内部模型原因，偶尔会出问题，不建议使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">null</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</span><br><span class="line">      Singleton s;</span><br><span class="line">      <span class="keyword">synchronized</span>(Singleton.class)&#123;</span><br><span class="line">        s = instance;</span><br><span class="line">        <span class="keyword">if</span>(s==<span class="keyword">null</span>)&#123;</span><br><span class="line">          <span class="keyword">synchronized</span>(Singleton.class)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s==<span class="keyword">null</span>)&#123;</span><br><span class="line">              s = <span class="keyword">new</span> Singleton();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          instance = s;</span><br><span class="line">        &#125;   </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="静态内部类式"><a href="#静态内部类式" class="headerlink" title="静态内部类式"></a><font size="3px">静态内部类式</font></h3><p>线程安全，调用效率高，不能延时加载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Singletonclass</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton instance = <span class="keyword">new</span> Singleton();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> Singletonclass.instance;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="枚举单例"><a href="#枚举单例" class="headerlink" title="枚举单例"></a><font size="3px">枚举单例</font></h3><p>线程安全，调用效率高，不能延时加载，可以天然的防止反射和反序列化漏洞</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Singleton&#123;</span><br><span class="line"></span><br><span class="line">  INSTANCE;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">singletonOperation</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a><font size="3px">工厂模式</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Audi</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"奥迪在跑"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Baoma</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"宝马在跑"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现创建者和调用者分离</p><h3 id="简单工厂模式-静态"><a href="#简单工厂模式-静态" class="headerlink" title="简单工厂模式-静态"></a><font size="3px">简单工厂模式-静态</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CarFactory</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title">createCar</span><span class="params">(String type)</span></span>&#123;</span><br><span class="line">    Car c = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">"奥迪"</span>.equals(type))&#123;</span><br><span class="line">      c = <span class="keyword">new</span> Audi();</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"宝马"</span>.equals(type))&#123;</span><br><span class="line">      c = <span class="keyword">new</span> Baoma();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CarFactory</span></span>&#123;</span><br><span class="line">  <span class="function">Car <span class="title">createCar</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AudiFactory</span> <span class="keyword">implements</span> <span class="title">CarFactory</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> Car <span class="title">createCar</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Audi();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Car audi = <span class="keyword">new</span> AudiFactory().creatCar();</span><br></pre></td></tr></table></figure><h2 id="抽象工厂模式"><a href="#抽象工厂模式" class="headerlink" title="抽象工厂模式"></a><font size="3px">抽象工厂模式</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Engine</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LuxuryEngine</span> <span class="keyword">implements</span> <span class="title">Engine</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LowEngine</span> <span class="keyword">implements</span> <span class="title">Engine</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Seat</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">message</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LuxurySeat</span> <span class="keyword">implements</span> <span class="title">Seat</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">message</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LowSeat</span> <span class="keyword">implements</span> <span class="title">Seat</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">message</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CarFatory</span></span>&#123;</span><br><span class="line">  <span class="function">Engine <span class="title">createEngine</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function">Seat <span class="title">createSeat</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LuxuryCarFactory</span> <span class="keyword">implements</span> <span class="title">CarFactory</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Engine <span class="title">createEngine</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Seat <span class="title">createSeat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="建造者模式"><a href="#建造者模式" class="headerlink" title="建造者模式"></a><font size="3px">建造者模式</font></h2><h3 id="Airship"><a href="#Airship" class="headerlink" title="Airship"></a><font size="3px">Airship</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> builder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Airship</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String engine;</span><br><span class="line"><span class="keyword">private</span> String escapeTower;</span><br><span class="line"><span class="keyword">private</span> String orbitalModule;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEngine</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> engine;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEngine</span><span class="params">(String engine)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.engine = engine;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEscapeTower</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> escapeTower;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEscapeTower</span><span class="params">(String escapeTower)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.escapeTower = escapeTower;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getOrbitalModule</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> orbitalModule;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOrbitalModule</span><span class="params">(String orbitalModule)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.orbitalModule = orbitalModule;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"Airship [engine="</span> + engine + <span class="string">", escapeTower="</span> + escapeTower + <span class="string">", orbitalModule="</span> + orbitalModule + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AirshipBuilder"><a href="#AirshipBuilder" class="headerlink" title="AirshipBuilder"></a><font size="3px">AirshipBuilder</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> builder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AirshipBuilder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function">String <span class="title">builderEngine</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">String <span class="title">builderOrbitalModule</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function">String <span class="title">builderEscapeTower</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AirshipDirector"><a href="#AirshipDirector" class="headerlink" title="AirshipDirector"></a><font size="3px">AirshipDirector</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> builder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AirshipDirector</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function">Airship <span class="title">createAirship</span><span class="params">(AirshipBuilder builder)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CeacreteAirshipBuilder"><a href="#CeacreteAirshipBuilder" class="headerlink" title="CeacreteAirshipBuilder"></a><font size="3px">CeacreteAirshipBuilder</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> builder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CeacreteAirshipBuilder</span> <span class="keyword">implements</span> <span class="title">AirshipBuilder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">builderEngine</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"发动机"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">builderOrbitalModule</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"轨道仓"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">builderEscapeTower</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"逃逸塔"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CeacreteAirshipDirector"><a href="#CeacreteAirshipDirector" class="headerlink" title="CeacreteAirshipDirector"></a><font size="3px">CeacreteAirshipDirector</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> builder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CeacreteAirshipDirector</span> <span class="keyword">implements</span> <span class="title">AirshipDirector</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Airship <span class="title">createAirship</span><span class="params">(AirshipBuilder builder)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Airship airship = <span class="keyword">new</span> Airship();</span><br><span class="line">airship.setEngine(builder.builderEngine());</span><br><span class="line">airship.setEscapeTower(builder.builderEscapeTower());</span><br><span class="line">airship.setOrbitalModule(builder.builderOrbitalModule());</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> airship;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Client"><a href="#Client" class="headerlink" title="Client"></a><font size="3px">Client</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> builder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">AirshipDirector director = <span class="keyword">new</span> CeacreteAirshipDirector();</span><br><span class="line"></span><br><span class="line">Airship airship=director.createAirship(<span class="keyword">new</span> CeacreteAirshipBuilder());</span><br><span class="line"></span><br><span class="line">System.out.println(airship);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="原型模式"><a href="#原型模式" class="headerlink" title="原型模式"></a><font size="3px">原型模式</font></h2><h1 id="结构型模式"><a href="#结构型模式" class="headerlink" title="结构型模式"></a><font size="4px">结构型模式</font></h1><h2 id="适配器模式"><a href="#适配器模式" class="headerlink" title="适配器模式"></a><font size="3px">适配器模式</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Adaptee</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">handle</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> <span class="keyword">extends</span> <span class="title">Adaptee</span> <span class="keyword">implements</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> <span class="keyword">implements</span> <span class="title">Target</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> Adaptee adaptee;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="桥接模式"><a href="#桥接模式" class="headerlink" title="桥接模式"></a><font size="3px">桥接模式</font></h2><p>多层继承结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//电脑品牌</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Brand</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">sale</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Lenvo</span> <span class="keyword">implements</span> <span class="title">Brand</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sale</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dell</span> <span class="keyword">implements</span> <span class="title">Brand</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sale</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//电脑</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">computer</span></span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> Brand brand;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Computer</span><span class="params">(Brand brand)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.brand=brand;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sale</span><span class="params">()</span></span>&#123;</span><br><span class="line">    brand.sale();</span><br><span class="line">  &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Laptop</span> <span class="keyword">extends</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Laptop</span><span class="params">(Brand brand)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(brand);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Computer c = <span class="keyword">new</span> Laptop(<span class="keyword">new</span> Dell());</span><br></pre></td></tr></table></figure><h2 id="装饰模式"><a href="#装饰模式" class="headerlink" title="装饰模式"></a><font size="3px">装饰模式</font></h2><p>IO流 BufferInputerStream(new InputStream())</p><p>线程 new Thread(new Runnable())</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//真实对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Baoma</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//装饰对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuperCar</span> <span class="keyword">implements</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">protected</span> Car car;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">SuperCar</span><span class="params">(Car car)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.car = car;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">    car.move();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体装饰对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlyCar</span> <span class="keyword">extends</span> <span class="title">SuperCar</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">FlyCar</span><span class="params">(Car car)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(car);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"..."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.move();</span><br><span class="line">    fly(); <span class="comment">//添加装饰</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Car car = <span class="keyword">new</span> Baoma();</span><br><span class="line">car.move(); </span><br><span class="line">FlyCar fly = <span class="keyword">new</span> FlyCar(car);</span><br><span class="line">fly.move(); <span class="comment">//添加了功能</span></span><br></pre></td></tr></table></figure><h2 id="组合模式"><a href="#组合模式" class="headerlink" title="组合模式"></a><font size="3px">组合模式</font></h2><p>树形结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">operation</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Leaf</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="keyword">extends</span> <span class="title">Component</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(Component c)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(Component c)</span></span>;</span><br><span class="line">  <span class="function">Component <span class="title">getChlid</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="外观模式"><a href="#外观模式" class="headerlink" title="外观模式"></a><font size="3px">外观模式</font></h2><p>简单封装</p><h2 id="享元模式"><a href="#享元模式" class="headerlink" title="享元模式"></a><font size="3px">享元模式</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a><font size="3px">代理模式</font></h2><h3 id="静态代理模式"><a href="#静态代理模式" class="headerlink" title="静态代理模式"></a><font size="3px">静态代理模式</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Star</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//ProxyStar</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyStar</span> <span class="keyword">implements</span> <span class="title">Star</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> Star star;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">proxy</span><span class="params">(Star star)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.star=star;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>&#123;</span><br><span class="line">    star.sing();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//RealStar</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RealStar</span> <span class="keyword">implements</span> <span class="title">Star</span></span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Client</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">client</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    Star star=<span class="keyword">new</span> RealStar();</span><br><span class="line">    ProxyStar proxy = <span class="keyword">new</span> ProxyStar(star);</span><br><span class="line">    </span><br><span class="line">    proxy.sing();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态代理模式"><a href="#动态代理模式" class="headerlink" title="动态代理模式"></a><font size="3px">动态代理模式</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyStar</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Star star;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ProxyStar</span><span class="params">(Star star)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.star = star;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"></span><br><span class="line">method.invoke(star, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Client</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Star star = <span class="keyword">new</span> RealStar();</span><br><span class="line"></span><br><span class="line">ProxyStar proxyStar = <span class="keyword">new</span> ProxyStar(star);</span><br><span class="line"></span><br><span class="line">Star proxy = (Star) Proxy.newProxyInstance(</span><br><span class="line">      ClassLoader.getSystemClassLoader(), </span><br><span class="line">      <span class="keyword">new</span> Class[] &#123;Star.class&#125;, </span><br><span class="line">      proxyStar);</span><br><span class="line"></span><br><span class="line">proxy.sing();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="行为型模式"><a href="#行为型模式" class="headerlink" title="行为型模式"></a><font size="4px">行为型模式</font></h1><h2 id="模版方法模式"><a href="#模版方法模式" class="headerlink" title="模版方法模式"></a><font size="3px">模版方法模式</font></h2><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a><font size="3px">命令模式</font></h2><h2 id="迭代器模式"><a href="#迭代器模式" class="headerlink" title="迭代器模式"></a><font size="3px">迭代器模式</font></h2><h2 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a><font size="3px">观察者模式</font></h2><h2 id="中介者模式"><a href="#中介者模式" class="headerlink" title="中介者模式"></a><font size="3px">中介者模式</font></h2><h2 id="备忘录模式"><a href="#备忘录模式" class="headerlink" title="备忘录模式"></a><font size="3px">备忘录模式</font></h2><h2 id="解释器模式"><a href="#解释器模式" class="headerlink" title="解释器模式"></a><font size="3px">解释器模式</font></h2><h2 id="状态模式"><a href="#状态模式" class="headerlink" title="状态模式"></a><font size="3px">状态模式</font></h2><h2 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a><font size="3px">策略模式</font></h2><h2 id="职责链模式"><a href="#职责链模式" class="headerlink" title="职责链模式"></a><font size="3px">职责链模式</font></h2><h3 id="Leave"><a href="#Leave" class="headerlink" title="Leave"></a><font size="3px">Leave</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Chain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Leave</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String empName;</span><br><span class="line"><span class="keyword">private</span> String reason;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> day;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Leave</span><span class="params">(String empName, String reason,<span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.empName = empName;</span><br><span class="line"><span class="keyword">this</span>.reason = reason;</span><br><span class="line"><span class="keyword">this</span>.day=day;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getEmpName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> empName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmpName</span><span class="params">(String empName)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.empName = empName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getReason</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> reason;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setReason</span><span class="params">(String reason)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.reason = reason;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> day;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDay</span><span class="params">(<span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.day = day;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Leader"><a href="#Leader" class="headerlink" title="Leader"></a><font size="3px">Leader</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Chain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Leader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> String name;</span><br><span class="line"><span class="keyword">protected</span> Leader nextLeader;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Leader</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNextLeader</span><span class="params">(Leader nextLeader)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.nextLeader = nextLeader;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">handleRequest</span><span class="params">(Leave leave)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Manager"><a href="#Manager" class="headerlink" title="Manager"></a><font size="3px">Manager</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Chain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Manager</span> <span class="keyword">extends</span> <span class="title">Leader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Manager</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequest</span><span class="params">(Leave leave)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (leave.getDay()&lt;<span class="number">3</span>) &#123;</span><br><span class="line">System.out.println(<span class="keyword">super</span>.name+ <span class="string">"批准请假"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.nextLeader!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">this</span>.nextLeader.handleRequest(leave);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Director"><a href="#Director" class="headerlink" title="Director"></a><font size="3px">Director</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Chain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Director</span> <span class="keyword">extends</span> <span class="title">Leader</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Director</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequest</span><span class="params">(Leave leave)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (leave.getDay()&lt;<span class="number">10</span>) &#123;</span><br><span class="line">System.out.println(name+<span class="string">"批准"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">this</span>.nextLeader.handleRequest(leave);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Client-1"><a href="#Client-1" class="headerlink" title="Client"></a><font size="3px">Client</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Chain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Leader director = <span class="keyword">new</span> Director(<span class="string">"主管"</span>);</span><br><span class="line"></span><br><span class="line">Leader manager = <span class="keyword">new</span> Manager(<span class="string">"经理"</span>);</span><br><span class="line"></span><br><span class="line">manager.setNextLeader(director);</span><br><span class="line"></span><br><span class="line">Leave leave = <span class="keyword">new</span> Leave(<span class="string">"员工"</span>, <span class="string">"过年"</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">manager.handleRequest(leave);</span><br><span class="line"></span><br><span class="line">Leave leave2 = <span class="keyword">new</span> Leave(<span class="string">"员工"</span>, <span class="string">"过年"</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">manager.handleRequest(leave2);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="访问者模式"><a href="#访问者模式" class="headerlink" title="访问者模式"></a><font size="3px">访问者模式</font></h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;GOF(Group For Four)23设计模式&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://www.runaccepted.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://www.runaccepted.com/tags/Java/"/>
    
      <category term="设计模式" scheme="https://www.runaccepted.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>20200202</title>
    <link href="https://www.runaccepted.com/2020/02/02/20200202/"/>
    <id>https://www.runaccepted.com/2020/02/02/20200202/</id>
    <published>2020-02-02T12:20:02.000Z</published>
    <updated>2020-02-02T12:20:20.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">20200202 正月初九 所想所愿，一切安好！ 山河无恙，人间安好！</blockquote><a id="more"></a><p><img src="/2020/02/02/20200202/20202202.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;20200202 正月初九 所想所愿，一切安好！ 山河无恙，人间安好！&lt;/blockquote&gt;
    
    </summary>
    
      <category term="闲谈" scheme="https://www.runaccepted.com/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="闲谈" scheme="https://www.runaccepted.com/tags/%E9%97%B2%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>感悟</title>
    <link href="https://www.runaccepted.com/2020/01/28/%E6%84%9F%E6%82%9F/"/>
    <id>https://www.runaccepted.com/2020/01/28/感悟/</id>
    <published>2020-01-28T08:57:50.000Z</published>
    <updated>2020-02-02T13:45:55.376Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">just talk</blockquote><a id="more"></a><p>成年人的世界里只有厮杀。再也不会有考不好怎么办，做不到怎么办。也不会再有过程更重要的谎言。什么样的结果对应什么样的道路上什么样的选择对应什么样的阶层。一眨眼毕业这么多年，对未来路依旧迷惘。我只希望能有时间停下来好好想想…</p><p>有时候确实会不想做事。但是，就像村上春树说的，正因为今天不想跑才去跑。学习也是一样。告诉自己我只认真干5分钟就好，是继续还是放弃留给5分钟后的自己去决定。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;just talk&lt;/blockquote&gt;
    
    </summary>
    
      <category term="闲谈" scheme="https://www.runaccepted.com/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="闲谈" scheme="https://www.runaccepted.com/tags/%E9%97%B2%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>推荐读物</title>
    <link href="https://www.runaccepted.com/2020/01/15/%E6%8E%A8%E8%8D%90%E8%AF%BB%E7%89%A9/"/>
    <id>https://www.runaccepted.com/2020/01/15/推荐读物/</id>
    <published>2020-01-15T15:02:13.000Z</published>
    <updated>2020-05-06T21:38:16.760Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">读完后，让人相见恨晚的6本书</blockquote><a id="more"></a><p><a href="https://www.toutiao.com/i6725660004914823683/?timestamp=1579071109&app=news_article&group_id=6725660004914823683&req_id=202001151451480100260770791E00A533" target="_blank" rel="noopener">原文</a></p><h1 id="自控力"><a href="#自控力" class="headerlink" title="自控力"></a><font size="4px">自控力</font></h1><p><img src="/2020/01/15/推荐读物/1.jpeg" alt></p><p>本书作者凯利·麦格尼格尔教授，是斯坦福大学备受赞誉的心理学家。</p><p>作者在这本书里提出，提高自控力的最有效途径，在于弄清自己如何失控、为何失控。</p><h1 id="亲密关系"><a href="#亲密关系" class="headerlink" title="亲密关系"></a><font size="4px">亲密关系</font></h1><p><img src="/2020/01/15/推荐读物/2.jpeg" alt></p><p>本书由罗兰·米勒和丹尼尔·珀尔曼共同编写。</p><p>本书综合了心理学多个分支的研究理论和成果，总结出人们在交往与沟通、爱情与承诺、婚姻与性爱、嫉妒与背叛等方面的行为特点和规律。</p><p>比如，童年期的经历真能决定未来婚姻是否幸福吗？真有一种能够决定“出轨”的基因吗？异性友谊真的无法避免“性”的尴尬吗？</p><h1 id="月亮与六便士"><a href="#月亮与六便士" class="headerlink" title="月亮与六便士"></a><font size="4px">月亮与六便士</font></h1><p><img src="/2020/01/15/推荐读物/3.jpeg" alt></p><p>本书作者毛姆，英国著名作家。</p><p>一个英国证券交易所的经纪人，本已有牢靠的职业和地位、美满的家庭，但却迷恋上绘画，像“被魔鬼附了体”，突然弃家出走，到巴黎去追求绘画的理想。</p><p>经过一番离奇的遭遇后，主人公最后离开文明世界，远遁到与世隔绝的塔希提岛上。</p><p>他终于找到灵魂的宁静和适合自己艺术气质的氛围。他同一个土著女子同居，创作出一幅又一幅使后世震惊的杰作。</p><p>通过这样一个一心追求艺术、不通人性世故的怪才，毛姆探索了艺术的产生与本质、个性与天才的关系、艺术家与社会的矛盾等等引人深思的问题。</p><p>《月亮和六便士》，毛姆用第一人称的叙述手法，借“我”之口，叙述整个故事，有人认为这篇小说的原型是法国印象派画家高更，这更增加了它的传奇色彩，受到了全世界读者的关注。</p><p>在这个混沌的世界，每个人的心中都有属于自己的月亮——心中的追求。</p><p>在我们为了生活选择六便士的时候，也不要忘记月亮的存在，它一直在我们行进的前方，照亮我们心灵的迷惘。</p><h1 id="活着"><a href="#活着" class="headerlink" title="活着"></a><font size="4px">活着</font></h1><p><img src="/2020/01/15/推荐读物/4.jpeg" alt></p><p>对于“为什么而活”这个问题，每个人都能给出自己的回答。</p><p>余华笔下塑造的人物福贵，以其充满苦难的一生，给出了他的回答：<strong>活着，是为了活着本身。</strong></p><p>这是一本书写生命意义的书。</p><p>地主少爷福贵嗜赌成性，终于赌光了家业一贫如洗。</p><p>穷困之中的福贵因为母亲生病前去求医，没想到半路上被国民党部队抓了壮丁，后被解放军所俘虏，回到家乡他才知道母亲已经去世，妻子家珍含辛茹苦带大了一双儿女，但女儿不幸变成了聋哑人，儿子机灵活泼……</p><p>然而，真正的悲剧从此才开始渐次上演，每读一页，都让我们止不住泪湿双眼，因为生命里难得的温情将被一次次死亡撕扯得粉碎，只剩得老了的福贵伴随着一头老牛在阳光下回忆。</p><p>他的一生，就是一个苦难史，岁月只留他一个人独自划过时间的长河。</p><h1 id="柑橘与柠檬啊"><a href="#柑橘与柠檬啊" class="headerlink" title="柑橘与柠檬啊"></a><font size="4px">柑橘与柠檬啊</font></h1><p><img src="/2020/01/15/推荐读物/5.jpeg" alt></p><p>作者麦克·莫波格，英国儿童、青春文学最畅销作家之一，英国三个获得“桂冠作家”荣誉的作家之一。</p><p>本书是一本献给所有人看的童书，一首治愈内心忧伤的神奇之歌。</p><p>故事的讲述者小托生长在一个虽然贫穷却温馨和睦的家庭。</p><p>他的妈妈柔弱却坚韧，在丈夫意外去世后独自扛起生活的重担。</p><p>哥哥大个儿乔虽然有智力缺陷，却无比善良宽厚，总能带给大家安慰，他最爱唱的歌就是“柑橘与柠檬”。</p><p>二哥查理似乎天生就是小托的守护神，陪伴了他整个的青少年时代，他们共享着所有的青春回忆以及对一个女孩的爱。</p><p>而这一切都被随之而来的战争打乱，伴随着战争而来的苦难与失去，是主人公小托真正成熟的标志。</p><p>每一个经历了无数悲欢喜乐的大人们，都能在这部小说里看到自己的影子。</p><h1 id="我们仨"><a href="#我们仨" class="headerlink" title="我们仨"></a><font size="4px">我们仨</font></h1><p><img src="/2020/01/15/推荐读物/6.jpeg" alt></p><p>我们仨》是钱钟书夫人杨绛撰写的家庭生活回忆录。</p><p>1998年，钱钟书逝世，而他和杨绛唯一的女儿钱瑗已于此前（1997年）先他们而去。在人生的伴侣离去四年后，杨绛在92岁高龄的时候用心记述了他们这个特殊家庭63年的风风雨雨、点点滴滴，结成回忆录《我们仨》。</p><p>全书分为三部分。</p><p>第一部分，杨绛以其一贯的慧心、独特的笔法，用梦境的形式讲述了最后几年中一家三口相依为命的情感体验。</p><p>第二部分，女儿与丈夫先后病重去世，作者在书中以梦幻的形式表现了这段深重的情感经历。</p><p>第三部分，以平实感人的文字记录了自1935年伉俪二人赴英国留学，并在牛津喜得爱女，直至1998年女儿与钱先生相继逝世，这个家庭鲜为人知的坎坷历程。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;读完后，让人相见恨晚的6本书&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://www.runaccepted.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="https://www.runaccepted.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-Plus</title>
    <link href="https://www.runaccepted.com/2019/12/27/MyBatis-Plus/"/>
    <id>https://www.runaccepted.com/2019/12/27/MyBatis-Plus/</id>
    <published>2019-12-27T07:56:58.000Z</published>
    <updated>2020-07-04T08:26:24.408Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><a href="https://mp.baomidou.com/" target="_blank" rel="noopener">https://mp.baomidou.com/</a>==><a href="https://mp.baomidou.com/guide/" target="_blank" rel="noopener">快速开始</a></blockquote><a id="more"></a><h1 id="Mybatis-Plus依赖"><a href="#Mybatis-Plus依赖" class="headerlink" title="Mybatis-Plus依赖"></a><font size="4px">Mybatis-Plus依赖</font></h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1.tmp<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a><font size="4px">数据库设计</font></h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'主键ID'</span>,</span><br><span class="line">  <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'姓名'</span>,</span><br><span class="line">  age <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'年龄'</span>,</span><br><span class="line">  email <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">comment</span> <span class="string">'邮件'</span>,</span><br><span class="line">  create_time <span class="built_in">timestamp</span> <span class="keyword">comment</span> <span class="string">'注册时间'</span>,</span><br><span class="line">  update_time <span class="built_in">timestamp</span> <span class="keyword">comment</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  primary <span class="keyword">key</span> (<span class="keyword">id</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="lombok"><a href="#lombok" class="headerlink" title="lombok"></a><font size="4px">lombok</font></h1><h2 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a><font size="3px">Maven依赖</font></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 简化实体类 get/set方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>intelliJ IDEA设置</p><p><img src="/2019/12/27/MyBatis-Plus/lombok.png" alt></p><h2 id="Data"><a href="#Data" class="headerlink" title="@Data"></a><font size="3px">@Data</font></h2><p>添加在实体类上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccpeted.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="get-set自动生成"><a href="#get-set自动生成" class="headerlink" title="get/set自动生成"></a><font size="3px">get/set自动生成</font></h2><p><img src="/2019/12/27/MyBatis-Plus/lombokfun.png" alt></p><h1 id="application-properties"><a href="#application-properties" class="headerlink" title="application.properties"></a><font size="4px">application.properties</font></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/login?useSSL=false</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=mysql123//</span><br><span class="line"></span><br><span class="line">#驼峰命令</span><br><span class="line">#mybatis-plus.configuration.map-underscore-to-camel-case=true</span><br><span class="line">#sql语句输出到控制台</span><br><span class="line">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span><br></pre></td></tr></table></figure><h1 id="extends-BaseMapper-lt-Object-gt"><a href="#extends-BaseMapper-lt-Object-gt" class="headerlink" title="extends BaseMapper&lt; Object&gt;"></a><font size="4px">extends BaseMapper&lt; Object&gt;</font></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccpeted.mybatisplus.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.runaccpeted.mybatisplus.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="BaseMapper-已定义方法"><a href="#BaseMapper-已定义方法" class="headerlink" title="BaseMapper 已定义方法"></a><font size="3px">BaseMapper 已定义方法</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BaseMapper</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(T entity)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteById</span><span class="params">(Serializable id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteByMap</span><span class="params">(@Param(<span class="string">"cm"</span>)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; wrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteBatchIds</span><span class="params">(@Param(<span class="string">"coll"</span>)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateById</span><span class="params">(@Param(<span class="string">"et"</span>)</span> T entity)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(@Param(<span class="string">"et"</span>)</span> T entity, @<span class="title">Param</span><span class="params">(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; updateWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">T <span class="title">selectById</span><span class="params">(Serializable id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">selectBatchIds</span><span class="params">(@Param(<span class="string">"coll"</span>)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">selectByMap</span><span class="params">(@Param(<span class="string">"cm"</span>)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">T <span class="title">selectOne</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">Integer <span class="title">selectCount</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;T&gt; <span class="title">selectList</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    List&lt;Map&lt;String, Object&gt;&gt; selectMaps(<span class="meta">@Param</span>(<span class="string">"ew"</span>) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Object&gt; <span class="title">selectObjs</span><span class="params">(@Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E extends IPage&lt;T&gt;&gt; <span class="function">E <span class="title">selectPage</span><span class="params">(E page, @Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line">    &lt;E extends IPage&lt;Map&lt;String, Object&gt;&gt;&gt; <span class="function">E <span class="title">selectMapsPage</span><span class="params">(E page, @Param(<span class="string">"ew"</span>)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加-MapperScan"><a href="#添加-MapperScan" class="headerlink" title="添加@MapperScan"></a><font size="4px">添加@MapperScan</font></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = <span class="string">"com.runaccpeted.mybatisplus.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisplusApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MybatisplusApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="CRUD测试"><a href="#CRUD测试" class="headerlink" title="CRUD测试"></a><font size="4px">CRUD测试</font></h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Test.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccpeted.mybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.runaccpeted.mybatisplus.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.runaccpeted.mybatisplus.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MybatisplusApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">"tom"</span>);</span><br><span class="line">        user.setAge(<span class="number">80</span>);</span><br><span class="line">        user.setEmail(<span class="string">"wt@163.com"</span>);</span><br><span class="line">        userMapper.insert(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分布式id生成策略"><a href="#分布式id生成策略" class="headerlink" title="分布式id生成策略"></a><font size="3px">分布式id生成策略</font></h2><p><a href="https://www.cnblogs.com/javaguide/p/11824105.html" target="_blank" rel="noopener">分布式id生成方案总结</a></p><p> <a href="https://www.cnblogs.com/haoxinyue/p/5208136.html" target="_blank" rel="noopener">分布式系统唯一ID生成方案汇总</a></p><p>mybatis-plus自生成的id是一串数字 1233005715855114242 </p><p>即默认采用的是snowflake算法 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableId</span>(type = IdType.ASSIGN_ID) </span><br><span class="line"><span class="keyword">private</span> Long id;</span><br></pre></td></tr></table></figure><h3 id="IdType"><a href="#IdType" class="headerlink" title="IdType"></a><font size="3px"><a href="https://github.com/baomidou/mybatis-plus/blob/3.0/mybatis-plus-annotation/src/main/java/com/baomidou/mybatisplus/annotation/IdType.java" target="_blank" rel="noopener">IdType</a></font></h3><table><thead><tr><th align="center">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">AUTO</td><td align="left">数据库ID自增</td></tr><tr><td align="center">NONE</td><td align="left">无状态,该类型为未设置主键类型(注解里等于跟随全局,全局里约等于 INPUT)</td></tr><tr><td align="center">INPUT</td><td align="left">insert前自行set主键值</td></tr><tr><td align="center">ASSIGN_ID</td><td align="left">分配ID(主键类型为Number(Long和Integer)或String)(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextId</code>(默认实现类为<code>DefaultIdentifierGenerator</code>雪花算法)</td></tr><tr><td align="center">ASSIGN_UUID</td><td align="left">分配UUID,主键类型为String(since 3.3.0),使用接口<code>IdentifierGenerator</code>的方法<code>nextUUID</code>(默认default方法)</td></tr><tr><td align="center"><del>ID_WORKER</del></td><td align="left">分布式全局唯一ID 长整型类型(please use <code>ASSIGN_ID</code>)</td></tr><tr><td align="center"><del>UUID</del></td><td align="left">32位UUID字符串(please use <code>ASSIGN_UUID</code>)</td></tr><tr><td align="center"><del>ID_WORKER_STR</del></td><td align="left">分布式全局唯一ID 字符串类型(please use <code>ASSIGN_ID</code>)</td></tr></tbody></table><h2 id="增加"><a href="#增加" class="headerlink" title="增加"></a><font size="3px">增加</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(T entity)</span></span>;</span><br></pre></td></tr></table></figure><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a><font size="3px">更新</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据 whereEntity 条件，更新记录</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(@Param(Constants.ENTITY)</span> T entity, @<span class="title">Param</span><span class="params">(Constants.WRAPPER)</span> Wrapper&lt;T&gt; updateWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 ID 修改</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateById</span><span class="params">(@Param(Constants.ENTITY)</span> T entity)</span>;</span><br></pre></td></tr></table></figure><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a><font size="3px">查询</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据 ID 查询</span></span><br><span class="line"><span class="function">T <span class="title">selectById</span><span class="params">(Serializable id)</span></span>;</span><br><span class="line"><span class="comment">// 根据 entity 条件，查询一条记录</span></span><br><span class="line"><span class="function">T <span class="title">selectOne</span><span class="params">(@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询（根据ID 批量查询）</span></span><br><span class="line"><span class="function">List&lt;T&gt; <span class="title">selectBatchIds</span><span class="params">(@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"><span class="comment">// 根据 entity 条件，查询全部记录</span></span><br><span class="line"><span class="function">List&lt;T&gt; <span class="title">selectList</span><span class="params">(@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 查询（根据 columnMap 条件）</span></span><br><span class="line"><span class="function">List&lt;T&gt; <span class="title">selectByMap</span><span class="params">(@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; selectMaps(<span class="meta">@Param</span>(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录。注意： 只返回第一个字段的值</span></span><br><span class="line"><span class="function">List&lt;Object&gt; <span class="title">selectObjs</span><span class="params">(@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据 entity 条件，查询全部记录（并翻页）</span></span><br><span class="line"><span class="function">IPage&lt;T&gt; <span class="title">selectPage</span><span class="params">(IPage&lt;T&gt; page, @Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录（并翻页）</span></span><br><span class="line">IPage&lt;Map&lt;String, Object&gt;&gt; selectMapsPage(IPage&lt;T&gt; page, <span class="meta">@Param</span>(Constants.WRAPPER) Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询总记录数</span></span><br><span class="line"><span class="function">Integer <span class="title">selectCount</span><span class="params">(@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询所有</span></span><br><span class="line"><span class="keyword">for</span>(User u:userMapper.selectList(<span class="keyword">null</span>))&#123;</span><br><span class="line">    System.out.println(u);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据ID批量查询</span></span><br><span class="line">userMapper.selectBatchIds(Arrays.asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据Map查询</span></span><br><span class="line">HashMap&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">map.put(<span class="string">"name"</span>,<span class="string">"rose"</span>);</span><br><span class="line">userMapper.selectByMap(map);</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a><font size="3px">删除</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据 entity 条件，删除记录</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; wrapper)</span>;</span><br><span class="line"><span class="comment">// 删除（根据ID 批量删除）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteBatchIds</span><span class="params">(@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;</span><br><span class="line"><span class="comment">// 根据 ID 删除</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteById</span><span class="params">(Serializable id)</span></span>;</span><br><span class="line"><span class="comment">// 根据 columnMap 条件，删除记录</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteByMap</span><span class="params">(@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;</span><br></pre></td></tr></table></figure><h1 id="自动填充-更新时间"><a href="#自动填充-更新时间" class="headerlink" title="自动填充-更新时间"></a><font size="4px">自动填充-更新时间</font></h1><h2 id="TableField-fill-FieldFill-INSERT"><a href="#TableField-fill-FieldFill-INSERT" class="headerlink" title="@TableField(fill = FieldFill.INSERT)"></a><font size="3px">@TableField(fill = FieldFill.INSERT)</font></h2><p>注解填充字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableField</span>(fill = FieldFill.INSERT) <span class="comment">//添加数据时加值</span></span><br><span class="line"><span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line"><span class="meta">@TableField</span>(fill=FieldFill.INSERT_UPDATE) <span class="comment">//修改数据时加值</span></span><br><span class="line"><span class="keyword">private</span> Date updateTime;</span><br></pre></td></tr></table></figure><h2 id="实现类-MyMetaObjectHandler"><a href="#实现类-MyMetaObjectHandler" class="headerlink" title="实现类 MyMetaObjectHandler"></a><font size="3px">实现类 MyMetaObjectHandler</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccpeted.mybatisplus.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注册到容器中</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">".......insert.........."</span>);</span><br><span class="line">        <span class="comment">//strictInsertFill(MetaObject metaObject, String fieldName, Class&lt;T&gt; fieldType, Object fieldVal)</span></span><br><span class="line">        <span class="keyword">this</span>.strictInsertFill(metaObject,<span class="string">"createTime"</span>, Date.class,<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">this</span>.strictInsertFill(metaObject,<span class="string">"updateTime"</span>, Date.class,<span class="keyword">new</span> Date());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.strictInsertFill(metaObject,<span class="string">"updateTime"</span>, Date.class,<span class="keyword">new</span> Date());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a><font size="3px">测试</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccpeted.mybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.runaccpeted.mybatisplus.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.runaccpeted.mybatisplus.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MybatisplusApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">"rose"</span>);</span><br><span class="line">        user.setAge(<span class="number">90</span>);</span><br><span class="line">        user.setEmail(<span class="string">"yuyu@163.com"</span>);</span><br><span class="line">        userMapper.insert(user);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">      <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">          User user = <span class="keyword">new</span> User();</span><br><span class="line">          user.setId(<span class="number">1233034506639908866L</span>);</span><br><span class="line">          user.setName(<span class="string">"amy"</span>);</span><br><span class="line">          userMapper.updateById(user);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a><font size="3px">输出</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: INSERT INTO user ( id, name, age, email, create_time, update_time ) VALUES ( ?, ?, ?, ?, ?, ? ) </span><br><span class="line">==&gt; Parameters: 1233035752850354178(Long), rose(String), 90(Integer), yuyu@163.com(String), 2019-12-27 22:26:46.838(Timestamp), 2019-12-27 22:26:46.846(Timestamp)</span><br><span class="line">&lt;==    Updates: 1</span><br><span class="line"></span><br><span class="line">==&gt;  Preparing: UPDATE user SET name=?, update_time=? WHERE id=? </span><br><span class="line">==&gt; Parameters: amy(String), 2019-12-27 22:37:20.619(Timestamp), 1233034506639908866(Long)</span><br><span class="line">&lt;==    Updates: 1</span><br></pre></td></tr></table></figure><h1 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a><font size="4px">乐观锁</font></h1><p>丢失更新</p><p>当多个线程运行时，通过比较当前数据版本号和数据库里记录版本号是否一样，一致才提交事务，并把版本号+1。其他线程提交时，版本号不同则不能提交事务。</p><h2 id="表中添加版本号列"><a href="#表中添加版本号列" class="headerlink" title="表中添加版本号列"></a><font size="3px">表中添加版本号列</font></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> <span class="keyword">column</span> <span class="keyword">version</span> <span class="built_in">int</span> <span class="keyword">default</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a><font size="3px">插件</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccpeted.mybatisplus.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisplusConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加属性-Version"><a href="#添加属性-Version" class="headerlink" title="添加属性@Version"></a><font size="3px">添加属性@Version</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Version</span></span><br><span class="line"><span class="keyword">private</span> Integer version;</span><br></pre></td></tr></table></figure><h2 id="注意⚠️"><a href="#注意⚠️" class="headerlink" title="注意⚠️"></a><font size="3px">注意⚠️</font></h2><div class="note warning"><p>支持的数据类型只有:int,Integer,long,Long,Date,Timestamp,LocalDateTime<br>仅支持 updateById(id) 与 update(entity, wrapper) 方法<br>  </p></div><p><font size="3px">自动填充版本号</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccpeted.mybatisplus.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//System.out.println(".......insert..........");</span></span><br><span class="line">        <span class="comment">//strictInsertFill(MetaObject metaObject, String fieldName, Class&lt;T&gt; fieldType, Object fieldVal)</span></span><br><span class="line">        <span class="keyword">this</span>.strictInsertFill(metaObject,<span class="string">"version"</span>, Integer.class,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试乐观锁"><a href="#测试乐观锁" class="headerlink" title="测试乐观锁"></a><font size="3px">测试乐观锁</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = userMapper.selectById(<span class="number">1233005715855114242L</span>);</span><br><span class="line">    user.setName(<span class="string">"Alice"</span>);</span><br><span class="line">    userMapper.updateById(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a><font size="3px">输出</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: SELECT id,name,age,email,create_time,update_time,version FROM user WHERE id=? </span><br><span class="line">==&gt; Parameters: 1233005715855114242(Long)</span><br><span class="line">&lt;==    Columns: id, name, age, email, create_time, update_time, version</span><br><span class="line">&lt;==        Row: 1233005715855114242, tom, 80, wt@163.com, 2019-12-27 21:07:25, 2019-12-27 21:07:25, 1</span><br><span class="line">&lt;==      Total: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">==&gt;  Preparing: UPDATE user SET name=?, age=?, email=?, create_time=?, update_time=?, version=? WHERE id=? AND version=? </span><br><span class="line">==&gt; Parameters: Alice(String), 80(Integer), wt@163.com(String), 2019-12-27 21:07:25.0(Timestamp), 2019-12-27 23:44:34.459(Timestamp), 2(Integer), 1233005715855114242(Long), 1(Integer)</span><br><span class="line">&lt;==    Updates: 1</span><br></pre></td></tr></table></figure><h1 id="分页实现"><a href="#分页实现" class="headerlink" title="分页实现"></a><font size="4px">分页实现</font></h1><h2 id="注册PaginationInterceptor-Bean"><a href="#注册PaginationInterceptor-Bean" class="headerlink" title="注册PaginationInterceptor Bean"></a><font size="3px">注册PaginationInterceptor Bean</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccpeted.mybatisplus.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.optimize.JsqlParserCountOptimize;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = <span class="string">"com.runaccpeted.mybatisplus.mapper"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisplusConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册分页插件</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        PaginationInterceptor paginationInterceptor = <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Page-long-current-long-size-selectPage"><a href="#Page-long-current-long-size-selectPage" class="headerlink" title="Page(long current, long size) - selectPage()"></a><font size="3px">Page(long current, long size) - selectPage()</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.Page;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selPage</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//public Page(long current, long size) &#123;&#125;</span></span><br><span class="line">    Page&lt;User&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line">    userMapper.selectPage(page,<span class="keyword">null</span>);</span><br><span class="line">    System.out.println(<span class="string">"当前页 "</span>+page.getCurrent());</span><br><span class="line">    System.out.println(<span class="string">"每页记录数 "</span>+page.getSize());</span><br><span class="line">    System.out.println(<span class="string">"总页数 "</span>+page.getPages());</span><br><span class="line">    System.out.println(<span class="string">"总记录数 "</span>+page.getTotal());</span><br><span class="line">    System.out.println(<span class="string">"有上一页 "</span>+page.hasPrevious());</span><br><span class="line">    System.out.println(<span class="string">"有下一页 "</span>+page.hasNext());</span><br><span class="line">    System.out.println(<span class="string">"当前记录 "</span>+page.getRecords());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a><font size="3px">输出</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: SELECT COUNT(1) FROM user </span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: COUNT(1)</span><br><span class="line">&lt;==        Row: 8</span><br><span class="line">==&gt;  Preparing: SELECT id,name,age,email,create_time,update_time,version FROM user LIMIT ?,? </span><br><span class="line">==&gt; Parameters: 0(Long), 3(Long)</span><br><span class="line">&lt;==    Columns: id, name, age, email, create_time, update_time, version</span><br><span class="line">&lt;==        Row: 1233005715855114242, Alice, 80, wt@163.com, 2019-12-27 21:07:25, 2019-12-27 21:27:25, 2</span><br><span class="line">&lt;==        Row: 1233015547436777474, tom, 80, wt@163.com, 2019-12-27 21:07:29, 2019-12-27 21:07:29, 1</span><br><span class="line">&lt;==        Row: 1233031811831980033, rose, 90, yuyu@163.com, 2019-12-27 21:08:29, 2019-12-27 21:08:29, 1</span><br><span class="line">&lt;==      Total: 3</span><br><span class="line">Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4af45442]</span><br><span class="line">当前页 1</span><br><span class="line">每页记录数 3</span><br><span class="line">总页数 3</span><br><span class="line">总记录数 8</span><br><span class="line">有上一页 false</span><br><span class="line">有下一页 true</span><br><span class="line">当前记录 [User(id=1233005715855114242, name=Alice, age=80, email=wt@163.com, createTime=Thu Feb 27 20:07:25 CST 2019, updateTime=Thu Feb 27 23:44:34 CST 2019, version=2), User(id=1233015547436777474, name=tom, age=80, email=wt@163.com, createTime=Thu Feb 27 21:07:29 CST 2019, updateTime=Thu Feb 27 21:07:29 CST 2019, version=1), User(id=1233031811831980033, name=rose, age=90, email=yuyu@163.com, createTime=Thu Feb 27 21:08:29 CST 2019, updateTime=Thu Feb 27 21:08:29 CST 2019, version=1)]</span><br></pre></td></tr></table></figure><h1 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a><font size="4px">逻辑删除</font></h1><p>不同于物理删除，仍存在于数据库，状态改为被删除状态</p><h2 id="表中添加删除状态字段"><a href="#表中添加删除状态字段" class="headerlink" title="表中添加删除状态字段"></a><font size="3px">表中添加删除状态字段</font></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">user</span> <span class="keyword">add</span> <span class="keyword">column</span> deleted <span class="built_in">boolean</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>表中没有boolean属性</p><p><img src="/2019/12/27/MyBatis-Plus/deleted.png" alt></p><h2 id="实体类中添加属性-TableLogic"><a href="#实体类中添加属性-TableLogic" class="headerlink" title="实体类中添加属性@TableLogic"></a><font size="3px">实体类中添加属性@TableLogic</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line"><span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure><h2 id="自动填充状态"><a href="#自动填充状态" class="headerlink" title="自动填充状态"></a><font size="3px">自动填充状态</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.strictInsertFill(metaObject,<span class="string">"deleted"</span>,Integer.class,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置application-properties"><a href="#配置application-properties" class="headerlink" title="配置application.properties"></a><font size="3px">配置application.properties</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 逻辑已删除值(默认为 1)</span><br><span class="line">mybatis-plus.global-config.db-config.logic-delete-value=1</span><br><span class="line"># 逻辑未删除值(默认为 0)</span><br><span class="line">mybatis-plus.global-config.db-config.logic-not-delete-value=0</span><br><span class="line"># 全局逻辑删除字段值 </span><br><span class="line">mybatis-plus.global-config.db-config.logic-delete-field=true</span><br></pre></td></tr></table></figure><h2 id="删除测试"><a href="#删除测试" class="headerlink" title="删除测试"></a><font size="3px">删除测试</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>&#123;</span><br><span class="line">   userMapper.deleteById(<span class="number">1233033268573749250L</span>);</span><br><span class="line">    <span class="comment">//userMapper.delete(user);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a><font size="3px">输出</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: UPDATE user SET deleted=1 WHERE id=? AND deleted=0 </span><br><span class="line">==&gt; Parameters: 1233033268573749250(Long)</span><br><span class="line">&lt;==    Updates: 1</span><br></pre></td></tr></table></figure><p>并没有删除这条记录</p><h2 id="查询测试"><a href="#查询测试" class="headerlink" title="查询测试"></a><font size="3px">查询测试</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selall</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(User u:userMapper.selectList(<span class="keyword">null</span>))&#123;</span><br><span class="line">        System.out.println(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a><font size="3px">输出</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: SELECT id,name,age,email,create_time,update_time,version,deleted FROM user WHERE deleted=0 </span><br><span class="line">==&gt; Parameters: </span><br><span class="line">&lt;==    Columns: id, name, age, email, create_time, update_time, version, deleted</span><br><span class="line">&lt;==      Total: 8</span><br></pre></td></tr></table></figure><p>输出的是deleted=0 的记录</p><h1 id="条件构造器Wrapper-QueryWrapper"><a href="#条件构造器Wrapper-QueryWrapper" class="headerlink" title="条件构造器Wrapper-QueryWrapper"></a><font size="4px">条件构造器Wrapper-<a href="https://mp.baomidou.com/guide/wrapper.html#alleq" target="_blank" rel="noopener">QueryWrapper</a></font></h1><p><a href="https://mp.baomidou.com/guide/wrapper.html#alleq" target="_blank" rel="noopener">https://mp.baomidou.com/guide/wrapper.html#alleq</a></p><h2 id="gt-“age”-80-age-gt-80"><a href="#gt-“age”-80-age-gt-80" class="headerlink" title="gt(“age”,80) = age&gt;80"></a><font size="3px">gt(“age”,80) = age&gt;80</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selByCondition</span><span class="params">()</span></span>&#123;</span><br><span class="line">    QueryWrapper&lt;User&gt; wrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">    <span class="comment">// age&gt;80</span></span><br><span class="line">    wrapper.gt(<span class="string">"age"</span>,<span class="number">80</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User u:userMapper.selectList(wrapper)) &#123;</span><br><span class="line">        System.out.println(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a><font size="3px">输出</font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">==&gt;  Preparing: SELECT id,name,age,email,create_time,update_time,version,deleted FROM user WHERE deleted=0 AND (age &gt; ?)</span><br></pre></td></tr></table></figure><h2 id="like-“name”-”王”-name-like-‘-王-’"><a href="#like-“name”-”王”-name-like-‘-王-’" class="headerlink" title="like(“name”,”王”) = name like ‘%王%’"></a><font size="3px">like(“name”,”王”) = name like ‘%王%’</font></h2><h2 id="select-“id”-“name”-“age”-仅查询出几个字段数据"><a href="#select-“id”-“name”-“age”-仅查询出几个字段数据" class="headerlink" title="select(“id”, “name”, “age”)     仅查询出几个字段数据"></a><font size="3px">select(“id”, “name”, “age”)     仅查询出几个字段数据</font></h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;a href=&quot;https://mp.baomidou.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.baomidou.com/&lt;/a&gt;==&gt;&lt;a href=&quot;https://mp.baomidou.com/guide/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;快速开始&lt;/a&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://www.runaccepted.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MyBatis" scheme="https://www.runaccepted.com/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>修改MySQL默认时区</title>
    <link href="https://www.runaccepted.com/2019/12/07/%E4%BF%AE%E6%94%B9MySQL%E9%BB%98%E8%AE%A4%E6%97%B6%E5%8C%BA/"/>
    <id>https://www.runaccepted.com/2019/12/07/修改MySQL默认时区/</id>
    <published>2019-12-06T21:26:06.000Z</published>
    <updated>2020-05-06T21:35:57.740Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">修改MySQL默认时区</blockquote><a id="more"></a><h1 id="修改改为东八区"><a href="#修改改为东八区" class="headerlink" title="修改改为东八区"></a><font size="4px">修改改为东八区</font></h1><p>默认数据库时区比服务器少8小时</p><p>登录到 <code>mysql -uroot -p</code></p><p>查看数据库时间 <code>select now();</code></p><p>查询数据库时区 <code>show variables like &#39;%time_zone%&#39;;</code></p><p>修改时区 <code>set global time_zone = &#39;+8:00&#39;;</code>  <code>set time_zone = &#39;+8:00&#39;;</code></p><p>刷新  <code>flush privileges;</code></p><p>重新查询时区 <code>show variables like &#39;%time_zone%&#39;;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mysql -uroot -p</span></span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 8</span><br><span class="line">Server version: 8.0.17 MySQL Community Server - GPL</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select now();</span></span><br><span class="line">+---------------------+</span><br><span class="line">| now()               |</span><br><span class="line">+---------------------+</span><br><span class="line">| 2019-12-07 05:17:36 |</span><br><span class="line">+---------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'%time_zone%'</span>;</span></span><br><span class="line">+------------------+--------+</span><br><span class="line">| Variable_name    | Value  |</span><br><span class="line">+------------------+--------+</span><br><span class="line">| system_time_zone | CST    |</span><br><span class="line">| time_zone        | SYSTEM |</span><br><span class="line">+------------------+--------+</span><br><span class="line">2 rows in set (0.04 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">set</span> global time_zone = <span class="string">'+8:00'</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">set</span> time_zone = <span class="string">'+8:00'</span>;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'%time_zone%'</span>;</span></span><br><span class="line">+------------------+--------+</span><br><span class="line">| Variable_name    | Value  |</span><br><span class="line">+------------------+--------+</span><br><span class="line">| system_time_zone | CST    |</span><br><span class="line">| time_zone        | +08:00 |</span><br><span class="line">+------------------+--------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show variables like <span class="string">'%time_zone%'</span>;</span></span><br><span class="line">+------------------+--------+</span><br><span class="line">| Variable_name    | Value  |</span><br><span class="line">+------------------+--------+</span><br><span class="line">| system_time_zone | CST    |</span><br><span class="line">| time_zone        | +08:00 |</span><br><span class="line">+------------------+--------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure><h1 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a><font size="4px">修改配置文件</font></h1><p>打开mysql的配置文件 添加<code>default-time_zone = &#39;+8:00&#39;</code></p><p>重启mysql</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;修改MySQL默认时区&lt;/blockquote&gt;
    
    </summary>
    
      <category term="MySQL" scheme="https://www.runaccepted.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://www.runaccepted.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>redis+rabbitmq+jmeter模拟实现秒杀系统</title>
    <link href="https://www.runaccepted.com/2019/11/30/redis-rabbitmq-jmeter%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F/"/>
    <id>https://www.runaccepted.com/2019/11/30/redis-rabbitmq-jmeter模拟实现秒杀系统/</id>
    <published>2019-11-30T15:15:25.000Z</published>
    <updated>2020-05-06T21:42:16.706Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">SpringBoot项目，实现亿万级电商秒杀系统</blockquote><a id="more"></a><h1 id="解析思路"><a href="#解析思路" class="headerlink" title="解析思路"></a><font size="4px">解析思路</font></h1><ol><li>用schedule任务调度每分钟扫描数据库中的就近的秒杀项目，符合的项目以seckill::count::id - goodsId的形式放入redis的List中</li><li>前端用户下单，抢到的用户以seckill::users::id - userId的形式放入redis的set中，防重复，同时list中pop一个</li><li>为每位抢到的用户生成一个UUID的订单号orderNo，返回给用户，同时通知消息队列{userId,orderNo}进行订单创建</li><li>后台监听消息队列中的消息并创建出订单</li><li>让每位用户等待3秒后，凭借orderNo查询后台，如果订单已创建，则该用户可以进行支付</li></ol><h1 id="Apache-jmeter压力测试"><a href="#Apache-jmeter压力测试" class="headerlink" title="Apache jmeter压力测试"></a><font size="4px">Apache jmeter压力测试</font></h1><p><a href="https://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener">https://jmeter.apache.org/download_jmeter.cgi</a></p><p>To run JMeter, run the <strong>jmeter.bat</strong> (for Windows) or <strong>jmeter</strong> (for Unix) file. </p><h2 id="新建线程组"><a href="#新建线程组" class="headerlink" title="新建线程组"></a><font size="3px">新建线程组</font></h2><p>主要配置，线程数和每个线程的请求次数</p><p><img src="/2019/11/30/redis-rabbitmq-jmeter模拟实现秒杀系统/jmeter.png" alt></p><h2 id="配置请求的路径"><a href="#配置请求的路径" class="headerlink" title="配置请求的路径"></a><font size="3px">配置请求的路径</font></h2><p><img src="/2019/11/30/redis-rabbitmq-jmeter模拟实现秒杀系统/request.png" alt></p><h2 id="监听结果"><a href="#监听结果" class="headerlink" title="监听结果"></a><font size="3px">监听结果</font></h2><p><img src="/2019/11/30/redis-rabbitmq-jmeter模拟实现秒杀系统/report.png" alt></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a><font size="3px">测试</font></h2><p><img src="/2019/11/30/redis-rabbitmq-jmeter模拟实现秒杀系统/result.png" alt></p><h1 id="秒杀表设计"><a href="#秒杀表设计" class="headerlink" title="秒杀表设计"></a><font size="4px">秒杀表设计</font></h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> seckill_activity(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> auto_increment <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">goods_id <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">sec_count <span class="keyword">long</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">start_time datetime,</span><br><span class="line">end_time datetime,</span><br><span class="line"><span class="keyword">status</span> <span class="built_in">int</span> <span class="keyword">COMMENT</span><span class="string">'0 未开始 1 进行中 2 已结束'</span>,</span><br><span class="line">current_price <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">2</span>),</span><br><span class="line">primary <span class="keyword">key</span>(<span class="keyword">id</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>查找未开始的活动</p><p><code>select * from seckill_activity where now() between start_time and end_time and status=0</code></p><h1 id="开启任务调度"><a href="#开启任务调度" class="headerlink" title="开启任务调度"></a><font size="4px">开启任务调度</font></h1><p>@EnableScheduling</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccepted.gmall.seckill;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.EnableRabbit;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan</span>(basePackages = <span class="string">"com.runaccepted.gmall.seckill.mapper"</span>)</span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GmallSeckillApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GmallSeckillApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@Scheduled(cron = “秒 分 时 日 月 周”)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span>  String redisKey = <span class="string">"seckill::count::"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Scheduled</span>(cron = <span class="string">"0 1 * * * ?"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;SeckillActivity&gt; <span class="title">findUnstartSeckill</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    List&lt;SeckillActivity&gt; activities= mapper.findUnstartSeckill();</span><br><span class="line">    <span class="keyword">for</span> (SeckillActivity activity:activities)&#123;</span><br><span class="line">        <span class="comment">//Long date = activity.getEndTime().getTime()-new Date().getTime();</span></span><br><span class="line">        System.out.println(activity.getId() + <span class="string">" 号商品秒杀活动已启动"</span>);</span><br><span class="line">        <span class="comment">//删除预存</span></span><br><span class="line">        redisTemplate.delete(redisKey+activity.getId());</span><br><span class="line">        <span class="comment">//库存放入redis中</span></span><br><span class="line">        Long secCount = activity.getSecCount();</span><br><span class="line">        String obj = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; secCount; i++) &#123;</span><br><span class="line">            <span class="comment">//seckill::count::id -  goodsId</span></span><br><span class="line">            redisTemplate.opsForList().rightPush(redisKey+activity.getId(),activity.getGoodsId());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//更新活动状态</span></span><br><span class="line">        activity.setStatus(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        mapper.update(activity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> activities;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="用户抢单"><a href="#用户抢单" class="headerlink" title="用户抢单"></a><font size="3px">用户抢单</font></h1><h2 id="生成orderNo"><a href="#生成orderNo" class="headerlink" title="生成orderNo"></a><font size="3px">生成orderNo</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/seckill/&#123;id&#125;/&#123;userId&#125;"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CommonResult <span class="title">processSecKill</span><span class="params">(@PathVariable  <span class="keyword">int</span> id, @PathVariable String userId)</span></span>&#123;</span><br><span class="line">    String result = activityService.seckill(id,userId);</span><br><span class="line">    CommonResult commonResult = CommonResult.ok(<span class="string">"抢到了，等待订单生成！"</span>).data(<span class="string">"orderNo"</span>,result);</span><br><span class="line">    <span class="keyword">return</span> commonResult;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">seckill</span><span class="params">(<span class="keyword">int</span> id,String userId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查找秒杀项目</span></span><br><span class="line">    SeckillActivity activity = mapper.findById(id);</span><br><span class="line">    <span class="keyword">if</span> (activity==<span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(<span class="string">"活动不存在"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (activity.getStatus()==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(<span class="string">"活动未开始"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (activity.getStatus()==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(<span class="string">"活动已结束"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">//set中是否已有该用户</span></span><br><span class="line">    Boolean member = redisTemplate.opsForSet().isMember(userRedisKey + activity.getId(), userId);</span><br><span class="line">    <span class="keyword">if</span>(member)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(<span class="string">"每位用户限购一个"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//从库存中减一个</span></span><br><span class="line">    String s = redisTemplate.opsForList().leftPop(redisKey + activity.getId());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(s!=<span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">//放入set中 seckill::users::id - userId</span></span><br><span class="line">        redisTemplate.opsForSet().add(userRedisKey + activity.getId(), userId);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SecurityException(<span class="string">"抱歉，该商品已被抢光"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String orderNo = orderService.sendOrdertoQueue(userId);</span><br><span class="line">    <span class="keyword">return</span> orderNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">RabbitTemplate rabbitTemplate;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*生成orderNo并加入消息队列</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sendOrdertoQueue</span><span class="params">(String userId)</span></span>&#123;</span><br><span class="line">    String orderNo = UUID.randomUUID().toString().replace(<span class="string">"-"</span>,<span class="string">""</span>);</span><br><span class="line">    Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">"userId"</span>,userId);</span><br><span class="line">    map.put(<span class="string">"orderNo"</span>,orderNo);</span><br><span class="line">  </span><br><span class="line">    rabbitTemplate.convertAndSend(<span class="string">"pay.exchage"</span>,<span class="string">"pay.binding"</span>,map);</span><br><span class="line"></span><br><span class="line">    log.info(<span class="string">"&#123;&#125; 创建了订单 &#123;&#125;"</span>,userId,orderNo);</span><br><span class="line">    <span class="keyword">return</span> orderNo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="采用rabbitMQ进行流量削峰"><a href="#采用rabbitMQ进行流量削峰" class="headerlink" title="采用rabbitMQ进行流量削峰"></a><font size="3px">采用rabbitMQ进行流量削峰</font></h2><p>先完成抢单，确定用户和订单号，后台慢慢完成订单的创建，而等到订单创建完成，用户才可以支付</p><p>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#消费者最多同时处理10个消息</span><br><span class="line">spring.rabbitmq.listener.simple.prefetch=10</span><br><span class="line">#消息 消费者手动确认</span><br><span class="line">spring.rabbitmq.listener.simple.acknowledge-mode=manual</span><br></pre></td></tr></table></figure><p>监听</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RabbitListener</span>(queues = <span class="string">"pay.queue"</span>)</span><br><span class="line"><span class="meta">@RabbitHandler</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getMsg</span><span class="params">(Message message,Channel channel,@Payload Map&lt;String,String&gt; map)</span></span>&#123;</span><br><span class="line">    <span class="comment">//&#123;"orderNo":"f0d2a256e9cd42278ba13ada597a87a7","userId":"user-3"&#125;'</span></span><br><span class="line">    log.info(<span class="string">"Message为 &#123;&#125;"</span>,message);</span><br><span class="line">    log.info(<span class="string">"获取到订单 &#123;&#125;"</span>,map);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//TO DO LIST</span></span><br><span class="line">    <span class="comment">//对接支付宝，物流，日志登记</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Map&lt;String,String&gt; result = map;</span><br><span class="line">    String orderNo = result.get(<span class="string">"orderNo"</span>);</span><br><span class="line">    String userId = result.get(<span class="string">"userId"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成订单</span></span><br><span class="line">    SeckillOrder order = <span class="keyword">new</span> SeckillOrder();</span><br><span class="line">    order.setOrderNo(orderNo);</span><br><span class="line">    order.setUserId(userId);</span><br><span class="line">    order.setCreateTime(<span class="keyword">new</span> Date());</span><br><span class="line">    order.setOrderStatus(<span class="number">0</span>);</span><br><span class="line">    order.setTradeNo(UUID.randomUUID().toString().replace(<span class="string">"-"</span>,<span class="string">""</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> flag = orderMapper.insertOrder(order);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(flag&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//订单创建成功，确认消息，false表示每次仅接受一个请求</span></span><br><span class="line">            channel.basicAck(message.getMessageProperties().getDeliveryTag(), <span class="keyword">false</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//订单创建失败，拒绝消息，回滚给其他消费者</span></span><br><span class="line">            channel.basicReject(message.getMessageProperties().getDeliveryTag(),<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//System.out.println(map);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找到订单后支付"><a href="#查找到订单后支付" class="headerlink" title="查找到订单后支付"></a><font size="3px">查找到订单后支付</font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> SeckillOrder <span class="title">findOrder</span><span class="params">(String orderNo)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> orderMapper.findbyOrderNo(orderNo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//控制器</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SeckillOrderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SeckillOrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/order/&#123;orderNo&#125;"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonResult <span class="title">findOrder</span><span class="params">(@PathVariable String orderNo)</span></span>&#123;</span><br><span class="line">        SeckillOrder order = orderService.findOrder(orderNo);</span><br><span class="line">        <span class="keyword">if</span>(order!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> CommonResult.ok(<span class="string">"及时付款"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> CommonResult.error(<span class="string">"继续等待"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/pay"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">pay</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ModelAndView view = <span class="keyword">new</span> ModelAndView(<span class="string">"/pay"</span>);</span><br><span class="line">        <span class="keyword">return</span> view;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="用jmeter测试抢单"><a href="#用jmeter测试抢单" class="headerlink" title="用jmeter测试抢单"></a><font size="4px">用jmeter测试抢单</font></h1><p>添加CSV Data Set Config</p><h2 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a><font size="3px">RabbitMQ</font></h2><p><img src="/2019/11/30/redis-rabbitmq-jmeter模拟实现秒杀系统/rabbit.png" alt></p><h2 id="redis"><a href="#redis" class="headerlink" title="redis"></a><font size="3px">redis</font></h2><p><img src="/2019/11/30/redis-rabbitmq-jmeter模拟实现秒杀系统/redis.png" alt></p><h2 id="订单"><a href="#订单" class="headerlink" title="订单"></a><font size="3px">订单</font></h2><p><img src="/2019/11/30/redis-rabbitmq-jmeter模拟实现秒杀系统/mq.png" alt></p><h1 id="模拟下单"><a href="#模拟下单" class="headerlink" title="模拟下单"></a><font size="4px">模拟下单</font></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"./js/jquery-3.5.0.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>秒杀开始<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"a"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $.getJSON(<span class="string">"/seckill/1/user-999"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(a)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(a.code == <span class="number">20000</span>)&#123;</span></span><br><span class="line">                    alert(a.msg)</span><br><span class="line"><span class="javascript">                    alert(<span class="string">"正在创建订单..."</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                        $.getJSON(<span class="string">"/order/"</span>+a.data.orderNo,<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span>(data.code==<span class="number">20000</span>)&#123;</span></span><br><span class="line">                                alert(data.msg)</span><br><span class="line">                                clearInterval(timer)</span><br><span class="line"><span class="javascript">                                <span class="built_in">window</span>.location.href=<span class="string">"/pay"</span>;</span></span><br><span class="line"><span class="javascript">                            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                                alert(<span class="string">"正在创建订单..."</span>)</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;, 1000)</span><br><span class="line"><span class="javascript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">                    alert(a.msg)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="防恶意下单"><a href="#防恶意下单" class="headerlink" title="防恶意下单"></a><font size="4px">防恶意下单</font></h1><p>设置拦截器，检查同一个ip的访问次数</p><p><code>&gt;30</code>停止服务 <code>&gt;100</code>加入黑名单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccepted.gmall.seckill.hander;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.runaccepted.gmall.seckill.exception.SeckillException;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.DigestUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AntiHandler</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String black = <span class="string">"anti::refresh::blacklist"</span>;</span><br><span class="line">    <span class="keyword">private</span> String ipPrefix = <span class="string">"anti::refersh::"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> stopTime = <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> blackTime = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//System.out.println("pre");</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">      </span><br><span class="line">        String clientIp = request.getRemoteAddr();</span><br><span class="line">        System.out.println(clientIp);</span><br><span class="line"></span><br><span class="line">        String user = request.getHeader(<span class="string">"User-Agent"</span>);</span><br><span class="line">        String key = clientIp+<span class="string">"_"</span>+user;</span><br><span class="line"></span><br><span class="line">        System.out.println(key);</span><br><span class="line"></span><br><span class="line">        String ip = ipPrefix+DigestUtils.md5DigestAsHex(key.getBytes());</span><br><span class="line"></span><br><span class="line">        System.out.println(ip);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> flag = redisTemplate.hasKey(black);</span><br><span class="line">        <span class="comment">//System.out.println(flag);</span></span><br><span class="line">        <span class="keyword">if</span>(flag) &#123;</span><br><span class="line">            <span class="keyword">if</span> (redisTemplate.opsForSet().isMember(black, ip)) &#123;</span><br><span class="line">                response.getWriter().print(<span class="string">"该ip已被加入黑名单"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Boolean hasKey = redisTemplate.hasKey(ip);</span><br><span class="line">        <span class="keyword">if</span>(hasKey)&#123;</span><br><span class="line">            String s = redisTemplate.opsForValue().get(ip);</span><br><span class="line">            Integer num = Integer.parseInt(s);</span><br><span class="line">            <span class="keyword">if</span> (num&lt;stopTime) &#123;</span><br><span class="line">                redisTemplate.opsForValue().increment(ip, <span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num&lt;blackTime)&#123;</span><br><span class="line"></span><br><span class="line">                response.getWriter().print(<span class="string">"访问次数过高，服务器已停止服务"</span>);</span><br><span class="line">                redisTemplate.opsForValue().increment(ip, <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                response.getWriter().print(<span class="string">"访问次数过高，该ip已被加入黑名单"</span>);</span><br><span class="line">                redisTemplate.opsForSet().add(black,ip);</span><br><span class="line">                redisTemplate.expire(black,<span class="number">1</span>,TimeUnit.DAYS);</span><br><span class="line">                log.error(<span class="string">"&#123;&#125; : &#123;&#125;"</span>,black,ip);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            redisTemplate.opsForValue().set(ip,<span class="number">1</span>+<span class="string">""</span>,<span class="number">1</span>, TimeUnit.MINUTES);</span><br><span class="line">        &#125;</span><br><span class="line">        log.error(<span class="string">"&#123;&#125; 通过"</span>,ip);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;SpringBoot项目，实现亿万级电商秒杀系统&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://www.runaccepted.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://www.runaccepted.com/tags/Java/"/>
    
      <category term="项目" scheme="https://www.runaccepted.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
      <category term="Redis" scheme="https://www.runaccepted.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Jwt+Gateway+nacos+redis实现免登录</title>
    <link href="https://www.runaccepted.com/2019/11/14/Jwt-Spring%E5%AE%9E%E7%8E%B03%E5%A4%A9%E5%85%8D%E7%99%BB%E5%BD%95/"/>
    <id>https://www.runaccepted.com/2019/11/14/Jwt-Spring实现3天免登录/</id>
    <published>2019-11-13T23:25:40.000Z</published>
    <updated>2020-04-15T05:40:04.498Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Spring Cloud Gateway作为网关在请求得到路由前进行过滤并分配请求到他指定的路由，Spring Cloud Alibana Nacos作为服务注册使得网关能够服务发现，分配路由，jwt作为token令牌解决传统的单点登录设置cookie和session登录方式，也解决了分布式情况下登录问题</blockquote><a id="more"></a><h1 id="整体实现"><a href="#整体实现" class="headerlink" title="整体实现"></a><font size="4px">整体实现</font></h1><p>虽说token无状态，减少交互数据库，但token无法主动失效，用户注销情况下，仍可以拿着token请求服务器直接登录，故集合redis，加入一个黑名单，当用户注销时，token就加入黑名单，使用户无法直接操作，只能发送重新登录请求</p><h2 id="响应设计"><a href="#响应设计" class="headerlink" title="响应设计"></a><font size="3px">响应设计</font></h2><table><thead><tr><th>token</th><th>响应状态</th></tr></thead><tbody><tr><td>无token</td><td>50000 - 无访问权限</td></tr><tr><td>有token，token格式不正确</td><td>50008 - 非法token</td></tr><tr><td>有token，用户持有的token已被加入到黑名单，即用户被注销</td><td>50010 - 用户已登出</td></tr><tr><td>有token，用户正在使用的token和服务端保存的用户正在使用的不一致</td><td>50010 - 用户已登出</td></tr><tr><td>有token，用户在线时间超时</td><td>50014 - token失效</td></tr></tbody></table><h2 id="redis设计"><a href="#redis设计" class="headerlink" title="redis设计"></a><font size="3px">redis设计</font></h2><ul><li><p>JWT_USERNAME::id </p><p>字符串类型 存入 用户名</p><p>用于保证单端登录</p><p>有效时间为用户免登录时间</p></li><li><p>JWT_TOKEN</p><p>Hash类型 存入  id-token</p><p>用于记录当前用户【正在使用】的token</p></li><li><p>JWT_BLACKLIST::group</p><p>字符串类型 存入 token</p><p>group来自token的载荷中UUID生成的group，用于唯一的对应该token</p><p>用于注销，重新登录，刷新操作导致用户被注销，token未失效时，使token自动失效</p><p>判断token时，当黑名单中拥有该token，则返回用户被注销</p></li></ul><h2 id="登录操作中redis操作"><a href="#登录操作中redis操作" class="headerlink" title="登录操作中redis操作"></a><font size="3px">登录操作中redis操作</font></h2><div class="tabs" id="选项卡"><ul class="nav-tabs"><li class="tab"><a href="#选项卡-1">登录-login</a></li><li class="tab active"><a href="#选项卡-2">登出-logout</a></li><li class="tab"><a href="#选项卡-3">刷新-refresh</a></li><li class="tab"><a href="#选项卡-4">重新登录-relogin</a></li><li class="tab"><a href="#选项卡-5">获取用户信息-getInfo</a></li></ul><div class="tab-content"><div class="tab-pane" id="选项卡-1"><p>验证账号密码后，验证 【get  JWT_USERNAME::id】是否有值，有值则不能登录</p><p>无值，用户名存入【set  JWT_USERNAME::id username EX time】，防止其他端登录</p><p>生成token，存入【hset JWT_TOKEN id token】，保存正在使用的token</p><p>返回token给客户端</p></div><div class="tab-pane active" id="选项卡-2"><p>删除用户名【del JWT_USERNAME::id】</p><p>删除用户当前使用的token 【hdel JWT_TOKEN id】</p><p>将token加入黑名单【set JWT_BLACKLIST::group token EX time】</p></div><div class="tab-pane" id="选项卡-3"><p>当用户注销，token过期情况下，token可以进行刷新，重新获得免登录权限</p><p>将token加入黑名单 【set JWT_BLACKLIST::group token EX time】</p><p>重新生成token</p><p>更新用户当前使用的token 【hset JWT_TOKEN id token】</p><p>更新用户名的有效时间【expire JWT_USERNAME::id time】</p><p>返回token</p></div><div class="tab-pane" id="选项卡-4"><p>当用户篡改token，导致token和redis中用户使用的token不一致，但用户名依旧有效情况下，用户无法登录，无法注销，进行重新登录</p><p>验证账号密码</p><p>删除用户名【del JWT_USERNAME::id】</p><p>删除用户当前使用的token 【hdel JWT_TOKEN id】</p><p>将token加入黑名单【set JWT_BLACKLIST::group token EX time】</p><p>用户名存入【set  JWT_USERNAME::id username EX time】，防止其他端登录</p><p>生成token，存入【hset JWT_TOKEN id token】，保存正在使用的token</p></div><div class="tab-pane" id="选项卡-5"><p>获取token中的用户信息，不交互redis</p></div></div></div><h2 id="网关过滤登录路由"><a href="#网关过滤登录路由" class="headerlink" title="网关过滤登录路由"></a><font size="3px">网关过滤登录路由</font></h2><table><thead><tr><th>网关过滤</th><th>路由</th></tr></thead><tbody><tr><td>直接放行</td><td>/jwt-client/login</td></tr><tr><td>无token</td><td></td></tr><tr><td>有token，token格式不正确</td><td></td></tr><tr><td>else</td><td>/jwt-client/relogin，/jwt-client/refresh</td></tr><tr><td>有token，用户持有的token已被加入到黑名单，即用户被注销</td><td></td></tr><tr><td>有token，用户正在使用的token和服务端保存的用户正在使用的不一致</td><td></td></tr><tr><td>有token，用户在线时间超时</td><td></td></tr><tr><td>else</td><td>/jwt-client/logout</td></tr><tr><td>else</td><td>/jwt-client/getInfo</td></tr></tbody></table><h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a><font size="4px">项目</font></h1><h2 id="jwt-api-公共接口类"><a href="#jwt-api-公共接口类" class="headerlink" title="jwt-api 公共接口类"></a><font size="3px">jwt-api 公共接口类</font></h2><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a><font size="3px">Maven</font></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 简化实体类 get/set方法--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--swagger 用于生成、描述、调用和可视化 RESTful 风格的 Web 服务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="定义实体类，统一返回类型"><a href="#定义实体类，统一返回类型" class="headerlink" title="定义实体类，统一返回类型"></a><font size="3px">定义实体类，统一返回类型</font></h3><h4 id="Admin"><a href="#Admin" class="headerlink" title="Admin"></a><font size="3px">Admin</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Admin</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equal</span><span class="params">(String name,String pwd)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (username.equals(name)&amp;&amp;password.equals(pwd))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="R"><a href="#R" class="headerlink" title="R"></a><font size="3px">R</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModel;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel</span>(value = <span class="string">"全局统一返回结果"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">R</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"是否成功"</span>)</span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回码"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回消息"</span>)</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"返回数据"</span>)</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; data = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> R <span class="title">ok</span><span class="params">()</span></span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">        r.setCode(<span class="number">20000</span>);</span><br><span class="line">        r.setMessage(<span class="string">"操作成功"</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> R <span class="title">error</span><span class="params">()</span></span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.setSuccess(<span class="keyword">false</span>);</span><br><span class="line">        r.setCode(<span class="number">20001</span>);</span><br><span class="line">        r.setMessage(<span class="string">"操作失败"</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//链式编程</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">success</span><span class="params">(Boolean success)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setSuccess(success);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">message</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setMessage(message);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">code</span><span class="params">(Integer code)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setCode(code);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">data</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(map);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">data</span><span class="params">(String key,Object value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data.put(key,value);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="JwtClient"><a href="#JwtClient" class="headerlink" title="JwtClient"></a><font size="3px">JwtClient</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtConstant</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String tokenHeader = <span class="string">"Authorization"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLAIM_KEY_USERID = <span class="string">"id"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLAIM_KEY_USERNAME = <span class="string">"username"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLAIM_KEY_CREATED = <span class="string">"created"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLAIM_KEY_HOLDTIME = <span class="string">"holdtime"</span>;</span><br><span class="line">    <span class="comment">//用于区分token，充当存入redis中的key</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String CLAIM_KEY_GROUP = <span class="string">"group"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="jwt-Gateway-web项目"><a href="#jwt-Gateway-web项目" class="headerlink" title="jwt-Gateway web项目"></a><font size="3px">jwt-Gateway web项目</font></h2><h3 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a><font size="3px">Maven依赖</font></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.runaccepted.jwt<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jwt-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 文件配置--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- JWT --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="跨域设置-定义CorsWebFilter的Bean"><a href="#跨域设置-定义CorsWebFilter的Bean" class="headerlink" title="跨域设置-定义CorsWebFilter的Bean"></a><font size="3px">跨域设置-定义CorsWebFilter的Bean</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.reactive.CorsWebFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayCorsConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//跨域</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorsWebFilter <span class="title">corsWebFilter</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        UrlBasedCorsConfigurationSource source = <span class="keyword">new</span> UrlBasedCorsConfigurationSource();</span><br><span class="line"></span><br><span class="line">        CorsConfiguration configuration = <span class="keyword">new</span> CorsConfiguration();</span><br><span class="line"></span><br><span class="line">        configuration.addAllowedHeader(<span class="string">"*"</span>);</span><br><span class="line">        configuration.addAllowedMethod(<span class="string">"*"</span>);</span><br><span class="line">        configuration.addAllowedOrigin(<span class="string">"*"</span>);</span><br><span class="line">        configuration.setAllowCredentials(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        source.registerCorsConfiguration(<span class="string">"/**"</span>,configuration);</span><br><span class="line"></span><br><span class="line">        CorsWebFilter filter = <span class="keyword">new</span> CorsWebFilter(source);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> filter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="nacos服务注册-application-yml"><a href="#nacos服务注册-application-yml" class="headerlink" title="nacos服务注册 -application.yml"></a><font size="3px">nacos服务注册 -application.yml</font></h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">9500</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">jwt-gateway</span></span><br><span class="line"></span><br><span class="line"><span class="attr">  cloud:</span></span><br><span class="line"><span class="attr">    nacos:</span></span><br><span class="line"><span class="attr">      discovery:</span></span><br><span class="line"><span class="attr">        server-addr:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.100</span><span class="string">:8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    gateway:</span></span><br><span class="line"><span class="attr">      routes:</span></span><br><span class="line"><span class="attr">        - id:</span> <span class="string">jwt-route</span></span><br><span class="line"><span class="attr">          uri:</span> <span class="attr">lb://jwt-client</span></span><br><span class="line"><span class="attr">          predicates:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">Path=/jwt-client/**</span></span><br></pre></td></tr></table></figure><h3 id="jwt配置-application-properties"><a href="#jwt配置-application-properties" class="headerlink" title="jwt配置-application.properties"></a><font size="3px">jwt配置-application.properties</font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#过滤路由</span><br><span class="line">auth.skip.uris=/jwt-client/login</span><br><span class="line">#判断token请求格式的路由</span><br><span class="line">auth.skip.checktoken=/jwt-client/token/refresh,/jwt-client/relogin</span><br><span class="line"></span><br><span class="line">#jwt设置</span><br><span class="line">jwt.secret.key=online-runaccepted</span><br><span class="line">jwt.subject.name=edu-admin</span><br><span class="line">#jwt有效期 2分钟</span><br><span class="line">jwt.expire.time=120000</span><br><span class="line">#免登录截止时间 天/小时/分钟/秒/微妙</span><br><span class="line">#Calendar.DATE=5 HOUR=10 MINUTE=12 SECOND=13 MILLISECOND=14</span><br><span class="line">jwt.hold.type=12</span><br><span class="line">jwt.hold.time=10</span><br><span class="line">#令牌黑名单，用于用户注销/登出/修改账号密码时</span><br><span class="line">jwt.blacklist.format=JWT_BLACKLIST::%s</span><br><span class="line">#令牌名单，当前活跃的jwt令牌</span><br><span class="line">jwt.token.format=JWT_TOKEN</span><br><span class="line"></span><br><span class="line">#redis</span><br><span class="line">spring.redis.host=192.168.0.100</span><br><span class="line">spring.redis.port=6379</span><br></pre></td></tr></table></figure><h3 id="🌟🌟JwtUtils工具类"><a href="#🌟🌟JwtUtils工具类" class="headerlink" title="🌟🌟JwtUtils工具类"></a><font size="3px">🌟🌟JwtUtils工具类</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccepted.jwt.gateway.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.constant.JwtConstant;</span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.entity.Admin;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.*;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JwtToken生成的工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * JWT token的格式：header.payload.signature</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * header的格式（算法、token的类型）：</span></span><br><span class="line"><span class="comment"> * &#123;"alg": "HS512","typ": "JWT"&#125;</span></span><br><span class="line"><span class="comment"> * payload的格式（用户名、创建时间、生成时间）：</span></span><br><span class="line"><span class="comment"> *      &#123;"id":1,"sub":"wang","created":1489079981393,"exp":1489684781&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.subject.name&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String SUBJECT;</span><br><span class="line"></span><br><span class="line"><span class="comment">//秘钥</span></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.secret.key&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String APPSECRET;</span><br><span class="line"></span><br><span class="line"><span class="comment">//过期时间，毫秒，30分钟</span></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.expire.time&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">long</span> EXPIRE;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.hold.time&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> holdTime;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.hold.type&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> holdType;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户信息生成token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">generateToken</span><span class="params">(Admin admin)</span> </span>&#123;</span><br><span class="line">Map&lt;String, Object&gt; claims = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_USERID, admin.getId());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_USERNAME, admin.getUsername());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_CREATED, <span class="keyword">new</span> Date());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_HOLDTIME,generateLoginDate());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_GROUP,generateGroup());</span><br><span class="line"><span class="keyword">return</span> generateToken(claims);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据负责生成JWT的token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">generateToken</span><span class="params">(Map&lt;String, Object&gt; claims)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> Jwts.builder()</span><br><span class="line">.setSubject(SUBJECT)</span><br><span class="line">.setClaims(claims)</span><br><span class="line">.setExpiration(generateExpirationDate())</span><br><span class="line">.signWith(SignatureAlgorithm.HS512, APPSECRET)</span><br><span class="line">.compact();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取JWT中的负载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Claims <span class="title">getClaimsFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">claims = Jwts.parser()</span><br><span class="line">.setSigningKey(APPSECRET)</span><br><span class="line">.parseClaimsJws(token)</span><br><span class="line">.getBody();</span><br><span class="line">&#125;<span class="keyword">catch</span> (ExpiredJwtException e) &#123;</span><br><span class="line">String id = (String) e.getClaims().get(JwtConstant.CLAIM_KEY_USERID);</span><br><span class="line">String username = (String) e.getClaims().get(JwtConstant.CLAIM_KEY_USERNAME);</span><br><span class="line">log.error(<span class="string">"JWT载荷中 用户ID:&#123;&#125; 用户名:&#123;&#125;"</span>, id, username);</span><br><span class="line"></span><br><span class="line">claims=e.getClaims();</span><br><span class="line">&#125; <span class="keyword">catch</span> (MalformedJwtException e)&#123;</span><br><span class="line">log.error(<span class="string">"Json格式错误 &#123;&#125;"</span>,e.getLocalizedMessage());</span><br><span class="line">&#125; <span class="keyword">catch</span> (SignatureException e)&#123;</span><br><span class="line">log.error(<span class="string">"Json格式错误 &#123;&#125;"</span>,e.getLocalizedMessage());</span><br><span class="line">&#125; <span class="keyword">catch</span>(IllegalArgumentException e)&#123;</span><br><span class="line">log.error(<span class="string">"错误 &#123;&#125;"</span>,e.getLocalizedMessage());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> claims;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成token的过期时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">generateExpirationDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Date(System.currentTimeMillis() + EXPIRE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成token的免登录时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">generateLoginDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有效期内可刷新token</span></span><br><span class="line">Calendar calendar = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line"><span class="comment">//当天+2</span></span><br><span class="line">calendar.add(holdType,holdTime);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> calendar.getTime();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成token的group</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">generateGroup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">String group = UUID.randomUUID().toString();</span><br><span class="line">group = group.replace(<span class="string">"."</span>,<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> group;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取登录用户名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUserNameFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">String username = (String) claims.get(JwtConstant.CLAIM_KEY_USERNAME);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取过期时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getExpiredDateFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">Date expiredDate = claims.getExpiration();</span><br><span class="line">log.error(<span class="string">"token中过期时间 &#123;&#125;"</span>, <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(expiredDate));</span><br><span class="line"><span class="keyword">return</span> expiredDate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取group</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getGroupFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">String group = (String)claims.get(JwtConstant.CLAIM_KEY_GROUP);</span><br><span class="line">log.error(<span class="string">"token中的用户组 &#123;&#125;"</span>, group);</span><br><span class="line"><span class="keyword">return</span> group;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取登录用户名id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUserIdFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">String id = (String) claims.get(JwtConstant.CLAIM_KEY_USERID);</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取登录截止时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getHoldTime</span><span class="params">(String token)</span></span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line"><span class="keyword">long</span> dateTime = (<span class="keyword">long</span>)claims.get(JwtConstant.CLAIM_KEY_HOLDTIME);</span><br><span class="line">Date date = <span class="keyword">new</span> Date(dateTime);</span><br><span class="line">log.info(<span class="string">"原数据值：&#123;&#125; 该token免登录时间截止至 &#123;&#125;"</span>,dateTime,</span><br><span class="line"><span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(date));</span><br><span class="line"><span class="keyword">return</span> date;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证token是否还有效</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> token       客户端传入的token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> admin 从数据库中查询出来的用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validateToken</span><span class="params">(String token, Admin admin)</span> </span>&#123;</span><br><span class="line">String username = getUserNameFromToken(token);</span><br><span class="line"><span class="keyword">return</span> username.equals(admin.getUsername()) &amp;&amp; !isTokenExpired(token);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断token是否已经失效</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTokenExpired</span><span class="params">(Date expiredDate)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> before = <span class="keyword">new</span> Date().before(expiredDate);</span><br><span class="line"><span class="keyword">return</span> before;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断token是否已经失效</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTokenExpired</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Date expiredDate = getExpiredDateFromToken(token);</span><br><span class="line"><span class="keyword">boolean</span> before = <span class="keyword">new</span> Date().before(expiredDate);</span><br><span class="line"><span class="keyword">return</span> before;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 免登录截止时间判断</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isHoldTime</span><span class="params">(String token)</span></span>&#123;</span><br><span class="line">Date date = getHoldTime(token);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Date().before(date);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断token是否可以被刷新</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canRefresh</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> !isTokenExpired(token);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 刷新token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">refreshToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_CREATED, <span class="keyword">new</span> Date());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_GROUP,generateGroup());</span><br><span class="line"><span class="comment">//网关仅更新token有效期，不更新免登录时间</span></span><br><span class="line"><span class="comment">//claims.put(JwtConstant.CLAIM_KEY_HOLDTIME,generateLoginDate());</span></span><br><span class="line"><span class="keyword">return</span> generateToken(claims);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="🌟AuthFilter-implements-GlobalFilter-Ordered"><a href="#🌟AuthFilter-implements-GlobalFilter-Ordered" class="headerlink" title="🌟AuthFilter implements GlobalFilter, Ordered"></a><font size="3px">🌟AuthFilter implements GlobalFilter, Ordered</font></h3><p>主要是 <code>Mono&lt;Void&gt; filter(ServerWebExchange exchange, GatewayFilterChain chain)</code></p><p>其中可以解析出路由过来的请求头信息，并按条件过滤请求，还可以自定义返回结果</p><p>为了在免登录期间请求资源问题：token是在2分钟后就失效的，在线失效时间是10分钟，在判断token仅为token过期情况下，向路由传token时，就传刷新token有效时间后的token，不刷新免登录时间，从而保证载荷内容的一致性，也不用2分钟就更新传输过来的token值，当该token的登录时间到期才算真正的token过期</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.constant.JwtConstant;</span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.to.R;</span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.gateway.utils.JwtUtils;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.filter.GatewayFilterChain;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.gateway.filter.GlobalFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.buffer.DataBuffer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.server.reactive.ServerHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.server.ServerWebExchange;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Flux;</span><br><span class="line"><span class="keyword">import</span> reactor.core.publisher.Mono;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix = <span class="string">"auth.skip"</span>)</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthFilter</span> <span class="keyword">implements</span> <span class="title">GlobalFilter</span>, <span class="title">Ordered</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; uris;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; checktoken;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jwt.blacklist.format&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jwtBlacklist;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jwt.token.format&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jwtToken;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JwtUtils jwtUtils;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Mono&lt;Void&gt; <span class="title">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ServerHttpRequest request = exchange.getRequest();</span><br><span class="line">        ServerHttpResponse response = exchange.getResponse();</span><br><span class="line">        response.getHeaders().add(<span class="string">"Content-Type"</span>,<span class="string">"application/json; charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        String path = request.getURI().getPath();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果访问路径在定义过滤路径之中，直接放行</span></span><br><span class="line">        <span class="keyword">boolean</span> containUri=<span class="keyword">this</span>.uris.contains(path);</span><br><span class="line">        <span class="keyword">if</span> (containUri)&#123;</span><br><span class="line">            <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">        &#125;</span><br><span class="line">        log.error(<span class="string">"放行路径&#123;&#125;,当前路径 &#123;&#125;，是否放行 &#123;&#125;"</span>,Arrays.asList(uris),path,containUri);</span><br><span class="line"></span><br><span class="line">        String token = <span class="string">""</span>;</span><br><span class="line">        <span class="comment">//得到请求头中Authorization的token值</span></span><br><span class="line">        List&lt;String&gt; tokenHead = request.getHeaders().get(JwtConstant.tokenHeader);</span><br><span class="line">        <span class="keyword">if</span> (tokenHead!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            token=tokenHead.get(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//验证token</span></span><br><span class="line">        <span class="comment">//没有token，没有权限</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(token))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//50000: no token</span></span><br><span class="line">            DataBuffer dataBuffer = createResponseBody(<span class="number">50000</span>,<span class="string">"无访问权限"</span>,response);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> response.writeWith(Flux.just(dataBuffer));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//有token，token不合法</span></span><br><span class="line">        Claims claim = jwtUtils.getClaimsFromToken(token);</span><br><span class="line">        <span class="keyword">if</span>(claim==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//50008: Illegal token</span></span><br><span class="line">            DataBuffer dataBuffer = createResponseBody(<span class="number">50008</span>,<span class="string">"非法token"</span>,response);</span><br><span class="line">            <span class="keyword">return</span> response.writeWith(Flux.just(dataBuffer));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String username = jwtUtils.getUserNameFromToken(token);</span><br><span class="line">        String id = jwtUtils.getUserIdFromToken(token);</span><br><span class="line">        String group = jwtUtils.getGroupFromToken(token);</span><br><span class="line">        <span class="comment">//没有有效载荷，token定义为非法</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(username)</span><br><span class="line">                ||StringUtils.isEmpty(id)</span><br><span class="line">                ||StringUtils.isEmpty(group))&#123;</span><br><span class="line">            DataBuffer dataBuffer = createResponseBody(<span class="number">50008</span>,<span class="string">"非法token"</span>,response);</span><br><span class="line">            <span class="keyword">return</span> response.writeWith(Flux.just(dataBuffer));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//token可用性判断后 才可以刷新和重新登录</span></span><br><span class="line">        <span class="keyword">boolean</span> checkUri = <span class="keyword">this</span>.checktoken.contains(path);</span><br><span class="line">        <span class="keyword">if</span> (checkUri)&#123;</span><br><span class="line">            <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">        &#125;</span><br><span class="line">        log.error(<span class="string">"验证token后放行路径&#123;&#125;,当前路径 &#123;&#125;，是否放行 &#123;&#125;"</span>,Arrays.asList(checktoken),path,checkUri);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//有token，但已被加入黑名单,只能选择再登录</span></span><br><span class="line">        String key = String.format(jwtBlacklist,group);</span><br><span class="line">        String blackToken=redisTemplate.opsForValue().get(key);</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(blackToken))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//50010: Token out;</span></span><br><span class="line">            DataBuffer dataBuffer = createResponseBody(<span class="number">50010</span>,username+<span class="string">" 已登出"</span>,response);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> response.writeWith(Flux.just(dataBuffer));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// redis中id对应的token不存在</span></span><br><span class="line">        <span class="comment">// 或者请求中的token和redis中活跃的token不匹配，只能选择再登录</span></span><br><span class="line">        String redisToken = (String)redisTemplate.opsForHash().get(jwtToken,id);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(redisToken)||!redisToken.equals(token))&#123;</span><br><span class="line">            <span class="comment">//50010: Token out;</span></span><br><span class="line">            DataBuffer dataBuffer = createResponseBody(<span class="number">50010</span>,username+<span class="string">" 已登出"</span>,response);</span><br><span class="line">            <span class="keyword">return</span> response.writeWith(Flux.just(dataBuffer));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//有身份，过免登录时间</span></span><br><span class="line">        <span class="keyword">if</span>(!jwtUtils.isHoldTime(token))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//50014: Token expired;</span></span><br><span class="line">            DataBuffer dataBuffer = createResponseBody(<span class="number">50014</span>,<span class="string">"token过期"</span>,response);</span><br><span class="line">            <span class="keyword">return</span> response.writeWith(Flux.just(dataBuffer));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//token有效期内，可以进行登出</span></span><br><span class="line">        <span class="keyword">boolean</span> expiredTimeUri = path.equals(<span class="string">"/jwt-client/logout"</span>);</span><br><span class="line">        <span class="keyword">if</span> (expiredTimeUri)&#123;</span><br><span class="line">            <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">        &#125;</span><br><span class="line">        log.error(<span class="string">"当前路径 &#123;&#125;，是否放行 &#123;&#125;"</span>,path,expiredTimeUri);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//token 失效</span></span><br><span class="line">        <span class="keyword">if</span>(jwtUtils.canRefresh(token))&#123;</span><br><span class="line"></span><br><span class="line">            String refreshToken =  jwtUtils.refreshToken(token);</span><br><span class="line">            <span class="comment">//更新请求头</span></span><br><span class="line">            ServerHttpRequest httpRequest = request.mutate().header(JwtConstant.tokenHeader, refreshToken).build();</span><br><span class="line">            ServerWebExchange webExchange = exchange.mutate().request(httpRequest).build();</span><br><span class="line">            <span class="keyword">return</span> chain.filter(webExchange);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> DataBuffer <span class="title">createResponseBody</span><span class="params">(<span class="keyword">int</span> code,String message,ServerHttpResponse response)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        R result = R.error().code(code).message(message);</span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String str=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            str=objectMapper.writeValueAsString(result);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (JsonProcessingException e) &#123;</span><br><span class="line">           log.error(<span class="string">"json转换错误 &#123;&#125;"</span>,e.getLocalizedMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        DataBuffer dataBuffer = response.bufferFactory().wrap(str.getBytes());</span><br><span class="line">        <span class="keyword">return</span> dataBuffer;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="jwt-Client-web项目"><a href="#jwt-Client-web项目" class="headerlink" title="jwt-Client -web项目"></a><font size="3px">jwt-Client -web项目</font></h2><h3 id="Maven依赖-1"><a href="#Maven依赖-1" class="headerlink" title=" Maven依赖"></a><font size="3px"> Maven依赖</font></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.runaccepted.jwt<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jwt-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- redis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JWT --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="jwt配置"><a href="#jwt配置" class="headerlink" title="jwt配置"></a><font size="3px">jwt配置</font></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">server.port=9000</span><br><span class="line">spring.application.name=jwt-client</span><br><span class="line"></span><br><span class="line">#nacos</span><br><span class="line">spring.cloud.nacos.discovery.server-addr=192.168.0.100:8848</span><br><span class="line"></span><br><span class="line">#jwt设置</span><br><span class="line">jwt.secret.key=online-runaccepted</span><br><span class="line">jwt.subject.name=edu-admin</span><br><span class="line">#jwt有效期 2分钟</span><br><span class="line">jwt.expire.time=120000</span><br><span class="line">#免登录截止时间 天/小时/分钟/秒/微妙</span><br><span class="line">#Calendar.DATE=5 HOUR=10 MINUTE=12 SECOND=13 MILLISECOND=14</span><br><span class="line">jwt.hold.type=12</span><br><span class="line">jwt.hold.time=10</span><br><span class="line">#存入redis中的key</span><br><span class="line">#单端登录限制</span><br><span class="line">jwt.username.format=JWT_USERNAME::%s</span><br><span class="line">#令牌黑名单，用于用户注销/登出/修改账号密码时</span><br><span class="line">jwt.blacklist.format=JWT_BLACKLIST::%s</span><br><span class="line">#令牌名单，当前活跃的jwt令牌</span><br><span class="line">jwt.token.format=JWT_TOKEN</span><br><span class="line"></span><br><span class="line">#id,用户名 密码 - 从数据库中取得</span><br><span class="line">login.id=1249426830067269633</span><br><span class="line">login.username=admin</span><br><span class="line">login.password=123456</span><br><span class="line"></span><br><span class="line">#redis</span><br><span class="line">spring.redis.host=192.168.0.100</span><br><span class="line">spring.redis.port=6379</span><br></pre></td></tr></table></figure><h3 id="🌟🌟JwtUtils工具类-1"><a href="#🌟🌟JwtUtils工具类-1" class="headerlink" title="🌟🌟JwtUtils工具类"></a><font size="3px">🌟🌟JwtUtils工具类</font></h3><p>和网关中的唯一不同就是刷新时同时刷新在线时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccepted.jwt.client.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.constant.JwtConstant;</span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.entity.Admin;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.*;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JwtToken生成的工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * JWT token的格式：header.payload.signature</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * header的格式（算法、token的类型）：</span></span><br><span class="line"><span class="comment"> * &#123;"alg": "HS512","typ": "JWT"&#125;</span></span><br><span class="line"><span class="comment"> * payload的格式（用户名、创建时间、生成时间）：</span></span><br><span class="line"><span class="comment"> *      &#123;"id":1,"sub":"wang","created":1489079981393,"exp":1489684781&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.subject.name&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String SUBJECT;</span><br><span class="line"></span><br><span class="line"><span class="comment">//秘钥</span></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.secret.key&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String APPSECRET;</span><br><span class="line"></span><br><span class="line"><span class="comment">//过期时间，毫秒，30分钟</span></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.expire.time&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">long</span> EXPIRE;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.hold.time&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> holdTime;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;jwt.hold.type&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> holdType;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户信息生成token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">generateToken</span><span class="params">(Admin admin)</span> </span>&#123;</span><br><span class="line">Map&lt;String, Object&gt; claims = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_USERID, admin.getId());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_USERNAME, admin.getUsername());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_CREATED, <span class="keyword">new</span> Date());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_HOLDTIME,generateLoginDate());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_GROUP,generateGroup());</span><br><span class="line"><span class="keyword">return</span> generateToken(claims);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据负责生成JWT的token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">generateToken</span><span class="params">(Map&lt;String, Object&gt; claims)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> Jwts.builder()</span><br><span class="line">.setSubject(SUBJECT)</span><br><span class="line">.setClaims(claims)</span><br><span class="line">.setExpiration(generateExpirationDate())</span><br><span class="line">.signWith(SignatureAlgorithm.HS512, APPSECRET)</span><br><span class="line">.compact();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取JWT中的负载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Claims <span class="title">getClaimsFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">claims = Jwts.parser()</span><br><span class="line">.setSigningKey(APPSECRET)</span><br><span class="line">.parseClaimsJws(token)</span><br><span class="line">.getBody();</span><br><span class="line">&#125;<span class="keyword">catch</span> (ExpiredJwtException e) &#123;</span><br><span class="line">String id = (String) e.getClaims().get(JwtConstant.CLAIM_KEY_USERID);</span><br><span class="line">String username = (String) e.getClaims().get(JwtConstant.CLAIM_KEY_USERNAME);</span><br><span class="line">String group = (String)e.getClaims().get(JwtConstant.CLAIM_KEY_GROUP);</span><br><span class="line">log.error(<span class="string">"JWT载荷中 用户ID:&#123;&#125; 用户名:&#123;&#125; 所处组:&#123;&#125;"</span>, id, username,group);</span><br><span class="line"></span><br><span class="line">claims=e.getClaims();</span><br><span class="line">&#125; <span class="keyword">catch</span> (MalformedJwtException e)&#123;</span><br><span class="line">log.error(<span class="string">"Json格式错误 &#123;&#125;"</span>,e.getLocalizedMessage());</span><br><span class="line">&#125; <span class="keyword">catch</span> (SignatureException e)&#123;</span><br><span class="line">log.error(<span class="string">"Json格式错误 &#123;&#125;"</span>,e.getLocalizedMessage());</span><br><span class="line">&#125; <span class="keyword">catch</span>(IllegalArgumentException e)&#123;</span><br><span class="line">log.error(<span class="string">"错误 &#123;&#125;"</span>,e.getLocalizedMessage());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> claims;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成token的过期时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">generateExpirationDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Date(System.currentTimeMillis() + EXPIRE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成token的免登录时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">generateLoginDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有效期内可刷新token</span></span><br><span class="line">Calendar calendar = <span class="keyword">new</span> GregorianCalendar();</span><br><span class="line"><span class="comment">//当天+2</span></span><br><span class="line">calendar.add(holdType,holdTime);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> calendar.getTime();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成token的group</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">generateGroup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">String group = UUID.randomUUID().toString();</span><br><span class="line">group = group.replace(<span class="string">"-"</span>,<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> group;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取登录用户名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUserNameFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">String username = (String) claims.get(JwtConstant.CLAIM_KEY_USERNAME);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取过期时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getExpiredDateFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">Date expiredDate = claims.getExpiration();</span><br><span class="line">log.error(<span class="string">"token中过期时间 &#123;&#125;"</span>, <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(expiredDate));</span><br><span class="line"><span class="keyword">return</span> expiredDate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取group</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getGroupFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">String group = (String)claims.get(JwtConstant.CLAIM_KEY_GROUP);</span><br><span class="line">log.error(<span class="string">"token中的用户组 &#123;&#125;"</span>, group);</span><br><span class="line"><span class="keyword">return</span> group;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取登录用户名id</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUserIdFromToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">String id = (String) claims.get(JwtConstant.CLAIM_KEY_USERID);</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取登录截止时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Date <span class="title">getHoldTime</span><span class="params">(String token)</span></span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line"><span class="keyword">long</span> dateTime = (<span class="keyword">long</span>)claims.get(JwtConstant.CLAIM_KEY_HOLDTIME);</span><br><span class="line">Date date = <span class="keyword">new</span> Date(dateTime);</span><br><span class="line">log.info(<span class="string">"原数据值：&#123;&#125; 该token免登录时间截止至 &#123;&#125;"</span>,dateTime,</span><br><span class="line"><span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(date));</span><br><span class="line"><span class="keyword">return</span> date;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从token中获取登录截止时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getLoginDate</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Date date=getHoldTime(token);</span><br><span class="line"><span class="keyword">return</span> date.getTime();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证token是否还有效</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> token       客户端传入的token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> admin 从数据库中查询出来的用户信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validateToken</span><span class="params">(String token, Admin admin)</span> </span>&#123;</span><br><span class="line">String username = getUserNameFromToken(token);</span><br><span class="line"><span class="keyword">return</span> username.equals(admin.getUsername()) &amp;&amp; !isTokenExpired(token);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断token是否已经失效</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTokenExpired</span><span class="params">(Date expiredDate)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> before = <span class="keyword">new</span> Date().before(expiredDate);</span><br><span class="line"><span class="keyword">return</span> before;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断token是否已经失效</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTokenExpired</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Date expiredDate = getExpiredDateFromToken(token);</span><br><span class="line"><span class="keyword">boolean</span> before = <span class="keyword">new</span> Date().before(expiredDate);</span><br><span class="line"><span class="keyword">return</span> before;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 免登录截止时间判断</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isHoldTime</span><span class="params">(String token)</span></span>&#123;</span><br><span class="line">Date date = getHoldTime(token);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Date().before(date);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断token是否可以被刷新</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canRefresh</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> !isTokenExpired(token);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 刷新token</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">refreshToken</span><span class="params">(String token)</span> </span>&#123;</span><br><span class="line">Claims claims = getClaimsFromToken(token);</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_CREATED, <span class="keyword">new</span> Date());</span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_HOLDTIME,generateLoginDate());</span><br><span class="line"><span class="comment">//新的group key 区分黑名单中的key</span></span><br><span class="line">claims.put(JwtConstant.CLAIM_KEY_GROUP,generateGroup());</span><br><span class="line"><span class="keyword">return</span> generateToken(claims);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="🌟ClientController"><a href="#🌟ClientController" class="headerlink" title="🌟ClientController"></a><font size="3px">🌟ClientController</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.runaccepted.jwt.client.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.constant.JwtConstant;</span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.entity.Admin;</span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.api.to.R;</span><br><span class="line"><span class="keyword">import</span> com.runaccepted.jwt.client.utils.JwtUtils;</span><br><span class="line"><span class="keyword">import</span> io.jsonwebtoken.Claims;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/jwt-client"</span>)</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JwtUtils jwtUtils;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;login.id&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;login.username&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;login.password&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jwt.username.format&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jwtUsername;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jwt.blacklist.format&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jwtBlacklist;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jwt.token.format&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jwtToken;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"登录"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/login"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">login</span><span class="params">(@RequestBody Admin admin)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!admin.equal(username,password)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> R.error().message(<span class="string">"账号或密码错误"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">            admin.setId(id);</span><br><span class="line">            String key = String.format(jwtUsername,admin.getId());</span><br><span class="line">            log.error(<span class="string">"redis key: &#123;&#125;"</span>,key);</span><br><span class="line">            <span class="comment">//判断redis中是否存在该用户名</span></span><br><span class="line">            String name = (String) redisTemplate.opsForValue().get(key);</span><br><span class="line">            <span class="keyword">if</span> (!StringUtils.isEmpty(name))&#123;</span><br><span class="line">                <span class="keyword">return</span> R.error().message(name+<span class="string">" 已经登录！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//成功生成token</span></span><br><span class="line">            String token= jwtUtils.generateToken(admin);</span><br><span class="line">            <span class="comment">//用户名有效时间 - 用户免登录时间</span></span><br><span class="line">            <span class="comment">//得到jwt中的截止时间</span></span><br><span class="line">            <span class="keyword">long</span> time=jwtUtils.generateLoginDate().getTime();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> expired = time-<span class="keyword">new</span> Date().getTime();</span><br><span class="line"></span><br><span class="line">            log.error(<span class="string">"原始数据: &#123;&#125; redis &#123;&#125; 截止时间: &#123;&#125;"</span>,time,key,</span><br><span class="line">                    <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(<span class="keyword">new</span> Date(time)));</span><br><span class="line">            <span class="comment">//信息放入redis - set key value EX 10</span></span><br><span class="line">            redisTemplate.opsForValue().set(key,admin.getUsername(),expired,TimeUnit.MILLISECONDS);</span><br><span class="line">            <span class="comment">//存当前id对应正在使用的token</span></span><br><span class="line">            <span class="comment">//hset key field value</span></span><br><span class="line">            redisTemplate.opsForHash().put(jwtToken,admin.getId(),token);</span><br><span class="line">            log.error(<span class="string">"redis hashKey: &#123;&#125; field: &#123;&#125; token:&#123;&#125;"</span>,jwtToken,admin.getId(),token);</span><br><span class="line">           <span class="keyword">return</span> R.ok().data(<span class="string">"token"</span>,token);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"登录"</span>)</span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/relogin"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">relogin</span><span class="params">(@RequestBody Admin admin,HttpServletRequest request)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!admin.equal(username,password)) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> R.error().message(<span class="string">"账号或密码错误"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            admin.setId(id);</span><br><span class="line">            String token = request.getHeader(JwtConstant.tokenHeader);</span><br><span class="line">            <span class="comment">//删除用户名</span></span><br><span class="line">            String userKey = String.format(jwtUsername,admin.getId());</span><br><span class="line">            redisTemplate.delete(userKey);</span><br><span class="line">            <span class="comment">//删除用户token</span></span><br><span class="line">            redisTemplate.opsForHash().delete(jwtToken,id);</span><br><span class="line">            <span class="comment">//token放入黑名单</span></span><br><span class="line">            String group = jwtUtils.getGroupFromToken(token);</span><br><span class="line">            <span class="keyword">long</span> time= jwtUtils.generateLoginDate().getTime();</span><br><span class="line">            <span class="keyword">long</span> expired = time - <span class="keyword">new</span> Date().getTime();</span><br><span class="line">            log.error(<span class="string">"黑名单 - 原始数据: &#123;&#125; redis &#123;&#125; 截止时间: &#123;&#125;"</span>,time,userKey,</span><br><span class="line">                    <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(<span class="keyword">new</span> Date(time)));</span><br><span class="line"></span><br><span class="line">            String blackKey = String.format(jwtBlacklist,group);</span><br><span class="line">            <span class="comment">//可能token已过期</span></span><br><span class="line">            <span class="keyword">if</span>(expired&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                redisTemplate.opsForValue().set(blackKey, token, expired, TimeUnit.MILLISECONDS);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//重新生成用户名有效时间 - 用户免登录时间</span></span><br><span class="line">            admin.setId(id);</span><br><span class="line">            String newToken = jwtUtils.generateToken(admin);</span><br><span class="line">            <span class="comment">//得到jwt中的截止时间</span></span><br><span class="line">            time=jwtUtils.generateLoginDate().getTime();</span><br><span class="line">            expired = time-<span class="keyword">new</span> Date().getTime();</span><br><span class="line"></span><br><span class="line">            log.error(<span class="string">"重新登录 原始数据-: &#123;&#125; redis &#123;&#125; 截止时间: &#123;&#125;"</span>,time,userKey,</span><br><span class="line">                    <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(<span class="keyword">new</span> Date(time)));</span><br><span class="line">            <span class="comment">//信息放入redis - set key value EX 10</span></span><br><span class="line">            redisTemplate.opsForValue().set(userKey,admin.getUsername(),expired,TimeUnit.MILLISECONDS);</span><br><span class="line">            <span class="comment">//存当前id对应正在使用的token</span></span><br><span class="line">            <span class="comment">//hset key field value</span></span><br><span class="line">            redisTemplate.opsForHash().put(jwtToken,admin.getId(),newToken);</span><br><span class="line">            log.error(<span class="string">"redis hashKey: &#123;&#125; field: &#123;&#125; token:&#123;&#125;"</span>,jwtToken,admin.getId(),token);</span><br><span class="line">            <span class="keyword">return</span> R.ok().data(<span class="string">"token"</span>,newToken);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"根据jwt得到信息"</span>)</span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/getInfo"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">getInfo</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String token = request.getHeader(JwtConstant.tokenHeader);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">"请求头 &#123;&#125;"</span>,token);</span><br><span class="line"></span><br><span class="line">        String username = jwtUtils.getUserNameFromToken(token);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"username"</span>,username);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"清除token，登入"</span>)</span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/logout"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">logout</span><span class="params">(HttpServletRequest request)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        String token = request.getHeader(JwtConstant.tokenHeader);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">"logout 请求头 &#123;&#125;"</span>,token);</span><br><span class="line"></span><br><span class="line">        String id = jwtUtils.getUserIdFromToken(token);</span><br><span class="line">        <span class="comment">//删除登录的用户名</span></span><br><span class="line">        String userKey = String.format(jwtUsername,id);</span><br><span class="line">        redisTemplate.delete(userKey);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除id当前使用的token</span></span><br><span class="line">        redisTemplate.opsForHash().delete(jwtToken,id);</span><br><span class="line">        <span class="comment">//token放入黑名单</span></span><br><span class="line">        String group = jwtUtils.getGroupFromToken(token);</span><br><span class="line">        <span class="keyword">long</span> time= jwtUtils.getLoginDate(token);</span><br><span class="line">        <span class="keyword">long</span> expired = time - <span class="keyword">new</span> Date().getTime();</span><br><span class="line">        log.error(<span class="string">"logout 原始数据: &#123;&#125; redis &#123;&#125; 截止时间: &#123;&#125;"</span>,time,userKey,</span><br><span class="line">                <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>).format(<span class="keyword">new</span> Date(time)));</span><br><span class="line">        String blackKey = String.format(jwtBlacklist,group);</span><br><span class="line">        <span class="keyword">if</span> (expired&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            redisTemplate.opsForValue().set(blackKey, token, expired, TimeUnit.MILLISECONDS);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> R.ok().message(<span class="string">"注销成功"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(value = <span class="string">"刷新token"</span>)</span><br><span class="line">    <span class="meta">@GetMapping</span>(value = <span class="string">"/token/refresh"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">refreshToken</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1、获取请求头中的Authorization完整值</span></span><br><span class="line">        String oldToken = request.getHeader(JwtConstant.tokenHeader);</span><br><span class="line">        String refreshToken = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2、是否可以进行刷新（未过有效时间/是否在免登录范围）</span></span><br><span class="line"><span class="comment">//        if(!jwtUtils.canRefresh(oldToken)|| jwtUtils.isHoldTime(oldToken))&#123;</span></span><br><span class="line"><span class="comment">//            return R.error().message("jwt还未失效，无需刷新").code(20001);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//再次获得免登录机会</span></span><br><span class="line">        <span class="keyword">long</span> time = jwtUtils.generateLoginDate().getTime();</span><br><span class="line">        <span class="keyword">long</span> expired = time - <span class="keyword">new</span> Date().getTime();</span><br><span class="line"></span><br><span class="line">        refreshToken =  jwtUtils.refreshToken(oldToken);</span><br><span class="line"></span><br><span class="line">        String id = jwtUtils.getUserIdFromToken(refreshToken);</span><br><span class="line">        <span class="comment">//原token放入黑名单</span></span><br><span class="line">        String group = jwtUtils.getGroupFromToken(oldToken);</span><br><span class="line">        String key = String.format(jwtBlacklist,group);</span><br><span class="line">        <span class="keyword">if</span> (expired&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            redisTemplate.opsForValue().set(key, oldToken, expired, TimeUnit.MILLISECONDS);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//当前使用的token进行修改</span></span><br><span class="line">        redisTemplate.opsForHash().put(jwtToken,id,refreshToken);</span><br><span class="line">        <span class="comment">//更新用户有效时间</span></span><br><span class="line">        String userkey = String.format(jwtUsername,id);</span><br><span class="line"></span><br><span class="line">        redisTemplate.expire(userkey,expired,TimeUnit.MILLISECONDS);</span><br><span class="line"></span><br><span class="line">        Date date = jwtUtils.getHoldTime(refreshToken);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将新的token交给前端</span></span><br><span class="line">        <span class="keyword">return</span> R.ok().data(<span class="string">"token"</span>,refreshToken).data(<span class="string">"date"</span>,date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="测试-Postman"><a href="#测试-Postman" class="headerlink" title="测试 Postman"></a><font size="4px">测试 Postman</font></h1><h2 id="http-localhost-9500-jwt-client-login"><a href="#http-localhost-9500-jwt-client-login" class="headerlink" title="http://localhost:9500/jwt-client/login"></a><font size="3px"><a href="http://localhost:9500/jwt-client/login" target="_blank" rel="noopener">http://localhost:9500/jwt-client/login</a></font></h2><p><img src="/2019/11/14/Jwt-Spring实现3天免登录/login.png" alt></p><p>服务端记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ERROR 47138 --- [nio-9000-exec-4] c.r.j.c.controller.ClientController      : redis key: JWT_USERNAME::1249426830067269633           </span><br><span class="line">ERROR 47138 --- [nio-9000-exec-4] c.r.j.c.controller.ClientController      : 原始数据: 1586891867067 redis JWT_USERNAME::1249426830067269633 截止时间: 2020-04-15 03:17:47</span><br><span class="line">ERROR 47138 --- [nio-9000-exec-4] c.r.j.c.controller.ClientController      : redis hashKey: JWT_TOKEN field: 1249426830067269633 token:eyJhbGciOiJIUzUxMiJ9.eyJjcmVhdGVkIjoxNTg2ODkxMjY1OTkyLCJpZCI6IjEyNDk0MjY4MzAwNjcyNjk2MzMiLCJob2xkdGltZSI6MTU4Njg5MTg2NTk5MiwiZXhwIjoxNTg2ODkxMzg2LCJ1c2VybmFtZSI6ImFkbWluIiwiZ3JvdXAiOiIwOGI5MzcxZGY1NTk0ZWIwOWRhODI5MWNkZDc3M2Y0MSJ9.FOv1VOQAhe9vWL4ZlsRZ1wkfrc47i-QU0_Rcn3baokg5AZn4eje-5J2x2wJjp0g7_1s2wsns_FQL1u1EEwAkcw</span><br></pre></td></tr></table></figure><h2 id="http-localhost-9500-jwt-client-getInfo"><a href="#http-localhost-9500-jwt-client-getInfo" class="headerlink" title="http://localhost:9500/jwt-client/getInfo"></a><font size="3px"><a href="http://localhost:9500/jwt-client/getInfo" target="_blank" rel="noopener">http://localhost:9500/jwt-client/getInfo</a></font></h2><p><img src="/2019/11/14/Jwt-Spring实现3天免登录/getInfo.png" alt></p><p>服务端记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ERROR 42712 --- [ctor-http-nio-3] c.r.jwt.gateway.filter.AuthFilter        : 当前路径 /jwt-client/getInfo，是否放行 false</span><br><span class="line">ERROR 42712 --- [ctor-http-nio-3] c.r.jwt.gateway.utils.JwtUtils           : JWT载荷中 用户ID:1249426830067269633 用户名:admin</span><br><span class="line">ERROR 42712 --- [ctor-http-nio-3] c.r.jwt.gateway.utils.JwtUtils           : token中过期时间 2020-04-15 03:09:46</span><br></pre></td></tr></table></figure><h2 id="http-localhost-9500-jwt-client-logout"><a href="#http-localhost-9500-jwt-client-logout" class="headerlink" title="http://localhost:9500/jwt-client/logout"></a><font size="3px"><a href="http://localhost:9500/jwt-client/logout" target="_blank" rel="noopener">http://localhost:9500/jwt-client/logout</a></font></h2><p><img src="/2019/11/14/Jwt-Spring实现3天免登录/logout.png" alt></p><p>服务端记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ERROR 42712 --- [ctor-http-nio-3] c.r.jwt.gateway.filter.AuthFilter        : 放行路径[[/jwt-client/login]],当前路径 /jwt-client/logout，是否放行 false</span><br><span class="line">ERROR 42712 --- [ctor-http-nio-3] c.r.jwt.gateway.utils.JwtUtils           : JWT载荷中 用户ID:1249426830067269633 用户名:admin</span><br><span class="line">ERROR 42712 --- [ctor-http-nio-3] c.r.jwt.gateway.utils.JwtUtils           : token中的用户组 08b9371df5594eb09da8291cdd773f41</span><br><span class="line">ERROR 42712 --- [ctor-http-nio-3] c.r.jwt.gateway.filter.AuthFilter        : 验证token后放行路径[[/jwt-client/token/refresh, /jwt-client/relogin]],当前路径 /jwt-client/logout，是否放行 false</span><br><span class="line">INFO 42712 --- [ctor-http-nio-3] c.r.jwt.gateway.utils.JwtUtils           : 原数据值：1586891865992 该token免登录时间截止至 2020-04-15 03:17:45</span><br></pre></td></tr></table></figure><h2 id="http-localhost-9500-jwt-client-refresh"><a href="#http-localhost-9500-jwt-client-refresh" class="headerlink" title="http://localhost:9500/jwt-client/refresh"></a><font size="3px"><a href="http://localhost:9500/jwt-client/refresh" target="_blank" rel="noopener">http://localhost:9500/jwt-client/refresh</a></font></h2><p>刷新可以用于在线超时，重新登录</p><p><img src="/2019/11/14/Jwt-Spring实现3天免登录/refresh.png" alt></p><h2 id="http-localhost-9500-jwt-client-relogin"><a href="#http-localhost-9500-jwt-client-relogin" class="headerlink" title="http://localhost:9500/jwt-client/relogin"></a><font size="3px"><a href="http://localhost:9500/jwt-client/relogin" target="_blank" rel="noopener">http://localhost:9500/jwt-client/relogin</a></font></h2><p>用于清除当前服务器中的用户名和token，重新登录进行业务</p><p><img src="/2019/11/14/Jwt-Spring实现3天免登录/relogin.png" alt></p><p>redis中存在黑名单</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; keys *</span><br><span class="line">1) "JWT_TOKEN"</span><br><span class="line">2) "JWT_USERNAME::1249426830067269633"</span><br><span class="line">3) "JWT_BLACKLIST::08b9371df5594eb09da8291cdd773f41"</span><br></pre></td></tr></table></figure><p>id对应的token为当前token</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; hget "JWT_TOKEN" 1249426830067269633</span><br><span class="line">"eyJhbGciOiJIUzUxMiJ9.eyJjcmVhdGVkIjoxNTg2ODkyMTY2ODU5LCJpZCI6IjEyNDk0MjY4MzAwNjcyNjk2MzMiLCJob2xkdGltZSI6MTU4Njg5Mjc2Njg1OSwiZXhwIjoxNTg2ODkyMjg2LCJ1c2VybmFtZSI6ImFkbWluIiwiZ3JvdXAiOiIzMmQ3OGQ0OGI5ZjA0ZWMwOWE3MzcyNTYxNDMxNWY3YiJ9.7GeEeqM53v8FTbtQsdPJ1AQMMILdHg2BRviJ7lKOeaAsd43e9BYaeDH25i7G93WlSAH7aBt8j7cfgNPM6n-GJA"</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure><p>此时请求 /jwt-login/login</p><p><img src="/2019/11/14/Jwt-Spring实现3天免登录/loginagain.png" alt></p><p>请求 /jwt-login/getInfo 用原来的token</p><p><img src="/2019/11/14/Jwt-Spring实现3天免登录/getInfoagain.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Spring Cloud Gateway作为网关在请求得到路由前进行过滤并分配请求到他指定的路由，Spring Cloud Alibana Nacos作为服务注册使得网关能够服务发现，分配路由，jwt作为token令牌解决传统的单点登录设置cookie和session登录方式，也解决了分布式情况下登录问题&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Java" scheme="https://www.runaccepted.com/categories/Java/"/>
    
    
      <category term="Java" scheme="https://www.runaccepted.com/tags/Java/"/>
    
      <category term="SpringCloud" scheme="https://www.runaccepted.com/tags/SpringCloud/"/>
    
      <category term="SpringBoot" scheme="https://www.runaccepted.com/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>算法笔记</title>
    <link href="https://www.runaccepted.com/2019/11/13/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.runaccepted.com/2019/11/13/算法笔记/</id>
    <published>2019-11-13T15:57:07.000Z</published>
    <updated>2020-05-06T21:38:35.921Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><a href="https://pan.baidu.com/s/1vNOa4kA5c5y4mQ20mXMLGg" target="_blank" rel="noopener">算法笔记</a></blockquote><a id="more"></a><h1 id="代码语言选择"><a href="#代码语言选择" class="headerlink" title="代码语言选择"></a><font size="4px">代码语言选择</font></h1><p>java执行时间比较慢</p><p>c++语法向下兼容c</p><p>c++拥有STL标准模板库</p><h1 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a><font size="4px">编译器</font></h1><p>Dev-C++ – 浙大翁凯推荐</p><p>特点：轻便好用 – 新建文件，编写代码，保存后即可运行</p><h1 id="PAT"><a href="#PAT" class="headerlink" title="PAT"></a><font size="4px">PAT</font></h1><p>浙大PAT。分为乙级，甲级，顶级。采用单点测试，处理一组数据的输入。</p><h1 id="c-c-基础知识"><a href="#c-c-基础知识" class="headerlink" title="c/c++基础知识"></a><font size="4px">c/c++基础知识</font></h1><h2 id="主函数main"><a href="#主函数main" class="headerlink" title="主函数main()"></a><font size="3px">主函数main()</font></h2><p>是一个程序的入口位置，整个程序从主函数开始执行</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="scanf"><a href="#scanf" class="headerlink" title="scanf"></a><font size="3px">scanf</font></h2><p>读取数据</p><p>%d int型输入标识，&amp;取得a所在地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br></pre></td></tr></table></figure><p>整型，浮点型以空格符为结束判断标志</p><p>字符串以空格/换行符为结束标志</p><p>字符可读入字符</p><h2 id="prinf"><a href="#prinf" class="headerlink" title="prinf"></a><font size="3px">prinf</font></h2><p>输出数据，以%d int类型输出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a);</span><br></pre></td></tr></table></figure><p>输出% </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%%"</span>);</span><br></pre></td></tr></table></figure><p>输出格式</p><table><thead><tr><th>%md</th><th>以m位右对齐输出</th></tr></thead><tbody><tr><td>%0md</td><td>以0补齐输出</td></tr><tr><td>%.mf</td><td>小数点为m位的浮点型</td></tr></tbody></table><h2 id="cin-cout"><a href="#cin-cout" class="headerlink" title="cin/cout"></a><font size="3px">cin/cout</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;n;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读入字符串</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">cin</span>.getline(str,<span class="number">100</span>);</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> str;</span><br><span class="line">getline(<span class="built_in">cin</span>,str);</span><br></pre></td></tr></table></figure><h2 id="sscanf-sprintf"><a href="#sscanf-sprintf" class="headerlink" title="sscanf/sprintf"></a><font size="3px">sscanf/sprintf</font></h2><p>sscanf 将字符串转化为数字</p><p>sscanf(str,”%d”,a) str以%d格式写到a中</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> str[<span class="number">10</span>]=<span class="string">"123"</span>;</span><br><span class="line">  <span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">sscanf</span>(str,<span class="string">"%d"</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sprintf</p><p>sprintf(str,”%d”,a); 把a以%d的格式写到str字符串中</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a =<span class="number">123</span>;</span><br><span class="line">  <span class="keyword">char</span> str[<span class="number">10</span>]; </span><br><span class="line">  <span class="built_in">sprintf</span>(str,<span class="string">"%d"</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="getchar-putchar"><a href="#getchar-putchar" class="headerlink" title="getchar/putchar"></a><font size="3px">getchar/putchar</font></h2><p>char ch = getchar() 输入单个字符</p><p>puthar(ch)  输出ch字符</p><h2 id="puts-gets"><a href="#puts-gets" class="headerlink" title="puts/gets"></a><font size="3px">puts/gets</font></h2><p>gets(string) 输入字符串，识别\n为结束</p><p>puts(string) 输出字符串</p><h2 id="puts-gets-1"><a href="#puts-gets-1" class="headerlink" title="puts/gets"></a><font size="3px">puts/gets</font></h2><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a><font size="3px">变量类型</font></h2><table><thead><tr><th></th><th align="center">类型</th><th align="center">取值范围</th><th align="center">初值</th><th align="center">scanf</th></tr></thead><tbody><tr><td>整型</td><td align="center">int</td><td align="center">-2x$10^{9}$ - 2x$10^{9}$</td><td align="center">0</td><td align="center">%d</td></tr><tr><td></td><td align="center">long long</td><td align="center">-9x$10^{18}$ - 9x$10^{18}$</td><td align="center">0LL</td><td align="center">%lld</td></tr><tr><td>浮点型</td><td align="center">float</td><td align="center">-$2^{128}$ - $2^{128}$</td><td align="center">0.0f</td><td align="center">%f</td></tr><tr><td></td><td align="center">double</td><td align="center">-$2^{1024}$ - $2^{1024}$</td><td align="center">0.0</td><td align="center">%lf</td></tr><tr><td>字符</td><td align="center">char</td><td align="center">-128 - 127</td><td align="center">\0</td><td align="center">%c</td></tr><tr><td>布尔</td><td align="center">bool</td><td align="center">0/1</td><td align="center"></td><td align="center">%d</td></tr></tbody></table><p>浮点数都用double</p><p>int 通常表示为 $2^{30}-1$ 以防两数相加超过int表示范围 即03ffffffH</p><p>字符常量char，用ASCII码0-127 。</p><table><thead><tr><th align="center">显示字符</th><th align="center">ASCII码</th></tr></thead><tbody><tr><td align="center">0-9</td><td align="center">48-57</td></tr><tr><td align="center">A-Z</td><td align="center">65-90</td></tr><tr><td align="center">a-z</td><td align="center">97-122</td></tr></tbody></table><h3 id="浮点数比较"><a href="#浮点数比较" class="headerlink" title="浮点数比较"></a><font size="3px">浮点数比较</font></h3><p>相等</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-8</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Equ(a,b) (fabs((a)-(b))&lt;(eps))</span></span><br></pre></td></tr></table></figure><p>大于</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> More(a,b) (((a)-(b))&gt;(eps))</span></span><br></pre></td></tr></table></figure><p>小于</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Less(a,b) (((a)-(b))&lt;(-eps))</span></span><br></pre></td></tr></table></figure><p>大于等于</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MoreEqu(a,b) (((a)-(b))&gt;(-eps))</span></span><br></pre></td></tr></table></figure><p>小于等于</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LessEqu(a,b) (((a)-(b))&lt;(eps))</span></span><br></pre></td></tr></table></figure><p>圆周率</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br></pre></td></tr></table></figure><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a><font size="3px">转义字符</font></h3><p>\n 换行</p><p>\t 空格</p><p>\0 空字符null，ASCII码为0</p><h3 id="字符串常量"><a href="#字符串常量" class="headerlink" title="字符串常量"></a><font size="3px">字符串常量</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">25</span>]=<span class="string">"Hello World"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br></pre></td></tr></table></figure><p><font color="#f00">字符数组名称本身代表数组第一个元素地址</font></p><p><font color="#f00">以空格跟换行为读入结束标志</font></p><p>空字符\0在使用gets/scanf 时会自动添加在字符串最后</p><p>getchar() 不会在输入末尾加\0</p><h3 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a><font size="3px">布尔型</font></h3><p>c语言中必须加#include&lt; stdbool.h&gt;</p><p>整型常量在赋值给布尔型变量时会自动转换为true，1/-1都为true</p><p>if(n!=0)  = if(n)</p><p>if(n==0) = if(!n)</p><h3 id="符号常量"><a href="#符号常量" class="headerlink" title="符号常量"></a><font size="3px">符号常量</font></h3><p>一旦赋值，其值不再改变</p><ul><li><p>宏定义 #define pi 3.14</p><p><font color="#f00">宏定义直接将对应的部分替换，然后进行编译和运行</font></p><p>必须加括号传输</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CAL(a,b) ((a)+(b))</span></span><br></pre></td></tr></table></figure></li><li><p>const double pi = 3.14；</p></li></ul><h2 id="typedef-起别名"><a href="#typedef-起别名" class="headerlink" title="typedef 起别名"></a><font size="3px">typedef 起别名</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a = <span class="number">123L</span>L;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a><font size="3px">数组</font></h2><p>初始化</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]=&#123;&#125;;</span><br></pre></td></tr></table></figure><p>数组大小大于$10^6$时，应定义在主函数外</p><p>赋相同值 memeset函数，只能赋-1/0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">  <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组为参数时，在函数中对数组元素的修改等同于对原数组元素的修改</p><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a><font size="4px">指针</font></h2><p>每个变量都会存放在内存中分配的一个空间。每一个字节都会有一个地址。每个变量就是它占用的空间第一个字节的地址。</p><p><strong>指针</strong>表示内存地址。C语言中用指针把地址指向一个变量。</p><p>指针本质是unsinged类型整数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span>* p = &amp;a; <span class="comment">//a的内存地址</span></span><br><span class="line"></span><br><span class="line">*p=<span class="number">3</span>; <span class="comment">//p所指向的地址中存的是3，于是a的值也变为3</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,a); <span class="comment">//3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数组名称作为数组首地址使用</span></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">10</span>]=<span class="string">"Hello"</span>;</span><br><span class="line"><span class="keyword">int</span>* q=str; <span class="comment">//=&amp;str[0];</span></span><br></pre></td></tr></table></figure><p>指针与数组</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span>* p=a; p&lt;a+<span class="number">10</span>; p++)&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a><font size="4px">引用</font></h2><p>引用操作的是原变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123;</span><br><span class="line">  x=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a = <span class="number">2</span>;</span><br><span class="line">  change(a);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,a); <span class="comment">//3</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a><font size="4px">头文件</font></h1><h2 id="stdio-h"><a href="#stdio-h" class="headerlink" title="stdio.h"></a><font size="3px">stdio.h</font></h2><p>标准输入输出库，standard input output，负责输入输出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="math-h"><a href="#math-h" class="headerlink" title="math.h"></a><font size="3px">math.h</font></h2><p>数学函数</p><ul><li>fabs(double) 绝对值函数</li><li>floor(double) 向下取整  4.5=4</li><li>ceil(double) 向上取整 4.5=5</li><li>round(double) 四舍五入取整 4.5=5; 4.4=4</li><li>pow(double a, double b)  $a^b$</li><li>sqrt(double) 算术平方根</li><li>log(double) 以e为底的对数</li><li>sin(double), cos(double), tan(double) </li><li>asin(double), acos(double), atan(double) </li></ul><h2 id="string-h"><a href="#string-h" class="headerlink" title="string.h"></a><font size="3px">string.h</font></h2><ul><li>strlen() 字符串长度</li><li>strcmp(string,string) 按字典顺序比较字符串 &gt; = &lt; 0</li><li>strcpy(string, string) 将字符串数组1复制给数组2</li><li>strcat(string, string) 字符数组2接到字符数组1后</li></ul><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a><font size="4px">排序</font></h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a><font size="3px">冒泡排序</font></h2><p>交换数组元素。每次交换结果是将当前剩余元素的最大值移动到一端，剩余元素为0，排序成功</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn]=&#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=maxn<span class="number">-1</span>;i++)&#123; <span class="comment">//4趟</span></span><br><span class="line">  <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">//从前往后</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;maxn<span class="number">-1</span>-i;j++)&#123; <span class="comment">//第一趟 0-4号元素</span></span><br><span class="line">    <span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])&#123; <span class="comment">//将最大值移动至最后</span></span><br><span class="line">      flag=<span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">int</span> temp=a[j];</span><br><span class="line">      a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">      a[j+<span class="number">1</span>]=temp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(flag)&#123; <span class="comment">//说明当前元素排列已经有序</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>way2</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=maxn<span class="number">-1</span>;i++)&#123; <span class="comment">//4趟</span></span><br><span class="line">  <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">//从后往前</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=maxn<span class="number">-1</span>;j&gt;i;j--)&#123; <span class="comment">//第一趟 0-4号元素</span></span><br><span class="line">    <span class="keyword">if</span>(a[j<span class="number">-1</span>]&lt;a[j])&#123; <span class="comment">//将最大值移动至最后</span></span><br><span class="line">      flag=<span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">int</span> temp=a[j<span class="number">-1</span>];</span><br><span class="line">      a[j]=a[j<span class="number">-1</span>];</span><br><span class="line">      a[j<span class="number">-1</span>]=temp;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(flag)&#123; <span class="comment">//说明当前元素排列已经有序</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a><font size="3px">简单选择排序</font></h2><p>对一个序列A中的元素A[1]~A[n]，令i从1到n枚举，进行n趟操作。每趟从待排序部分[i,n]中挑选最小的元素，令其与待排序部分的第一个元素A[i]进行交换。这样A[i]就会与当前有序区间[1,i-1]形成新的有序区间[1,i]。n趟后，所有元素就是有序的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">  <span class="keyword">int</span> min=i;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[j]&lt;a[min])&#123;</span><br><span class="line">      min=j;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(min!=i)&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=a[min];</span><br><span class="line">    a[min]=a[i];</span><br><span class="line">    a[i]=temp;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a><font size="3px">插入排序</font></h2><p>将序列A分成有序区间A[0,i-1]和无序区间A[i,n-1]，将A[i]插入到有序区间中形成新的有序区间。n-1趟后序列有序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(a[i]&lt;a[i<span class="number">-1</span>])&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=a[i];</span><br><span class="line">    <span class="keyword">int</span> j=i<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(;a[j]&gt;temp&amp;&amp;j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">      a[j+<span class="number">1</span>]=a[j];</span><br><span class="line">    &#125;</span><br><span class="line">    a[j+<span class="number">1</span>]=temp;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a><font size="3px">归并排序</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> temp[<span class="number">110</span>]=&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> l1,<span class="keyword">int</span> r1,<span class="keyword">int</span> l2,<span class="keyword">int</span> r2)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> i=l1; <span class="keyword">int</span> j=l2;</span><br><span class="line">  <span class="keyword">while</span>(i&lt;=r1&amp;&amp;j&lt;=r2)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i]&lt;=a[j])&#123;</span><br><span class="line">      temp[index++]=a[i++];</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      temp[index++]=a[j++];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(i&lt;=r1)&#123;</span><br><span class="line">    temp[index++]=a[i++];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(j&lt;=r2)&#123;</span><br><span class="line">    temp[index++]=a[j++];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;index;i++)&#123;</span><br><span class="line">    a[l1+i]=temp[i];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a><font size="3px">递归</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> mid=(left+right)/<span class="number">2</span>;</span><br><span class="line">  mergeSort(a,left,mid);</span><br><span class="line">  mergeSort(a,mid+<span class="number">1</span>,right);</span><br><span class="line">  merge(a,left,mid,mid+<span class="number">1</span>,right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="非递归"><a href="#非递归" class="headerlink" title="非递归"></a><font size="3px">非递归</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span> a[])</span></span>&#123;</span><br><span class="line">  <span class="comment">//step 组内元素个数</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> step=<span class="number">2</span>;step/<span class="number">2</span>&lt;=n;step*=<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="comment">//每组step个元素，前step/2和后step/2合并</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i+=step)&#123;</span><br><span class="line">      <span class="keyword">int</span> mid=i+step/<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">      <span class="keyword">if</span>(mid+<span class="number">1</span>&lt;=n)&#123;</span><br><span class="line">        merge(a,i,mid,mid+<span class="number">1</span>,min(i+step<span class="number">-1</span>,n));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sort"><a href="#sort" class="headerlink" title="sort"></a><font size="3px">sort</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span> a[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> step=<span class="number">2</span>;step/<span class="number">2</span>&lt;=n;step*=<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i+=step)&#123;</span><br><span class="line">      sort(a+i,a+min(i+step,n+<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快排"><a href="#快排" class="headerlink" title="快排"></a><font size="3px">快排</font></h2><p>挑选a[0]为中枢值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Partition</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> temp=a[left];</span><br><span class="line">  <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right&amp;&amp;a[right]&gt;temp)&#123;</span><br><span class="line">      right--;</span><br><span class="line">    &#125;</span><br><span class="line">    a[left]=a[right];</span><br><span class="line">    <span class="keyword">while</span>(lefth&lt;right&amp;&amp;a[left]&lt;temp])&#123;</span><br><span class="line">      left++;</span><br><span class="line">    &#125;</span><br><span class="line">    a[right]=a[left];</span><br><span class="line">  &#125;</span><br><span class="line">  a[left]=temp;</span><br><span class="line">  <span class="keyword">return</span> left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> mid=Partition(a,left,right);</span><br><span class="line">  quickSort(a,left,mid<span class="number">-1</span>);</span><br><span class="line">  quickSort(a,mid+<span class="number">1</span>,right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随机数，将生成[left,right]内的随机数对应的数组元素作为中枢值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Partition</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span>&#123;</span><br><span class="line">  srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">  <span class="keyword">int</span> p=(<span class="keyword">int</span>)(round(<span class="number">1.0</span>*rand()/RAND_MAX*(right-left)+left));</span><br><span class="line">  swap(a[p],a[left]);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> temp=a[left];</span><br><span class="line">  <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;right&amp;&amp;a[right]&gt;temp)&#123;</span><br><span class="line">      right--;</span><br><span class="line">    &#125;</span><br><span class="line">    a[left]=a[right];</span><br><span class="line">    <span class="keyword">while</span>(lefth&lt;right&amp;&amp;a[left]&lt;temp])&#123;</span><br><span class="line">      left++;</span><br><span class="line">    &#125;</span><br><span class="line">    a[right]=a[left];</span><br><span class="line">  &#125;</span><br><span class="line">  a[left]=temp;</span><br><span class="line">  <span class="keyword">return</span> left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求第K大的值"><a href="#求第K大的值" class="headerlink" title="求第K大的值"></a><font size="3px">求第K大的值</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">findK</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a[left]==a[right])</span><br><span class="line">    <span class="keyword">return</span> a[left];</span><br><span class="line">  <span class="keyword">int</span> p=Partition(a,left,right);</span><br><span class="line">  <span class="keyword">int</span> m=p-left+<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(k==m)</span><br><span class="line">    <span class="keyword">return</span> a[p];</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(k&lt;m)</span><br><span class="line">    findK(a,left,p<span class="number">-1</span>,k);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    findK(a,p+<span class="number">1</span>,right,k-m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="排名的实现"><a href="#排名的实现" class="headerlink" title="排名的实现"></a><font size="3px">排名的实现</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">stu[<span class="number">0</span>].rank=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(stu[i].score==stu[i<span class="number">-1</span>].score)&#123;</span><br><span class="line">    stu[i].rank=stu[i<span class="number">-1</span>].rank;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    stu[i].rank=i+<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接打印</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> r=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(i!=<span class="number">0</span>&amp;&amp;stu[i].score!=stu[i<span class="number">-1</span>].score)&#123;</span><br><span class="line">    r=i+<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a><font size="3px">堆排序</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">downAdjust</span><span class="params">(<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i=low; <span class="keyword">int</span> j=i*<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span>(j&lt;=high)&#123;</span><br><span class="line">    <span class="keyword">if</span>(j+<span class="number">1</span>&lt;=high&amp;&amp;heap[j+<span class="number">1</span>]&gt;heap[j])&#123;</span><br><span class="line">      j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(heap[j]&gt;heap[i])&#123;</span><br><span class="line">      swap(heap[i],heap[j]);</span><br><span class="line">      i=j;</span><br><span class="line">      j=i*<span class="number">2</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createHeap</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=n/<span class="number">2</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">    downAdjust(i,n);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteTop</span><span class="params">()</span></span>&#123;</span><br><span class="line">  heap[<span class="number">1</span>]=heap[n--];</span><br><span class="line">  downAdjust(<span class="number">1</span>,n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateAdjust</span><span class="params">(<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i=high; <span class="keyword">int</span> j=i/<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span>(j&gt;=low)&#123;</span><br><span class="line">    <span class="keyword">if</span>(heap[j]&lt;heap[i])&#123;</span><br><span class="line">      swap(heap[j],heap[i]);</span><br><span class="line">      i=j;</span><br><span class="line">      j=i/<span class="number">2</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  heap[++n]=x;</span><br><span class="line">  updateAdjust(<span class="number">1</span>,n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">heapSort</span><span class="params">()</span></span>&#123;</span><br><span class="line">  createHeap();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">1</span>;i--)&#123;</span><br><span class="line">    swap(heap[<span class="number">1</span>],heap[i]);</span><br><span class="line">    downAdjust(<span class="number">1</span>,i<span class="number">-1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="散列"><a href="#散列" class="headerlink" title="散列"></a><font size="4px">散列</font></h1><h2 id="散列函数"><a href="#散列函数" class="headerlink" title="散列函数"></a><font size="3px">散列函数</font></h2><p>H(key)=key%mod;</p><p>mod 取不小于表长的最小素数</p><ul><li>Linear Probing线性探测：寻找H(key)+1位置是否被占据</li><li>Quadratic Probing 平方探查法：H(key)+/-$k^2$ 位置</li><li>链地址法：H(key) 串在同一个位置后</li></ul><h2 id="字符串转整数"><a href="#字符串转整数" class="headerlink" title="字符串转整数"></a><font size="3px">字符串转整数</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;ch[i]!=<span class="string">'\0'</span>;i++)&#123;</span><br><span class="line">  ans=ans*<span class="number">26</span>+ch[i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="分治"><a href="#分治" class="headerlink" title="分治"></a><font size="4px">分治</font></h1><p>分而治之。</p><p>分解原问题，解决子问题，合并解。</p><h2 id="递归-1"><a href="#递归-1" class="headerlink" title="递归"></a><font size="3px">递归</font></h2><ul><li>递归边界</li><li>递归式</li></ul><h3 id="全排列"><a href="#全排列" class="headerlink" title="全排列"></a><font size="3px">全排列</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">11</span>;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> p[maxn]=&#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> hashTable[maxn]=&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generateP</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">  <span class="comment">//说明已经排好</span></span><br><span class="line"><span class="keyword">if</span>(index==n+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, p[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>; x &lt;=n ; ++x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (hashTable[x]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">p[index]=x;</span><br><span class="line">hashTable[x]++;</span><br><span class="line">generateP(index+<span class="number">1</span>);</span><br><span class="line">hashTable[x]--;<span class="comment">//还原状态</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">generateP(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="n皇后"><a href="#n皇后" class="headerlink" title="n皇后"></a><font size="3px">n皇后</font></h3><p>每个皇后都不在同一行，同一列，同一条对角线上。</p><p>采用全排列的方法。固定列，行号为排列号。故比较排列号即可得知n皇后是否成立。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">11</span>;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> p[maxn]=&#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> hashTable[maxn]=&#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">generateP</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(index==n+<span class="number">1</span>)&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">1</span>; x &lt;=n ; ++x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (hashTable[x]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">bool</span> flag=<span class="literal">true</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> pre=<span class="number">1</span>;pre&lt;index;pre++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(pre-index)==<span class="built_in">abs</span>(p[pre]-x))&#123;</span><br><span class="line">          <span class="comment">//前面已经不能组成n皇后，没必要继续排列</span></span><br><span class="line">          flag=<span class="literal">false</span>;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">          p[index]=x;</span><br><span class="line">          hashTable[x]++;</span><br><span class="line">          generateP(index+<span class="number">1</span>);</span><br><span class="line">          hashTable[x]--;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">generateP(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a><font size="4px">贪心</font></h1><p>局部最优策略。</p><p>B1020 月饼 – 选择单价最高的</p><p>B1023 组个最小数</p><h2 id="区间贪心"><a href="#区间贪心" class="headerlink" title="区间贪心"></a><font size="3px">区间贪心</font></h2><h3 id="区间不相交的最多开区间"><a href="#区间不相交的最多开区间" class="headerlink" title="区间不相交的最多开区间"></a><font size="3px">区间不相交的最多开区间</font></h3><p>总是选择左端点最大的区间</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;I[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.x!=b.x)&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x&gt;b.x;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;I[i].x,I[i].y);</span><br><span class="line">  &#125;</span><br><span class="line">  sort(I,I+n,cmp);</span><br><span class="line">  <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> lastX=I[<span class="number">0</span>].x;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(I[i].y&lt;=lastX)&#123;</span><br><span class="line">      lastX=I[i].x;</span><br><span class="line">      ans++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最少点数使每个区间都至少存在一个点"><a href="#最少点数使每个区间都至少存在一个点" class="headerlink" title="最少点数使每个区间都至少存在一个点"></a><font size="3px">最少点数使每个区间都至少存在一个点</font></h3><p>取左端点就能尽可能覆盖其他区间</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">110</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;I[maxn];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.x!=b.x)&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x&gt;b.x;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;I[i].x,I[i].y);</span><br><span class="line">  &#125;</span><br><span class="line">  sort(I,I+n,cmp);</span><br><span class="line">  <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> lastX=I[<span class="number">0</span>].x;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(I[i].y&lt;lastX)&#123;</span><br><span class="line">      lastX=I[i].x;</span><br><span class="line">      ans++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二分"><a href="#二分" class="headerlink" title="二分"></a><font size="4px">二分</font></h1><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a><font size="3px">二分查找</font></h2><p>left&lt;=right ，当left&gt;right时不再是闭区间，作为元素不存在的判定原则。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(left&lt;=right)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(left+mid)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[mid]==x)</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a[mid]&gt;x)&#123;</span><br><span class="line">      right=mid<span class="number">-1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      left=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第一个-gt-x的位置"><a href="#第一个-gt-x的位置" class="headerlink" title="第一个&gt;=x的位置"></a><font size="3px">第一个&gt;=x的位置</font></h2><p>区间是左闭右开的，left&lt;right，当left==right时，夹出的是唯一的位置，返回的是left/right</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lower_bound</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(left+mid)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[mid]==x)</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a[mid]&gt;=x)&#123;</span><br><span class="line">      right=mid;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      left=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第一个大于x的位置"><a href="#第一个大于x的位置" class="headerlink" title="第一个大于x的位置"></a><font size="3px">第一个大于x的位置</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">uppper_bound</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(left&lt;right)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(left+mid)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[mid]==x)</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a[mid]&gt;x)&#123;</span><br><span class="line">      right=mid;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      left=mid+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="求根值近似值"><a href="#求根值近似值" class="headerlink" title="求根值近似值"></a><font size="3px">求根值近似值</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps=<span class="number">1e-5</span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> x*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calSqrt</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> left=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> right=<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span>(right-left&lt;eps)&#123;</span><br><span class="line">    <span class="keyword">int</span> mid=(left+mid)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(f(mid)&gt;<span class="number">2</span>)</span><br><span class="line">      right=mid;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      left=mid;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a><font size="4px">快速幂</font></h1><p>$a^b$%m</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">binaryPow</span><span class="params">(ll a,ll b,ll m)</span></span>&#123;</span><br><span class="line">  ll ans=<span class="number">1L</span>L;</span><br><span class="line">  <span class="keyword">if</span>(b&amp;<span class="number">1</span>)&#123; <span class="comment">//b的二进制末尾是否为1</span></span><br><span class="line">    ans=ans*a%m;</span><br><span class="line">  &#125;</span><br><span class="line">  a=a*a%m;</span><br><span class="line">  b=b&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="two-points"><a href="#two-points" class="headerlink" title="two points"></a><font size="4px">two points</font></h1><h2 id="a-i-a-j-m"><a href="#a-i-a-j-m" class="headerlink" title="a[i]+a[j]=m"></a><font size="3px">a[i]+a[j]=m</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j=n<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">  <span class="keyword">if</span>(a[i]+a[j]==m)&#123;</span><br><span class="line">    i++;</span><br><span class="line">    j--;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]+a[j]&lt;m)&#123;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    j--;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数学问题"><a href="#数学问题" class="headerlink" title="数学问题"></a><font size="4px">数学问题</font></h1><h2 id="最大公约数"><a href="#最大公约数" class="headerlink" title="最大公约数"></a><font size="3px">最大公约数</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最小公倍数"><a href="#最小公倍数" class="headerlink" title="最小公倍数"></a><font size="3px">最小公倍数</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> d=gcd(a,b);</span><br><span class="line">  <span class="keyword">return</span> a/d*b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分数四则运算"><a href="#分数四则运算" class="headerlink" title="分数四则运算"></a><font size="3px">分数四则运算</font></h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a><font size="3px">初始化</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fraction</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> up,down;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="化简"><a href="#化简" class="headerlink" title="化简"></a><font size="3px">化简</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fraction <span class="title">reduction</span><span class="params">(fraction result)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(result.down&lt;<span class="number">0</span>)&#123;</span><br><span class="line">    result.down=-result.down;</span><br><span class="line">    result.up=-result.up;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(result.up==<span class="number">0</span>)&#123;</span><br><span class="line">    result.down=<span class="number">1</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">int</span> d=gcd(<span class="built_in">abs</span>(result.up),<span class="built_in">abs</span>(result.down));</span><br><span class="line">    result.up/=d;</span><br><span class="line">    result.down/=d;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="加"><a href="#加" class="headerlink" title="加"></a><font size="3px">加</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fraction <span class="title">add</span><span class="params">(fraction a,fraction b)</span></span>&#123;</span><br><span class="line">  fraction result;</span><br><span class="line">  result.up=a.up*b.down+a.down*b.up;</span><br><span class="line">  result.down=a.down*b.down;</span><br><span class="line">  <span class="keyword">return</span> reduction(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="减"><a href="#减" class="headerlink" title="减"></a><font size="3px">减</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fraction <span class="title">minu</span><span class="params">(fraction a,fraction b)</span></span>&#123;</span><br><span class="line">  fraction result;</span><br><span class="line">  result.up=a.up*b.down-a.down*b.up;</span><br><span class="line">  result.down=a.down*b.down;</span><br><span class="line">  <span class="keyword">return</span> reduction(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="乘"><a href="#乘" class="headerlink" title="乘"></a><font size="3px">乘</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fraction <span class="title">multi</span><span class="params">(fraction a,fraction b)</span></span>&#123;</span><br><span class="line">  fraction result;</span><br><span class="line">  result.up=a.up*b.up;</span><br><span class="line">  result.down=a.down*b.down;</span><br><span class="line">  <span class="keyword">return</span> reduction(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="除"><a href="#除" class="headerlink" title="除"></a><font size="3px">除</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">fraction <span class="title">divide</span><span class="params">(fraction a,fraction b)</span></span>&#123;</span><br><span class="line">  fraction result;</span><br><span class="line">  result.up=a.up*b.down;</span><br><span class="line">  result.down=a.down*b.up;</span><br><span class="line">  <span class="keyword">return</span> reduction(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a><font size="3px">输出</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showResult</span><span class="params">(fraction result)</span></span>&#123;</span><br><span class="line">  result=reduction(result);</span><br><span class="line">  <span class="keyword">if</span>(result.down==<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,result.up);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">abs</span>(result.up)&gt;result.down)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d/%d"</span>,result.up/result.down),abd(result.up)%result.down,result.down);</span><br><span class="line">  &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d/%d"</span>,result.up,result,down);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="大数运算"><a href="#大数运算" class="headerlink" title="大数运算"></a><font size="3px">大数运算</font></h2><p>高位存储在数组的高位，低位存储在数组的低位。</p><h3 id="表示"><a href="#表示" class="headerlink" title="表示"></a><font size="3px">表示</font></h3><p>字符串是从高位开始存储的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[maxn];</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(ch);</span><br><span class="line"><span class="keyword">int</span> num[maxn]=&#123;&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">  num[i]=ch[len<span class="number">-1</span>-i]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="比较两个大数"><a href="#比较两个大数" class="headerlink" title="比较两个大数"></a><font size="3px">比较两个大数</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> b[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(lena&gt;lenb) <span class="comment">//a比b长说明a更大</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(lena&lt;lenb)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//从高位开始逐个比较</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=lena<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">      <span class="keyword">if</span>(a[i]&gt;b[i])</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(a[i]&lt;b[i])</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高精度加"><a href="#高精度加" class="headerlink" title="高精度加"></a><font size="3px">高精度加</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> b[],<span class="keyword">int</span> ans[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> carry=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lena||i&lt;lenb;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=a[i]+b[i]+carry;</span><br><span class="line">    ans[index++]=temp%<span class="number">10</span>;</span><br><span class="line">    carry=temp/<span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(carry!=<span class="number">0</span>)&#123;</span><br><span class="line">    ans[index++]=carry;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="高精度减"><a href="#高精度减" class="headerlink" title="高精度减"></a><font size="3px">高精度减</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> b[],<span class="keyword">int</span> ans[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lena||i&lt;lenb;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i]&lt;b[i])&#123;</span><br><span class="line">      a[i++]--;</span><br><span class="line">      a[i]+=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[index++]=a[i]-b[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(ans[index<span class="number">-1</span>]==<span class="number">0</span>&amp;&amp;index<span class="number">-1</span>&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">    index--;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="乘-1"><a href="#乘-1" class="headerlink" title="乘"></a><font size="3px">乘</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mutl</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> b,<span class="keyword">int</span> ans[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> carry=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;lena;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> temp=a[i]*b+carry;</span><br><span class="line">    ans[index++]=temp%<span class="number">10</span>;</span><br><span class="line">    carry=temp/<span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(carry!=<span class="number">0</span>)&#123;</span><br><span class="line">    ans[index++]=carry%<span class="number">10</span>;</span><br><span class="line">    carry/=<span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="除-1"><a href="#除-1" class="headerlink" title="除"></a><font size="3px">除</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> b,<span class="keyword">int</span> ans[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> r=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> index=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=lena<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">    <span class="keyword">int</span> r=r*<span class="number">10</span>+a[i];</span><br><span class="line">    <span class="keyword">if</span>(r&lt;b)&#123;</span><br><span class="line">      ans[i]=<span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      ans[i]=r/b;</span><br><span class="line">      r=r%b;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(ans[index<span class="number">-1</span>]==<span class="number">0</span>&amp;&amp;index<span class="number">-1</span>&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">    index--;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="c-标准模版库"><a href="#c-标准模版库" class="headerlink" title="c++标准模版库"></a><font size="4px">c++标准模版库</font></h1><h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a><font size="3px">vector</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br></pre></td></tr></table></figure><p>变长数组 vector&lt; typename&gt; v; = typename v[maxn];</p><p><strong>访问</strong> </p><ul><li><p>v[i]</p></li><li><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it=v.begin();it!=v.end();it++)&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,*it);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>v.end() 取的是vector末尾下一个地址</p><p>添加元素**</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v.push_back(); <span class="comment">//添加到尾部</span></span><br></pre></td></tr></table></figure><p><strong>删除元素</strong></p><p>删除尾部元素</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v.pop_back();</span><br></pre></td></tr></table></figure><p><strong>个数</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v.size(); <span class="comment">//unsigned</span></span><br></pre></td></tr></table></figure><p><strong>插入</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v.insert(v.begin()+<span class="number">2</span>,<span class="number">-1</span>); <span class="comment">//-1插入到v[2]</span></span><br></pre></td></tr></table></figure><p><strong>删除</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v.erase(v.begin()+<span class="number">2</span>); <span class="comment">//删除v[2]</span></span><br><span class="line"><span class="comment">//[first,second)</span></span><br><span class="line">v.erase(v.begin(),v.begin()+<span class="number">3</span>); <span class="comment">//删除v[0],v[1],v[2]</span></span><br></pre></td></tr></table></figure><h2 id="set"><a href="#set" class="headerlink" title="set"></a><font size="3px">set</font></h2><p>内部自动升序且不含重复元素的容器。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">typename</span>&gt; s;</span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line">s.insert();</span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">typename</span>&gt;::iterator it=s.begin();it!=s.end();it++)&#123;</span><br><span class="line">  *it</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查询</span></span><br><span class="line">*(s.find(<span class="number">2</span>));</span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line">s.erase(s.find(<span class="number">2</span>));</span><br><span class="line">s.erase(s.find(<span class="number">2</span>),s.end());</span><br></pre></td></tr></table></figure><h2 id="string"><a href="#string" class="headerlink" title="string"></a><font size="3px">string</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> str=<span class="string">"..."</span>;</span><br><span class="line"><span class="comment">//string -&gt; char[]</span></span><br><span class="line"><span class="keyword">char</span>[] =str.c_str();</span><br><span class="line"><span class="comment">//char[] -&gt; string</span></span><br><span class="line"><span class="keyword">char</span> ch[]=str;</span><br><span class="line"></span><br><span class="line"><span class="comment">//直接比较字典序</span></span><br><span class="line">str1 &lt; str2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//str[1]处插入“123”</span></span><br><span class="line">str.insert(<span class="number">1</span>,<span class="string">"123"</span>);</span><br><span class="line">str.insert(str.begin()+<span class="number">1</span>,str1.begin(),str.end());</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除</span></span><br><span class="line">str.erase(str.begin());</span><br><span class="line">str.erase(str.begin(),str.end());</span><br><span class="line">str.erase(<span class="number">3</span>,<span class="number">2</span>);<span class="comment">//删除3号位开始的2个字符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//清空</span></span><br><span class="line">str.clear();</span><br><span class="line"></span><br><span class="line"><span class="comment">//子串</span></span><br><span class="line">str.substr(<span class="number">0</span>,<span class="number">3</span>); <span class="comment">//0号位开始长度为3的子串</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//失配</span></span><br><span class="line"><span class="built_in">string</span>::npos = <span class="number">-1</span>;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line">str.find(<span class="string">".."</span>); <span class="comment">//返回第一次出现的位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//替换</span></span><br><span class="line">str.replace(<span class="number">10</span>,<span class="number">4</span>,str2); <span class="comment">//10号位开始，长度为4的子串替换为str2</span></span><br><span class="line"><span class="comment">//[0,2)范围子串替换为str2</span></span><br><span class="line">str.replace(str.begin(),str.begin()+<span class="number">2</span>,str2);</span><br></pre></td></tr></table></figure><h2 id="map"><a href="#map" class="headerlink" title="map"></a><font size="3px">map</font></h2><p>以键从小到大顺序自动排序，内部为红黑树结构</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; m;</span><br><span class="line"></span><br><span class="line"><span class="comment">//访问</span></span><br><span class="line">m[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;::iterator it=m.begin();</span><br><span class="line">it-&gt;first;</span><br><span class="line">it-&gt;second;</span><br><span class="line"></span><br><span class="line"><span class="comment">//find(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//erase</span></span><br></pre></td></tr></table></figure><h2 id="queue"><a href="#queue" class="headerlink" title="queue"></a><font size="3px">queue</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="comment">//压入队尾</span></span><br><span class="line">q.push(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//推出队头</span></span><br><span class="line">q.pop();</span><br><span class="line"></span><br><span class="line"><span class="comment">//队头元素</span></span><br><span class="line">q.front();</span><br><span class="line"><span class="comment">//队尾元素</span></span><br><span class="line">q.back();</span><br><span class="line"></span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line">q.empty();</span><br><span class="line"></span><br><span class="line"><span class="comment">//尺寸</span></span><br><span class="line">q.size();</span><br></pre></td></tr></table></figure><h2 id="priority-queue"><a href="#priority-queue" class="headerlink" title="priority_queue"></a><font size="3px">priority_queue</font></h2><p>优先队列，堆结构。队头是优先级最高的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;priority_queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> namespae <span class="built_in">std</span>;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="comment">//入队</span></span><br><span class="line">q.push(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//出队</span></span><br><span class="line">q.pop();</span><br><span class="line"></span><br><span class="line"><span class="comment">//队头</span></span><br><span class="line">q.top();</span><br><span class="line"></span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line">q.empty();</span><br><span class="line"></span><br><span class="line"><span class="comment">//个数</span></span><br><span class="line">q.size();</span><br><span class="line"></span><br><span class="line"><span class="comment">//自定义优先级</span></span><br><span class="line"><span class="comment">//vector&lt;int&gt;承接底层堆的容器</span></span><br><span class="line"><span class="comment">//less&lt;int&gt;数字大优先级越高</span></span><br><span class="line"><span class="comment">//greater&lt;int&gt;数字大优先级越低</span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,less&lt;<span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> price;</span><br><span class="line">  <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;a,<span class="keyword">const</span> node &amp;b)&#123;</span><br><span class="line">    <span class="keyword">return</span> a.price&lt;b.price;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//按价格高排序</span></span><br><span class="line">priority_queue&lt;node&gt; p;</span><br></pre></td></tr></table></figure><h2 id="stack"><a href="#stack" class="headerlink" title="stack"></a><font size="3px">stack</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line"></span><br><span class="line">s.push(<span class="number">1</span>);</span><br><span class="line">s.pop();</span><br><span class="line">s.top();</span><br><span class="line">s.empty();</span><br><span class="line">s.size();</span><br></pre></td></tr></table></figure><h2 id="pair"><a href="#pair" class="headerlink" title="pair"></a><font size="3px">pair</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; p(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">p=pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">p=make_pair(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//取值</span></span><br><span class="line">p.first;</span><br><span class="line">p.second;</span><br></pre></td></tr></table></figure><h2 id="alogirthm"><a href="#alogirthm" class="headerlink" title="alogirthm"></a><font size="3px">alogirthm</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;alogrithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//比大小</span></span><br><span class="line">max(x,y);</span><br><span class="line">min(x,y);</span><br><span class="line"></span><br><span class="line"><span class="comment">//绝对值,x为int，浮点数用fabs,在math库中</span></span><br><span class="line"><span class="built_in">abs</span>(x);</span><br><span class="line"></span><br><span class="line"><span class="comment">//交换值</span></span><br><span class="line">swap(x,y);</span><br><span class="line"></span><br><span class="line"><span class="comment">//置换数组</span></span><br><span class="line">reverse(a,a+<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//全排列的下一个序列</span></span><br><span class="line">next_permutation(a,a+<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//赋予数组同一个值</span></span><br><span class="line">fill(a,a+<span class="number">4</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line">sort(a,a+<span class="number">4</span>); <span class="comment">//升序</span></span><br><span class="line">sort(a,a+<span class="number">4</span>,cmp);<span class="comment">//条件排序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//[first,last)内第一个&gt;=val元素的位置/指针</span></span><br><span class="line">lower_bound(first,last,val);</span><br><span class="line"><span class="comment">//[first,last)内第一个&gt;val元素的位置/指针</span></span><br><span class="line">upper_bound(first,second,val);</span><br></pre></td></tr></table></figure><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a><font size="4px">数据结构</font></h1><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a><font size="3px">栈</font></h2><p>后进先出数据结构</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">  top=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> top+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(top==<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  s[++top]=x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> pop&#123;</span><br><span class="line">  top--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> s[top];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="算式运算"><a href="#算式运算" class="headerlink" title="算式运算"></a><font size="3px">算式运算</font></h3><table><thead><tr><th align="center"></th><th align="center">（</th><th align="center">*/ /</th><th align="center">+/-</th><th align="center">）</th></tr></thead><tbody><tr><td align="center">栈内</td><td align="center">1</td><td align="center">5</td><td align="center">3</td><td align="center">6</td></tr><tr><td align="center">栈外</td><td align="center">6</td><td align="center">4</td><td align="center">2</td><td align="center">1</td></tr></tbody></table><p>栈内&gt;=栈外时退栈</p><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a><font size="3px">队列</font></h2><p>前进前出数据结构</p><p>front指向队首前一个位置，rear指向队尾位置</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line">  front=rear=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> rear-front;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  q[++rear]=x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">  front++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getFront</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> q[front+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a><font size="3px">链表</font></h2><h3 id="动态链表"><a href="#动态链表" class="headerlink" title="动态链表"></a><font size="3px">动态链表</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> data;</span><br><span class="line">  node* next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//c</span></span><br><span class="line">node* p=(node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(node));</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"></span><br><span class="line"><span class="comment">//c++</span></span><br><span class="line">node* p=<span class="keyword">new</span> node;</span><br><span class="line"><span class="keyword">delete</span>(p);</span><br></pre></td></tr></table></figure><h3 id="静态链表"><a href="#静态链表" class="headerlink" title="静态链表"></a><font size="3px">静态链表</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> data,next;</span><br><span class="line">&#125;<span class="built_in">list</span>[maxn];</span><br></pre></td></tr></table></figure><h2 id="树"><a href="#树" class="headerlink" title="树"></a><font size="3px">树</font></h2><h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a><font size="3px">二叉树</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> data;</span><br><span class="line">  node *lchild,*rchild;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">node* <span class="title">newNode</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  node* nownode=<span class="keyword">new</span> node;</span><br><span class="line">  nownode-&gt;data=x;</span><br><span class="line">  nownode-&gt;lchild=nownode-&gt;rchild=<span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> nownode;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查找</span></span><br><span class="line"><span class="function">node* <span class="title">search</span><span class="params">(node* root,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(root==<span class="literal">NULL</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(root-&gt;data==x)&#123;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">  &#125;</span><br><span class="line">  search(root-&gt;lchild,x);</span><br><span class="line">  search(root-&gt;rchild,x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(node* &amp;root,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(root==<span class="literal">NULL</span>)&#123;</span><br><span class="line">    root=newNode(x);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>( )&#123;</span><br><span class="line">    insert(root-&gt;lchild,x);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    insert(root-&gt;rchild,x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//前序遍历 左根右</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preorder</span><span class="params">(node* root)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(root==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,root-&gt;data);</span><br><span class="line">  preorder(root-&gt;lchild);</span><br><span class="line">  preorder(root-&gt;rchild);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前-中-树"><a href="#前-中-树" class="headerlink" title="前+中=树"></a><font size="3px">前+中=树</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">node* <span class="title">create</span><span class="params">(<span class="keyword">int</span> prel,<span class="keyword">int</span> prer,<span class="keyword">int</span> inl,<span class="keyword">int</span> inr)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(prel&gt;prer)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">  node* root=<span class="keyword">new</span> node;</span><br><span class="line">  root-&gt;data=pre[prel];</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> i=inl;</span><br><span class="line">  <span class="keyword">for</span>(;i&lt;=inr;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(pre[prel]==in[i])</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">int</span> numLeft=i-inl;</span><br><span class="line">  root-&gt;lchild=create(prel+<span class="number">1</span>,prel+numLeft,inl,i<span class="number">-1</span>);</span><br><span class="line">  root-&gt;rchild=create(prel+numLeft+<span class="number">1</span>,prer,i+<span class="number">1</span>,inr);</span><br><span class="line">  <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后-中-树"><a href="#后-中-树" class="headerlink" title="后+中=树"></a><font size="3px">后+中=树</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">node* <span class="title">create</span><span class="params">(<span class="keyword">int</span> postl,<span class="keyword">int</span> postr,<span class="keyword">int</span> inl,<span class="keyword">int</span> inr)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(postl&gt;postr)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">  node* root=<span class="keyword">new</span> node;</span><br><span class="line">  root-&gt;data=post[postr];</span><br><span class="line">  <span class="keyword">int</span> i=inl;</span><br><span class="line">  <span class="keyword">for</span>(;i&lt;=inr;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(post[postr]==in[i])</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">int</span> numLeft=i-inl;</span><br><span class="line">  root-&gt;lchild=create(postl,postl+numLeft<span class="number">-1</span>,inl,i<span class="number">-1</span>);</span><br><span class="line">  root-&gt;rchild=create(postl+numLeft,postr<span class="number">-1</span>,i+<span class="number">1</span>,inr);</span><br><span class="line">  <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BST-二叉查找树"><a href="#BST-二叉查找树" class="headerlink" title="BST 二叉查找树"></a><font size="3px">BST 二叉查找树</font></h3><p>左子树&lt;= 根&lt;右子树</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除结点</span></span><br><span class="line"><span class="function">node* <span class="title">findMax</span><span class="params">(node* root)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(root-&gt;rchild!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">    root=root-&gt;rchild;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node* <span class="title">findMin</span><span class="params">(node* root)</span></span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(root-&gt;lchild!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">    root=root-&gt;lchild;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteNode</span><span class="params">(node* &amp;root,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(root==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">if</span>(root-&gt;data==x)&#123;</span><br><span class="line">    <span class="keyword">if</span>(root-&gt;lchild==<span class="literal">NULL</span>&amp;&amp;root-&gt;rchild==<span class="literal">NULL</span>)</span><br><span class="line">      root=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(root-&gt;lchild!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">      node* maxNode=findMax(root-&gt;lchild);</span><br><span class="line">      root-&gt;data=maxNode-&gt;data;</span><br><span class="line">      deleteNode(root-&gt;lchild,maxNode-&gt;data);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      node* minNode=findMin(root-&gt;rchild);</span><br><span class="line">      root-&gt;data=minNode-&gt;data;</span><br><span class="line">      deleteNode(root-&gt;rchild,minNode-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(root-&gt;data&gt;x)&#123;</span><br><span class="line">    deleteNode(root-&gt;lchild,x);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    deleteNode(root-&gt;rchild,x);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AVL平衡二叉树"><a href="#AVL平衡二叉树" class="headerlink" title="AVL平衡二叉树"></a><font size="3px">AVL平衡二叉树</font></h3><p>左子树和右子树的高度之差绝对值不超过1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> data,height;</span><br><span class="line">  node *lchild,*rchild;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">node* <span class="title">newNode</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  node* root=<span class="keyword">new</span> node;</span><br><span class="line">  root-&gt;data=x;</span><br><span class="line">  root-&gt;height=<span class="number">1</span>;</span><br><span class="line">  root-&gt;lchild=root-&gt;rchild=<span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getHeight</span><span class="params">(node* root)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(root==<span class="literal">NULL</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> root-&gt;height;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getBalanceFactor</span><span class="params">(node* root)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> getHeight(root-&gt;lchild)-getHeight(root-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateHeight</span><span class="params">(node* root)</span></span>&#123;</span><br><span class="line">  root-&gt;height=max(getHeight(root-&gt;lchild),getHeight(root-&gt;rchild))+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">L</span><span class="params">(node* &amp;root)</span></span>&#123;</span><br><span class="line">  node* temp=root-&gt;rchild;</span><br><span class="line">  root-&gt;rchild=temp-&gt;lchild;</span><br><span class="line">  temp-&gt;lchild=root;</span><br><span class="line">  updateHeight(root);</span><br><span class="line">  updateHeight(temp);</span><br><span class="line">  root=temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">R</span><span class="params">(node* &amp;root)</span></span>&#123;</span><br><span class="line">  node* temp=root-&gt;lchild;</span><br><span class="line">  root-&gt;lchild=temp-&gt;rchild;</span><br><span class="line">  temp-&gt;rchild=root;</span><br><span class="line">  updateHeight(root);</span><br><span class="line">  updateHeight(temp);</span><br><span class="line">  root=temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(node* &amp;root,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(root==<span class="literal">NULL</span>)&#123;</span><br><span class="line">    root=newNode(x);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(root-&gt;data&gt;x)&#123;</span><br><span class="line">    insert(root-&gt;lchild,x);</span><br><span class="line">    updateHeight(root);</span><br><span class="line">    <span class="keyword">if</span>(getBalanceFactor(root)==<span class="number">2</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(getBalanceFactor(root-&gt;lchild)==<span class="number">1</span>)&#123;</span><br><span class="line">        R(root);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(getBalanceFactor(root-&gt;lchild)==<span class="number">-1</span>)&#123;</span><br><span class="line">        L(root-&gt;lchild);</span><br><span class="line">        R(root);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    insert(root-&gt;rchild,x);</span><br><span class="line">    updateHeight(root);</span><br><span class="line">    <span class="keyword">if</span>(getBalanceFactor(root)==<span class="number">2</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(getBalanceFactor(root-&gt;rchild)==<span class="number">1</span>)&#123;</span><br><span class="line">        L(root);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(getBalanceFactor(root-&gt;rchild)==<span class="number">-1</span>)&#123;</span><br><span class="line">        R(root-&gt;rchild);</span><br><span class="line">        L(root);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a><font size="3px">并查集</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始时每个元素独立</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">  father[i]=i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findFather</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a=x;</span><br><span class="line">  <span class="keyword">while</span>(x!=father[x])&#123;</span><br><span class="line">    x=father[x];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(a!=father[a])&#123;</span><br><span class="line">    <span class="keyword">int</span> z=a;</span><br><span class="line">    a=father[a];</span><br><span class="line">    father[z]=x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> fathera=findfather(x);</span><br><span class="line">  <span class="keyword">int</span> fatherb=findfather(y);</span><br><span class="line">  <span class="keyword">if</span>(fathera!=fatherb)&#123;</span><br><span class="line">    father[fathera]=fatherb;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="堆"><a href="#堆" class="headerlink" title="堆"></a><font size="3px">堆</font></h3><p>完全二叉树，[1,n]记录结点</p><h2 id="图"><a href="#图" class="headerlink" title="图"></a><font size="3px">图</font></h2><h3 id="dfs"><a href="#dfs" class="headerlink" title="dfs"></a><font size="3px">dfs</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> visit[maxn]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> depth)</span></span>&#123;</span><br><span class="line">  visit[u]=<span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">0</span>;v&lt;n;v++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(visit[v]==<span class="literal">false</span>&amp;&amp;graph[u][v]!=inf)&#123;</span><br><span class="line">      dfs(v,depth+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfsTrave</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">0</span>;u&lt;n;u++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(visit[u]==<span class="literal">false</span>)&#123;</span><br><span class="line">      dfs(u,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="bfs"><a href="#bfs" class="headerlink" title="bfs"></a><font size="3px">bfs</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> visit[maxn]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">  <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">  q.push(u);</span><br><span class="line">  visit[u]=<span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">    <span class="keyword">int</span> top=q.front();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;graph[u].size();i++)&#123;</span><br><span class="line">      <span class="keyword">int</span> v=graph[u][i];</span><br><span class="line">      <span class="keyword">if</span>(visit[v]==<span class="literal">false</span>)&#123;</span><br><span class="line">        q.push(v);</span><br><span class="line">        visit[v]=<span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfsTrave</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">0</span>;u&lt;n;u++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(visit[u]==<span class="literal">false</span>)&#123;</span><br><span class="line">      bfs(u);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最短路径"><a href="#最短路径" class="headerlink" title="最短路径"></a><font size="3px">最短路径</font></h3><h4 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a><font size="3px">Dijkstra</font></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x03ffffff</span>;</span><br><span class="line"><span class="keyword">bool</span> visit[maxn]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> graph[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">  d[s]=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> u=<span class="number">-1</span>; <span class="keyword">int</span> min=inf;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(visit[j]==<span class="literal">false</span>&amp;&amp;d[j]&lt;min)&#123;</span><br><span class="line">        min=d[j];</span><br><span class="line">        u=j;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(u==<span class="number">-1</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    visit[u]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">0</span>;v&lt;n;v++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(visit[v]==<span class="literal">false</span>&amp;&amp;graph[u][v]!=inf)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[v]&gt;d[u]+graph[u][v])&#123;</span><br><span class="line">          d[v]=d[u]+graph[u][v];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  fill(d,d+maxn,inf);</span><br><span class="line">  fill(graph[<span class="number">0</span>],graph[<span class="number">0</span>]+maxn*maxn,inf);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="求最短路径编号"><a href="#求最短路径编号" class="headerlink" title="求最短路径编号"></a><font size="3px">求最短路径编号</font></h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">d[s]=<span class="number">0</span>;</span><br><span class="line">pre[s]=s;</span><br><span class="line"><span class="keyword">if</span>(visit[v]==<span class="literal">false</span>&amp;&amp;graph[u][v]!=inf)&#123;</span><br><span class="line">    <span class="keyword">if</span>(d[v]&gt;d[u]+graph[u][v])&#123;</span><br><span class="line">      d[v]=d[u]+graph[u][v];</span><br><span class="line">      pre[v]=u;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(v==s)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,s);</span><br><span class="line">  &#125;</span><br><span class="line">  dfs(s,pre[v]);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tempPath,path;</span><br><span class="line"><span class="keyword">int</span> minCost=<span class="number">0x3ffffff</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v)</span></span>&#123; </span><br><span class="line">  <span class="keyword">if</span>(v==s)&#123;</span><br><span class="line">    tempPath.push_back(v);</span><br><span class="line">    <span class="keyword">int</span> tempCost=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=tempPath.size()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">      <span class="keyword">int</span> id=tempPath[i];</span><br><span class="line">      <span class="keyword">int</span> nextId=tempPath[i<span class="number">-1</span>];</span><br><span class="line">      tempCost+=cost[id][nextId];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tempCost&lt;minCost)&#123;</span><br><span class="line">      minCost=tempCost;</span><br><span class="line">      path=tempPath;</span><br><span class="line">    &#125;</span><br><span class="line">    tempPath.pop_back();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  tempPath.push_back(v);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;pre[v].size();i++)&#123;</span><br><span class="line">    dfs(pre[v][i]);</span><br><span class="line">  &#125;</span><br><span class="line">  tempPath.pop_back(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="边权"><a href="#边权" class="headerlink" title="边权"></a><font size="3px">边权</font></h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">c[s]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(visit[v]==<span class="literal">false</span>&amp;&amp;graph[u][v]!=inf)&#123;</span><br><span class="line">  <span class="keyword">if</span>(d[v]&gt;d[u]+graph[u][v])&#123;</span><br><span class="line">    d[v]=d[u]+graph[u][v];</span><br><span class="line">    c[v]=c[u]+cost[u][v];</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(d[v]==d[u]+graph[u][v]&amp;&amp;c[v]&gt;c[u]+cost[u][v])&#123;</span><br><span class="line">    c[v]=c[u]+cost[u][v];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="点权"><a href="#点权" class="headerlink" title="点权"></a><font size="3px">点权</font></h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">w[s]=weight[s];</span><br><span class="line"><span class="keyword">if</span>(visit[v]==<span class="literal">false</span>&amp;&amp;graph[u][v]!=inf)&#123;</span><br><span class="line">  <span class="keyword">if</span>(d[v]&gt;d[u]+graph[u][v])&#123;</span><br><span class="line">    d[v]=d[u]+graph[u][v];</span><br><span class="line">    w[v]=w[u]+weight[v];</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(d[v]==d[u]+graph[u][v]&amp;&amp;w[v]&lt;w[u]+weight[v])&#123;</span><br><span class="line">    w[v]=w[u]+weight[v];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="最短路径条数"><a href="#最短路径条数" class="headerlink" title="最短路径条数"></a><font size="3px">最短路径条数</font></h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">num[s]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(visit[v]==<span class="literal">false</span>&amp;&amp;graph[u][v]!=inf)&#123;</span><br><span class="line">  <span class="keyword">if</span>(d[v]&gt;d[u]+graph[u][v])&#123;</span><br><span class="line">    d[v]=d[u]+graph[u][v];</span><br><span class="line">    num[v]=num[u];</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(d[v]==d[u]+graph[u][v])&#123;</span><br><span class="line">    num[v]+=num[u];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Bellman-Ford"><a href="#Bellman-Ford" class="headerlink" title="Bellman-Ford"></a><font size="3px">Bellman-Ford</font></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> v,dis;</span><br><span class="line">  node(<span class="keyword">int</span> _v,<span class="keyword">int</span> _dis): v(_v),dis(_dis)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; adj[maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Bellman</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">  fill(d,d+maxn,inf);</span><br><span class="line">  d[s]=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123; <span class="comment">//n-1趟</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">0</span>;u&lt;n;u++)&#123; <span class="comment">//遍历所有边</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;adj[u].size();j++)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=adj[u][j].v;</span><br><span class="line">        <span class="keyword">int</span> dis=adj[u][j].dis;</span><br><span class="line">        <span class="keyword">if</span>(d[u]+dis&lt;d[v])&#123;</span><br><span class="line">          d[v]=d[u]+dis;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">0</span>;u&lt;n;u++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;adj[u].size();j++)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=adj[u][j].v;</span><br><span class="line">        <span class="keyword">int</span> dis=adj[u][j].dis;</span><br><span class="line">        <span class="keyword">if</span>(d[u]+dis&lt;d[v])&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//存在负环</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="求最短路径"><a href="#求最短路径" class="headerlink" title="求最短路径"></a><font size="3px">求最短路径</font></h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> v,dis;</span><br><span class="line">  node(<span class="keyword">int</span> _v,<span class="keyword">int</span> _dis): v(_v),dis(_dis)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3ffffff</span>;</span><br><span class="line"><span class="keyword">int</span> num[maxn]=&#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> d[maxn]=&#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> w[maxn]=&#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> weight[maxn]=&#123;&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; adj[maxn];</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; pre[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bellman</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">  fill(d,d+maxn,inf);</span><br><span class="line">  d[s]=<span class="number">0</span>;</span><br><span class="line">  w[s]=weight[s];</span><br><span class="line">  num[s]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">0</span>;u&lt;n;u++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;adj[u].size();j++)&#123;</span><br><span class="line">        <span class="keyword">int</span> v=adj[u][j].v;</span><br><span class="line">        <span class="keyword">int</span> dis=adj[u][j].dis;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(d[v]&gt;d[u]+dis)&#123;</span><br><span class="line">          </span><br><span class="line">          d[v]=d[u]+dis;</span><br><span class="line">          w[v]=w[u]+weight[v];</span><br><span class="line">          num[v]=num[u];</span><br><span class="line">          pre[v].clear();</span><br><span class="line">          pre[v].insert(u);</span><br><span class="line">          </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(d[v]==d[u]+dis)&#123;</span><br><span class="line">          <span class="keyword">if</span>(w[u]+weight[v]&gt;w[v])&#123;</span><br><span class="line">            w[v]=w[u]+weight[v];</span><br><span class="line">          &#125;</span><br><span class="line">          pre[v].insert(u);</span><br><span class="line">          num[v]=<span class="number">0</span>;</span><br><span class="line">          <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">          <span class="keyword">for</span>(it=pre[v].begin();i!=pre[v].end();i++)&#123;</span><br><span class="line">            num[v]+=num[*it];</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="SPFA"><a href="#SPFA" class="headerlink" title="SPFA"></a><font size="3px">SPFA</font></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> v,dis;</span><br><span class="line">  node(<span class="keyword">int</span> _v,<span class="keyword">int</span> _dis): v(_v),dis(_dis)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3ffffff</span>;</span><br><span class="line"><span class="keyword">int</span> d[maxn]=&#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> num[maxn]=&#123;&#125;; <span class="comment">//顶点入队次数</span></span><br><span class="line"><span class="built_in">vector</span>&lt;node&gt; adj[maxn];</span><br><span class="line"><span class="keyword">bool</span> inq[maxn]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">  fill(d,d+maxn,inf);</span><br><span class="line">  <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">  q.push(s);</span><br><span class="line">  inq[s]=<span class="literal">true</span>;</span><br><span class="line">  num[s]++;</span><br><span class="line">  d[s]=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">    <span class="keyword">int</span> u=q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    inq[u]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;adj[u].size();j++)&#123;</span><br><span class="line">      <span class="keyword">int</span> v=adj[u][j].v;</span><br><span class="line">      <span class="keyword">int</span> dis=adj[u][j].dis;</span><br><span class="line">      <span class="keyword">if</span>(d[v]&gt;d[u]+dis)&#123;</span><br><span class="line">        d[v]=d[u]+dis;</span><br><span class="line">        <span class="keyword">if</span>(!inq[v])&#123;</span><br><span class="line">          q.push(v);</span><br><span class="line">          inq[v]=<span class="literal">true</span>;</span><br><span class="line">          num[v]++;</span><br><span class="line">          <span class="keyword">if</span>(num[v]&gt;=n)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Floyd-全源最短路径"><a href="#Floyd-全源最短路径" class="headerlink" title="Floyd 全源最短路径"></a><font size="3px">Floyd 全源最短路径</font></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> dis[maxn][maxn]; <span class="comment">//dis[i][j] i到j的最短距离</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Floyd</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dis[i][k]!=inf&amp;&amp;dis[k][j]!=inf</span><br><span class="line">           &amp;&amp;dis[i][k]+dis[k][j]&lt;dis[i][j])&#123;</span><br><span class="line">          dis[i][j]=dis[i][k]+dis[k][j];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  fill(d[<span class="number">0</span>],d[<span class="number">0</span>]+maxn*maxn,inf);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    dis[i][i]=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;dis[u][v]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a><font size="3px">最小生成树</font></h3><p>边数=顶点数-1，树内不会有环</p><p>满足整棵树的边权之和最小</p><h4 id="prim"><a href="#prim" class="headerlink" title="prim"></a><font size="3px">prim</font></h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x03ffffff</span>;</span><br><span class="line"><span class="keyword">bool</span> visit[maxn]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> graph[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> d[maxn];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">  d[s]=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> u=<span class="number">-1</span>; <span class="keyword">int</span> min=inf;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(visit[j]==<span class="literal">false</span>&amp;&amp;d[j]&lt;min)&#123;</span><br><span class="line">        min=d[j];</span><br><span class="line">        u=j;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(u==<span class="number">-1</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    visit[u]=<span class="literal">true</span>;</span><br><span class="line">    ans+=d[u];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">0</span>;v&lt;n;v++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(visit[v]==<span class="literal">false</span>&amp;&amp;graph[u][v]!=inf)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d[v]&gt;graph[u][v])&#123;</span><br><span class="line">          d[v]=graph[u][v];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="kruskal"><a href="#kruskal" class="headerlink" title="kruskal"></a><font size="3px">kruskal</font></h4><p>点多，边少</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> u,v,cost;</span><br><span class="line">&#125;;</span><br><span class="line">node edge[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> a.cost&lt;b.cost;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findfather</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> a=x;</span><br><span class="line">  <span class="keyword">while</span>(x!=father[x])&#123;</span><br><span class="line">    x=father[x];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(a!=father[a])&#123;</span><br><span class="line">    <span class="keyword">int</span> z=a;</span><br><span class="line">    a=father[a];</span><br><span class="line">    father[z]=x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//n个顶点，m条边</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kruskal</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> num=<span class="number">0</span>; <span class="comment">//总边数</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=;i++)&#123;</span><br><span class="line">    father[i]=i;</span><br><span class="line">  &#125;</span><br><span class="line">  sort(edge,edge+m,cmp);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> u=findfather(edge[i].u);</span><br><span class="line">    <span class="keyword">int</span> v=findfather(edge[i].v);</span><br><span class="line">    <span class="keyword">if</span>(u!=v)&#123;</span><br><span class="line">      father[u]=v;</span><br><span class="line">      ans+=edge[i].cost;</span><br><span class="line">      num++;</span><br><span class="line">      <span class="keyword">if</span>(num==n<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(num1=n<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a><font size="3px">拓扑排序</font></h3><p>图一定是有向无环图</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,inDegree[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">topologicalSort</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(inDegree[i]==<span class="number">0</span>)&#123;</span><br><span class="line">      q.push(i);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">    <span class="keyword">int</span> u=q.front();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,u);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;G[u].size();i++)&#123;</span><br><span class="line">      <span class="keyword">int</span> v=G[u][i];</span><br><span class="line">      inDegree[v]--;</span><br><span class="line">      <span class="keyword">if</span>(inDegree[v]==<span class="number">0</span>)&#123;</span><br><span class="line">        q.push(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    G[u].clear();</span><br><span class="line">    num++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(num==n)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关键路径"><a href="#关键路径" class="headerlink" title="关键路径"></a><font size="3px">关键路径</font></h3><p>ve[i] 事件i的最早发生时间</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,inDegree[maxn];</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">topologicalSort</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(inDegree[i]==<span class="number">0</span>)&#123;</span><br><span class="line">      q.push(i);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">    <span class="keyword">int</span> u=q.front();</span><br><span class="line">    q.pop();</span><br><span class="line">    s.push(u);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;G[u].size();i++)&#123;</span><br><span class="line">      <span class="keyword">int</span> v=G[u][i].v;</span><br><span class="line">      inDegree[v]--;</span><br><span class="line">      <span class="keyword">if</span>(inDegree[v]==<span class="number">0</span>)&#123;</span><br><span class="line">        q.push(v);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    G[u].clear();</span><br><span class="line">    <span class="comment">//ve[u]来更新所有后继结点v</span></span><br><span class="line">    <span class="keyword">if</span>(ve[u]+G[u][i].w&gt;ve[v])&#123;</span><br><span class="line">      ve[v]=ve[u]+G[u][i].w;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(s.size()==n)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vl[i]  事件i的最迟发生时间</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">fill(vl,vl+n,ve[n<span class="number">-1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">  <span class="keyword">int</span> u=s.top();</span><br><span class="line">  s.pop();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;G[u].size();i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> v=G[u][i].v;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(vl[v]-G[u][i].w&lt;vl[u])&#123;</span><br><span class="line">      vl[u]=vl[v]-G[u][i].w;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关键路径</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">0</span>;u&lt;n;u++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;G[u].size();i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> v=G[u][i].v;</span><br><span class="line">    <span class="keyword">int</span> w=G[u][i].w;</span><br><span class="line">    <span class="keyword">int</span> e=ve[v];</span><br><span class="line">    <span class="keyword">int</span> l=vl[v]-w;</span><br><span class="line">    <span class="keyword">if</span>(e==l)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d-&gt;%d"</span>,u,v); <span class="comment">//关键路径</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">ve[n<span class="number">-1</span>] <span class="comment">//关键路径长度</span></span><br></pre></td></tr></table></figure><h1 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a><font size="4px">搜索</font></h1><h2 id="dfs-深度优先搜索"><a href="#dfs-深度优先搜索" class="headerlink" title="dfs 深度优先搜索"></a><font size="3px">dfs 深度优先搜索</font></h2><p>类似于递归，使用系统栈实现，存在岔路口(递归边界)和路(递归式)</p><h3 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a><font size="3px">背包问题</font></h3><p>n件物品，每件重量w[i]，价值c[i]，选出若干件物品放入容量为v的背包中，使得在选入背包的物品重量和不超过容量v的前提下，让背包中的物品的价值之和最大。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> maxValue=<span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> index,<span class="keyword">int</span> sumW,<span class="keyword">int</span> sumC)</span></span>&#123;</span><br><span class="line">  <span class="comment">//死胡同</span></span><br><span class="line">  <span class="keyword">if</span>(index==n)&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//不选</span></span><br><span class="line">  dfs(index+<span class="number">1</span>,sumW,sumC);</span><br><span class="line">  <span class="comment">//选</span></span><br><span class="line">  <span class="keyword">if</span>(sumW+w[index]&lt;=v)&#123;</span><br><span class="line">    <span class="keyword">if</span>(sumC+c[index]&gt;maxValue)&#123;</span><br><span class="line">      maxValue=sumC+c[index];</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(index+<span class="number">1</span>,sumW+w[index],sumC+c[index]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dfs(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="bfs-广度优先搜索"><a href="#bfs-广度优先搜索" class="headerlink" title="bfs 广度优先搜索"></a><font size="3px">bfs 广度优先搜索</font></h2><p>队列实现</p><h3 id="迷宫步数"><a href="#迷宫步数" class="headerlink" title="迷宫步数"></a><font size="3px">迷宫步数</font></h3><p>. . . . . .</p><p>. * . * .</p><p>. * S * .</p><p>. * * * .</p><p>. . . T *</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">100</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> x,y;</span><br><span class="line">  <span class="keyword">int</span> step=<span class="number">0</span>;</span><br><span class="line">&#125;S,T;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> matrix[maxn][maxn];</span><br><span class="line"><span class="keyword">bool</span> inq[maxn][maxn]=&#123;<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> x[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> y[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(x&gt;=n||x&lt;<span class="number">0</span>||y&gt;=m||y&lt;<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">if</span>(matrix[x][y]==<span class="string">'*'</span>||inq[x][y])</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">  queuq&lt;node&gt; q;</span><br><span class="line">  q.push(S);</span><br><span class="line">  inq[S.x][S.y]=<span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">    node top=q.top();</span><br><span class="line">    q.pop();</span><br><span class="line">    <span class="keyword">if</span>(top.x==T.x&amp;&amp;top.y==T.y)&#123;</span><br><span class="line">      <span class="keyword">return</span> top.step;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">int</span> nowX=top.x+x[i];</span><br><span class="line">      <span class="keyword">int</span> nowY=top.y+y[i];</span><br><span class="line">      <span class="keyword">if</span>(judge(nowX,nowY))&#123;</span><br><span class="line">        node newnode;</span><br><span class="line">        newnode.x=nowX;</span><br><span class="line">        newnode.y=nowY;</span><br><span class="line">        newnode.step=top.step+<span class="number">1</span>;</span><br><span class="line">        q.push(newnode);</span><br><span class="line">        inq[nowX][nowY]=<span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">  <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">      matrix[i][j]=getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    matrix[i][m+<span class="number">1</span>]=<span class="string">'\0'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;S.x,&amp;S.y,&amp;T.x,&amp;T.y);</span><br><span class="line">  S.step=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,bfs());</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a><font size="4px">动态规划</font></h1><h2 id="塔楼"><a href="#塔楼" class="headerlink" title="塔楼"></a><font size="3px">塔楼</font></h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dp[i][j]表示从i行第j个数字出发的到达最底层的所有路径中能得到的最大和</span></span><br><span class="line"><span class="comment">//dp[i][j]=max(dp[i+1][j],dp[i+1][j+1])+f[i][j]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn],f[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;f[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//边界</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">    dp[n][j]=f[n][j];</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">      dp[i][j]=max(dp[i+<span class="number">1</span>][j],dp[i+<span class="number">1</span>][j+<span class="number">1</span>])+f[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d"</span>,dp[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最大连续子序列"><a href="#最大连续子序列" class="headerlink" title="最大连续子序列"></a><font size="3px">最大连续子序列</font></h2><p>A<sub>1</sub>，A<sub>2</sub>，A<sub>3</sub>，… ，A<sub>n</sub> 序列，求i，j，使得A<sub>i</sub>+ … +A<sub>j</sub> 最大，输出这个最大和</p><p>dp[i]表示以a[i]作为末尾的连续序列的最大和</p><p>状态转移方程：dp[i]=max(a[i],dp[i-1]+a[i])</p><p>边界: dp[0]=a[0];</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dp[<span class="number">0</span>]=a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">  dp[i]=max(a[i],dp[i<span class="number">-1</span>]+a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxn=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(dp[i]&lt;maxn)&#123;</span><br><span class="line">    maxn=dp[i];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最长不下降子序列LIS"><a href="#最长不下降子序列LIS" class="headerlink" title="最长不下降子序列LIS"></a><font size="3px">最长不下降子序列LIS</font></h2><p>dp[i]表示以a[i]作为末尾的最长不下降子序列长度</p><p>dp[i]=max{1,dp[j]+1} (j=1,2,…,i-1) a[j]&lt;a[i]</p><p>a[i]自成一派 or 跟到a[j]后</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ans=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  dp[i]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i]&gt;=a[j]&amp;&amp;(dp[j]+<span class="number">1</span>&gt;dp[i]))&#123;</span><br><span class="line">      dp[i]=dp[j]+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ans=max(ans,dp[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最长公共子序列LCS"><a href="#最长公共子序列LCS" class="headerlink" title="最长公共子序列LCS"></a><font size="3px">最长公共子序列LCS</font></h2><p>dp[i] [j]表示字符串A的i号位和字符串B的j号位之前的LCS长度</p><p>dp[i] [j]=dp[i-1] [j-1]</p><p>$$dp[i][j]= \begin{cases} dp[i-1][j-1]+1&amp; \text{a[i]==b[j]}\ max(dp[i-1][j],dp[i][j-1])&amp; \text{a[i]!=b[j]} \end{cases}$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=lena;i++)&#123;</span><br><span class="line">  dp[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=lenb;i++)&#123;</span><br><span class="line">  dp[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lena;i++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=lenb;j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i]==b[j])&#123;</span><br><span class="line">      dp[i][j]=dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      dp[i][j]=max(dp[i<span class="number">-1</span>][j],dp[i][j<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dp[lena][lenb];</span><br></pre></td></tr></table></figure><h2 id="最长回文子串"><a href="#最长回文子串" class="headerlink" title="最长回文子串"></a><font size="3px">最长回文子串</font></h2><p>dp[i] [j] 表示s[i]到s[j]所表示的子串是否为回文子串 1/0</p><p>$$dp[i][j]= \begin{cases} dp[i+1][j-1]&amp; \text{s[i]==s[j]}\ 0&amp; \text{s[i]  !=s[j]} \end{cases}$$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">  dp[i][i]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(i&lt;len<span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(s[i]==s[i+<span class="number">1</span>])&#123;</span><br><span class="line">      dp[i][i+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">      ans=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> L=<span class="number">3</span>;L&lt;=len;L++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i+L<span class="number">-1</span>&lt;len;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> j=i+L<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(s[i]==s[j]&amp;&amp;dp[i+<span class="number">1</span>][j<span class="number">-1</span>]==<span class="number">1</span>)&#123;</span><br><span class="line">      dp[i][j]=<span class="number">1</span>;</span><br><span class="line">      ans=L;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ans;</span><br></pre></td></tr></table></figure><h2 id="背包问题-1"><a href="#背包问题-1" class="headerlink" title="背包问题"></a><font size="3px">背包问题</font></h2><h3 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a><font size="3px">01背包</font></h3><p>dp[i] [v]前i件物品恰好装入容量为v的背包中所能获得的最大价值</p><ul><li><p>装第i件 计算前i-1件最大价值</p></li><li><p>不装i件 计算前i-1件装v-w[i]所能获得的最大价值</p></li></ul><p>dp[i] [v]=max(dp[i-1] [v],dp[i-1] [v-w[i]]+c[i])</p><p>边界 dp[0] [v]=0 (0&lt;=v&lt;=V)</p><p>最终 dp[n] [v] 中最大值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> v=w[i];v&lt;=V;v++)&#123;</span><br><span class="line">    dp[i][v]=max(dp[i<span class="number">-1</span>][v],dp[i<span class="number">-1</span>][v-w[i]]+c[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简化</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">0</span>;v&lt;=V;v++)&#123;</span><br><span class="line">  dp[v]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> v=V;v&gt;=w[i];v--)&#123;</span><br><span class="line">    dp[v]=max(dp[v],dp[v-w[i]]+c[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> max=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v=<span class="number">0</span>;v&lt;=V;v++)&#123;</span><br><span class="line">  <span class="keyword">if</span>(dp[v]&gt;max)&#123;</span><br><span class="line">    max=dp[v];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br></pre></td></tr></table></figure><h3 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a><font size="3px">完全背包</font></h3><p>放入i时，物品可以放任意件</p><p>dp[i] [v]=max(dp[i-1] [v],dp[i] [v-w[i]]+c[i])</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> v=w[i];v&lt;=V;v++)&#123;</span><br><span class="line">    dp[v]=max(dp[v],dp[v-w[i]]+c[i]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a><font size="4px">字符串</font></h1><h2 id="hash"><a href="#hash" class="headerlink" title="hash"></a><font size="3px">hash</font></h2><p>求n个字符串中不同字符串的个数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1000000007</span>; <span class="comment">//1e9+7</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P=<span class="number">10000019</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">hashFunc</span><span class="params">(<span class="built_in">string</span> str)</span></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> H=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.length();i++)&#123;</span><br><span class="line">    H=(H*P+str[i]-<span class="string">'a'</span>)%MOD;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> str;</span><br><span class="line">  getline(<span class="built_in">cin</span>,str);</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> id=hashFunc(str);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a><font size="3px">KMP</font></h2><h3 id="next-i"><a href="#next-i" class="headerlink" title="next[i] "></a><font size="3px">next[i] </font></h3><p>所求最长相等前后缀中前缀最后一位的下标。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> next[maxn]=&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">    next[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">      <span class="keyword">while</span>(j!=<span class="number">-1</span>&amp;&amp;s[i]!=s[j+<span class="number">1</span>])&#123;</span><br><span class="line">        j=next[j];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>])&#123;</span><br><span class="line">        j++;</span><br><span class="line">      &#125;</span><br><span class="line">      next[i]=j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="kmp"><a href="#kmp" class="headerlink" title="kmp"></a><font size="3px">kmp</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span> text[],<span class="keyword">char</span> pattern[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n=<span class="built_in">strlen</span>(text);</span><br><span class="line">  <span class="keyword">int</span> m=<span class="built_in">strlen</span>(pattern);</span><br><span class="line">  getNext(pattern,m);</span><br><span class="line">  <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(j!=<span class="number">-1</span>&amp;&amp;text[i]!=pattern[j+<span class="number">1</span>])&#123;</span><br><span class="line">      j=next[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(text[i]==pattern[j+<span class="number">1</span>])&#123;</span><br><span class="line">      j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j==m<span class="number">-1</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="统计模式串出现次数"><a href="#统计模式串出现次数" class="headerlink" title="统计模式串出现次数"></a><font size="3px">统计模式串出现次数</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span> text[],<span class="keyword">char</span> pattern[])</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> n=<span class="built_in">strlen</span>(text);</span><br><span class="line">  <span class="keyword">int</span> m=<span class="built_in">strlen</span>(pattern);</span><br><span class="line">  getNext(pattern,m);</span><br><span class="line">  <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(j!=<span class="number">-1</span>&amp;&amp;text[i]!=pattern[j+<span class="number">1</span>])&#123;</span><br><span class="line">      j=next[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(text[i]==pattern[j+<span class="number">1</span>])&#123;</span><br><span class="line">      j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j==m<span class="number">-1</span>)&#123;</span><br><span class="line">      ans++;</span><br><span class="line">      j=next[j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="改进next"><a href="#改进next" class="headerlink" title="改进next[]"></a><font size="3px">改进next[]</font></h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> nextval[maxn]=&#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">    nextval[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">      <span class="keyword">while</span>(j!=<span class="number">-1</span>&amp;&amp;s[i]!=s[j+<span class="number">1</span>])&#123;</span><br><span class="line">        j=nextval[j];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(s[i]==s[j+<span class="number">1</span>])&#123;</span><br><span class="line">        j++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(j==<span class="number">-1</span>||s[i]!=s[j+<span class="number">1</span>])&#123;</span><br><span class="line">        nextval[i]=j;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span>&#123;</span><br><span class="line">        nextval[j]=nextval[j];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="分块"><a href="#分块" class="headerlink" title="分块"></a><font size="4px">分块</font></h1><p>table[100001]  分为317块，每块316个元素</p><p>block[i] 第i块中存在的元素个数</p><p>元素x所在块号 x/316：</p><p>block[x/316]++ 所在块元素个数+1</p><p>table[x]++ 元素x存在个数+1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> sqrN=<span class="number">316</span>;</span><br><span class="line"><span class="comment">//添加元素</span></span><br><span class="line">block[x/sqrN]++;</span><br><span class="line">table[x]++;</span><br><span class="line"><span class="comment">//删除元素</span></span><br><span class="line">block[x/sqrN]--;</span><br><span class="line">table[x]--;</span><br><span class="line"><span class="comment">//第K大元素</span></span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> id=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(sum+block[id]&lt;k)&#123;</span><br><span class="line">  sum+=block[id++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num=id*sqrN;</span><br><span class="line"><span class="keyword">while</span>(sum+table[num]&lt;k)&#123;</span><br><span class="line">  sum+=table[num++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> num;</span><br></pre></td></tr></table></figure><h1 id="树状数组BIT"><a href="#树状数组BIT" class="headerlink" title="树状数组BIT"></a><font size="4px">树状数组BIT</font></h1><p>lowbit=x&amp;(-x);</p><p>能整除x的最大2的幂次</p><p>c[i] 存放数组A中i号位之前lowbit(i)个元素之和</p><p>i 从1开始</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&gt;<span class="number">0</span>;i-=lowbit(i))&#123;</span><br><span class="line">    sum+=c[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;=N;i+=lowbit(i))&#123;</span><br><span class="line">    c[i]+=v;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>求序列中左边比该数小的数个数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n,a;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">    update(a,<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  getSum(x<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;a href=&quot;https://pan.baidu.com/s/1vNOa4kA5c5y4mQ20mXMLGg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;算法笔记&lt;/a&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="https://www.runaccepted.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="PAT" scheme="https://www.runaccepted.com/tags/PAT/"/>
    
      <category term="算法笔记" scheme="https://www.runaccepted.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>nginx安装及使用</title>
    <link href="https://www.runaccepted.com/2019/11/07/nginx%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.runaccepted.com/2019/11/07/nginx安装及使用/</id>
    <published>2019-11-07T06:04:49.000Z</published>
    <updated>2020-07-04T08:26:07.868Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">mac中nginx的安装及配置</blockquote><a id="more"></a><h1 id="brew-install-nginx"><a href="#brew-install-nginx" class="headerlink" title="brew install nginx"></a><font size="4px">brew install nginx</font></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew install nginx </span></span><br><span class="line"></span><br><span class="line">==&gt; nginx</span><br><span class="line">Docroot is: /usr/local/var/www</span><br><span class="line"></span><br><span class="line">The default port has been set in /usr/local/etc/nginx/nginx.conf to 8080 so that</span><br><span class="line">nginx can run without sudo.</span><br><span class="line"></span><br><span class="line">nginx will load all files in /usr/local/etc/nginx/servers/.</span><br><span class="line"></span><br><span class="line">To have launchd start nginx now and restart at login:</span><br><span class="line">  brew services start nginx</span><br><span class="line">Or, if you don't want/need a background service you can just run:</span><br><span class="line">  nginx</span><br></pre></td></tr></table></figure><h1 id="运行nginx"><a href="#运行nginx" class="headerlink" title="运行nginx"></a><font size="4px">运行nginx</font></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> brew services start nginx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> </span></span><br><span class="line"><span class="meta">$</span><span class="bash"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nginx -s stop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nginx -s reload</span></span><br></pre></td></tr></table></figure><p>访问 <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></p><h1 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a><font size="4px">配置nginx</font></h1><p><img src="/2019/11/07/nginx安装及使用/nginx.png" alt></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/Cellar/nginx/1.17.8/</span></span><br></pre></td></tr></table></figure><p>/usr/local/etc/nginx/nginx.conf</p><h2 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a><font size="3px">代理配置</font></h2><p>路径中存在eduservice 转至 <a href="http://localhost:8001" target="_blank" rel="noopener">http://localhost:8001</a> tomcat运行路由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       9500;</span><br><span class="line">        server_name  localhost;   </span><br><span class="line">        </span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">           index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location ~ /eduservice/ &#123;</span><br><span class="line">            proxy_pass http://localhost:8001;</span><br><span class="line">        &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="启动异常"><a href="#启动异常" class="headerlink" title="启动异常"></a><font size="3px">启动异常</font></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx: [error] open() "/usr/local/var/run/nginx.pid" failed (2: No such file or directory)</span><br></pre></td></tr></table></figure><p>可以直接启动nginx，重新生成nginx.pid就可以了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nginx</span></span><br></pre></td></tr></table></figure><p>如果直接启动还是不可行，执行nginx -t查看nginx配置文件路径：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nginx -t</span></span><br><span class="line">nginx: the configuration file /usr/local/etc/nginx/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /usr/local/etc/nginx/nginx.conf test is successful</span><br></pre></td></tr></table></figure><p>指定一下conf文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nginx -c /usr/<span class="built_in">local</span>/etc/nginx/nginx.conf</span></span><br></pre></td></tr></table></figure><p>再次重启nginx -s reload，就不会报错了</p><h2 id="nginx实现反向代理"><a href="#nginx实现反向代理" class="headerlink" title="nginx实现反向代理"></a><font size="3px">nginx实现反向代理</font></h2><p>实现分布式下负载均衡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http&#123;</span><br><span class="line">upstream tomcat&#123;</span><br><span class="line">   server 192.168.0.112:8080 weight=20;</span><br><span class="line">   server 192.168.0.112:8081 weight=20;</span><br><span class="line">   server 192.168.0.112:8082 weight=20;</span><br><span class="line">&#125;</span><br><span class="line"> server&#123;</span><br><span class="line">   listen       9000;</span><br><span class="line">   server_name  localhost;</span><br><span class="line">   location /&#123;</span><br><span class="line">      proxy_pass http://tomcat;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;mac中nginx的安装及配置&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Nginx" scheme="https://www.runaccepted.com/categories/Nginx/"/>
    
    
      <category term="nginx" scheme="https://www.runaccepted.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>树莓派安装ActiveMQ</title>
    <link href="https://www.runaccepted.com/2019/11/06/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85ActiveMQ/"/>
    <id>https://www.runaccepted.com/2019/11/06/树莓派安装ActiveMQ/</id>
    <published>2019-11-06T07:11:19.000Z</published>
    <updated>2020-02-26T07:30:41.566Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">ActiveMQ安装</blockquote><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a><font size="4px">安装</font></h1><p><a href="http://activemq.apache.org/components/classic/download/" target="_blank" rel="noopener">http://activemq.apache.org/components/classic/download/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装activemq</span></span><br><span class="line">wget http://mirror.bit.edu.cn/apache//activemq/5.15.11/apache-activemq-5.15.11-bin.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 解压</span></span><br><span class="line">tar -zxvf apache-activemq-5.15.11-bin.tar.gz </span><br><span class="line"><span class="meta">#</span><span class="bash"> 复制到/usr/<span class="built_in">local</span>/activemq</span></span><br><span class="line">cp -rf apache-activemq-5.15.11 /usr/local/activemq</span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入bin路径</span></span><br><span class="line">cd /usr/local/activemq/bin</span><br><span class="line"><span class="meta">#</span><span class="bash"> 软链接</span></span><br><span class="line">ln -s activemq /usr/bin/activemq</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;ActiveMQ安装&lt;/blockquote&gt;
    
    </summary>
    
      <category term="树莓派" scheme="https://www.runaccepted.com/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://www.runaccepted.com/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>(二十)在线教育网站搭建一采用dubbo服务注册和发现</title>
    <link href="https://www.runaccepted.com/2019/11/02/%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%BA%8C%E5%8D%81%E9%87%87%E7%94%A8dubbo%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0/"/>
    <id>https://www.runaccepted.com/2019/11/02/在线教育网站搭建二十采用dubbo服务注册和发现/</id>
    <published>2019-11-02T12:11:32.000Z</published>
    <updated>2020-04-14T20:06:41.158Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">dubbo构建项目</blockquote><a id="more"></a><h1 id="dubbo配置"><a href="#dubbo配置" class="headerlink" title="dubbo配置"></a><font size="4px">dubbo配置</font></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#teacher</span><br><span class="line">server.port=8001</span><br><span class="line">dubbo.application.name=edu-teacher</span><br><span class="line">dubbo.registry.address=zookeeper://192.168.0.100:2181</span><br><span class="line">dubbo.protocol.name=dubbo</span><br><span class="line">dubbo.protocol.port=28001</span><br><span class="line">dubbo.consumer.check=false</span><br><span class="line"></span><br><span class="line">#aliyun</span><br><span class="line">server.port=8002</span><br></pre></td></tr></table></figure><h1 id="Spring-Data-Elasticsearch"><a href="#Spring-Data-Elasticsearch" class="headerlink" title="Spring-Data-Elasticsearch"></a><font size="4px">Spring-Data-Elasticsearch</font></h1><p><a href="https://docs.spring.io/spring-data/elasticsearch/docs/" target="_blank" rel="noopener">https://docs.spring.io/spring-data/elasticsearch/docs/</a></p><p><a href="https://docs.spring.io/spring-data/elasticsearch/docs/3.2.4.RELEASE/reference/html/#preface.versions" target="_blank" rel="noopener">https://docs.spring.io/spring-data/elasticsearch/docs/3.2.4.RELEASE/reference/html/#preface.versions</a></p><table><thead><tr><th align="center">Spring Data Release Train</th><th align="center">Spring Data Elasticsearch</th><th align="center">Elasticsearch</th><th align="center">Spring Boot</th></tr></thead><tbody><tr><td align="center">Moore</td><td align="center">3.2.x</td><td align="center">6.8.4</td><td align="center">2.2.x</td></tr><tr><td align="center">Lovelace</td><td align="center">3.1.x</td><td align="center">6.2.2</td><td align="center">2.1.x</td></tr><tr><td align="center">Kay[<a href="https://docs.spring.io/spring-data/elasticsearch/docs/3.2.4.RELEASE/reference/html/#_footnotedef_1" target="_blank" rel="noopener">1</a>]</td><td align="center">3.0.x[<a href="https://docs.spring.io/spring-data/elasticsearch/docs/3.2.4.RELEASE/reference/html/#_footnotedef_1" target="_blank" rel="noopener">1</a>]</td><td align="center">5.5.0</td><td align="center">2.0.x[<a href="https://docs.spring.io/spring-data/elasticsearch/docs/3.2.4.RELEASE/reference/html/#_footnotedef_1" target="_blank" rel="noopener">1</a>]</td></tr><tr><td align="center">Ingalls[<a href="https://docs.spring.io/spring-data/elasticsearch/docs/3.2.4.RELEASE/reference/html/#_footnotedef_1" target="_blank" rel="noopener">1</a>]</td><td align="center">2.1.x[<a href="https://docs.spring.io/spring-data/elasticsearch/docs/3.2.4.RELEASE/reference/html/#_footnotedef_1" target="_blank" rel="noopener">1</a>]</td><td align="center">2.4.0</td><td align="center">1.5.x[<a href="https://docs.spring.io/spring-data/elasticsearch/docs/3.2.4.RELEASE/reference/html/#_footnotedef_1" target="_blank" rel="noopener">1</a>]</td></tr></tbody></table><p>版本不相配！！</p><h1 id="Elasticsearch-jestClient"><a href="#Elasticsearch-jestClient" class="headerlink" title="Elasticsearch+jestClient"></a><font size="4px">Elasticsearch+jestClient</font></h1><h2 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a><font size="3px">Maven依赖</font></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- elasticsearch-5.6.11 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.6.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jestclient --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.searchbox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- test --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置application-properties"><a href="#配置application-properties" class="headerlink" title="配置application.properties"></a><font size="3px">配置application.properties</font></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server.port=9999</span><br><span class="line"></span><br><span class="line">spring.elasticsearch.jest.uris= http://192.168.0.101:9200</span><br><span class="line">spring.elasticsearch.jest.read-timeout=6s</span><br></pre></td></tr></table></figure><h2 id="创建index和mapping"><a href="#创建index和mapping" class="headerlink" title="创建index和mapping"></a><font size="3px">创建index和mapping</font></h2><p><a href="https://github.com/searchbox-io/Jest/tree/master/jest" target="_blank" rel="noopener">https://github.com/searchbox-io/Jest/tree/master/jest</a></p><p>在索引online下创建teacher类型的mapping</p><p>name, intro, career 采用ik分词器，分的时候用<code>ik_max_word</code> 尽量分最大词，查找的时候用<code>ik_smart</code>智能查找</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestMapping</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  String str = <span class="string">"&#123;\"mappings\": &#123;\"user\":&#123; \"properties\":&#123;\n"</span> +</span><br><span class="line">          <span class="string">"      \"id\":&#123;\"type\":\"text\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"name\":&#123;\"type\":\"text\",\"analyzer\":\"ik_max_word\",\"search_analyzer\":\"ik_smart\"&#125;,\n"</span></span><br><span class="line">          <span class="string">"      \"password\":&#123;\"type\":\"text\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"video\":&#123;\"type\":\"text\"&#125;\n"</span></span><br><span class="line">          <span class="string">"    &#125;&#125;&#125;\n"</span> +</span><br><span class="line">          <span class="string">"&#125;"</span>;</span><br><span class="line">  System.out.println(str);</span><br><span class="line">  CreateIndex index = <span class="keyword">new</span> CreateIndex.Builder(<span class="string">"online"</span>).settings(str).build();</span><br><span class="line">  JestResult execute = jestClient.execute(index);</span><br><span class="line">  System.out.println(execute.getJsonObject());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a><font size="3px">CRUD</font></h2><h3 id="新增"><a href="#新增" class="headerlink" title="新增"></a><font size="3px">新增</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@Autowired</span></span><br><span class="line">    <span class="comment">//UserRepository userRepository;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JestClient jestClient;</span><br><span class="line">  </span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">TestElastic</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        User user= <span class="keyword">new</span> User();</span><br><span class="line">        user.setId(<span class="string">"1"</span>);</span><br><span class="line">        user.setUsername(<span class="string">"abc"</span>);</span><br><span class="line">        user.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">        Index index = <span class="keyword">new</span> Index.Builder(user).index(<span class="string">"online"</span>).type(<span class="string">"user"</span>).id(<span class="string">"1"</span>).build();</span><br><span class="line"></span><br><span class="line">        DocumentResult execute = jestClient.execute(index);</span><br><span class="line"></span><br><span class="line">        System.out.println(execute.getJsonString());</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">"_index"</span>:<span class="string">"online"</span>,</span><br><span class="line"> <span class="attr">"_type"</span>:<span class="string">"user"</span>,</span><br><span class="line"> <span class="attr">"_id"</span>:<span class="string">"1"</span>,</span><br><span class="line"> <span class="attr">"_version"</span>:<span class="number">1</span>,</span><br><span class="line"> <span class="attr">"result"</span>:<span class="string">"created"</span>,</span><br><span class="line"> <span class="attr">"_shards"</span>:&#123;</span><br><span class="line">   <span class="attr">"total"</span>:<span class="number">2</span>,</span><br><span class="line">   <span class="attr">"successful"</span>:<span class="number">2</span>,</span><br><span class="line">   <span class="attr">"failed"</span>:<span class="number">0</span></span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">"created"</span>:<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2019/11/02/在线教育网站搭建二十采用dubbo服务注册和发现/put.png" alt></p><h4 id="源代码-默认有id用PUT"><a href="#源代码-默认有id用PUT" class="headerlink" title="源代码-默认有id用PUT"></a><font size="3px">源代码-默认有id用PUT</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> io.searchbox.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.AbstractAction;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.BulkableAction;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.SingleResultAbstractDocumentTargetedAction;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Index</span> <span class="keyword">extends</span> <span class="title">SingleResultAbstractDocumentTargetedAction</span> <span class="keyword">implements</span> <span class="title">BulkableAction</span>&lt;<span class="title">DocumentResult</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Index</span><span class="params">(Index.Builder builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(builder);</span><br><span class="line">        <span class="keyword">this</span>.payload = builder.source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPathToResult</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRestMethodName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.id != <span class="keyword">null</span> ? <span class="string">"PUT"</span> : <span class="string">"POST"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBulkMethodName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Collection&lt;Object&gt; opType = <span class="keyword">this</span>.getParameter(<span class="string">"op_type"</span>);</span><br><span class="line">        <span class="keyword">if</span> (opType != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (opType.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Expecting a single value for OP_TYPE parameter, you provided: "</span> + opType.size());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> opType.size() == <span class="number">1</span> &amp;&amp; opType.iterator().next().toString().equalsIgnoreCase(<span class="string">"create"</span>) ? <span class="string">"create"</span> : <span class="string">"index"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> <span class="keyword">extends</span> <span class="title">io</span>.<span class="title">searchbox</span>.<span class="title">action</span>.<span class="title">AbstractDocumentTargetedAction</span>.<span class="title">Builder</span>&lt;<span class="title">Index</span>, <span class="title">Index</span>.<span class="title">Builder</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object source;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(Object source)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.source = source;</span><br><span class="line">            <span class="keyword">this</span>.id(AbstractAction.getIdFromSource(source));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Index <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Index(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a><font size="3px">更新</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestUpdate</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    User user= <span class="keyword">new</span> User();</span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="string">"1"</span>);</span><br><span class="line">    list.add(<span class="string">"2"</span>);</span><br><span class="line">    list.add(<span class="string">"3"</span>);</span><br><span class="line">    list.add(<span class="string">"4"</span>);</span><br><span class="line">    user.setVideo(list);</span><br><span class="line">    Index index = <span class="keyword">new</span> Index.Builder(user).index(<span class="string">"online"</span>).type(<span class="string">"user"</span>).id(<span class="string">"1"</span>).build();</span><br><span class="line"></span><br><span class="line">    DocumentResult execute = jestClient.execute(index);</span><br><span class="line">    System.out.println(execute.getJsonString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"_index"</span>:<span class="string">"online"</span>,</span><br><span class="line">  <span class="attr">"_type"</span>:<span class="string">"user"</span>,</span><br><span class="line">  <span class="attr">"_id"</span>:<span class="string">"1"</span>,</span><br><span class="line">  <span class="attr">"_version"</span>:<span class="number">3</span>,</span><br><span class="line">  <span class="attr">"result"</span>:<span class="string">"updated"</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>:&#123;</span><br><span class="line">    <span class="attr">"total"</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="attr">"successful"</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="attr">"failed"</span>:<span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"created"</span>:<span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a><font size="3px">查看</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestSearch</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    String str=<span class="string">"&#123;\n"</span> +</span><br><span class="line">            <span class="string">"  \"query\":&#123;\n"</span> +</span><br><span class="line">            <span class="string">"    \"match_all\":&#123;&#125;\n"</span> +</span><br><span class="line">            <span class="string">"  &#125;\n"</span> +</span><br><span class="line">            <span class="string">"  \n"</span> +</span><br><span class="line">            <span class="string">"&#125;"</span>;</span><br><span class="line">    Search search = <span class="keyword">new</span> Search.Builder(str).addIndex(<span class="string">"online"</span>).build();</span><br><span class="line">    SearchResult execute = jestClient.execute(search);</span><br><span class="line">  </span><br><span class="line">    List&lt;SearchResult.Hit&lt;User, Void&gt;&gt; hits = execute.getHits(User.class);</span><br><span class="line">    <span class="keyword">for</span> (SearchResult.Hit&lt;User, Void&gt; hit:hits) &#123;</span><br><span class="line">        System.out.println(hit.source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果</p><p><img src="/2019/11/02/在线教育网站搭建二十采用dubbo服务注册和发现/hits.png" alt></p><p><code>User{id=&#39;null&#39;, username=&#39;null&#39;, password=&#39;null&#39;, video=[1, 2, 3, 4]}</code></p><h4 id="源代码-采用-POST-请求"><a href="#源代码-采用-POST-请求" class="headerlink" title="源代码-采用 POST 请求"></a><font size="3px">源代码-采用 POST 请求</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> io.searchbox.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonArray;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonElement;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonObject;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonPrimitive;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonSyntaxException;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.AbstractAction;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.AbstractMultiTypeActionBuilder;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.client.config.ElasticsearchVersion;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.core.search.sort.Sort;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.params.SearchType;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Search</span> <span class="keyword">extends</span> <span class="title">AbstractAction</span>&lt;<span class="title">SearchResult</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String query;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Sort&gt; sortList;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;String&gt; includePatternList;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;String&gt; excludePatternList;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String templateSuffix;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Search</span><span class="params">(Search.Builder builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(builder, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Search</span><span class="params">(Search.TemplateBuilder templatedBuilder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(templatedBuilder, <span class="string">"/template"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Search</span><span class="params">(Search.Builder builder, String templateSuffix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(builder);</span><br><span class="line">        <span class="keyword">this</span>.query = builder.query;</span><br><span class="line">        <span class="keyword">this</span>.sortList = builder.sortList;</span><br><span class="line">        <span class="keyword">this</span>.includePatternList = builder.includePatternList;</span><br><span class="line">        <span class="keyword">this</span>.excludePatternList = builder.excludePatternList;</span><br><span class="line">        <span class="keyword">this</span>.templateSuffix = templateSuffix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> SearchResult <span class="title">createNewElasticSearchResult</span><span class="params">(String responseBody, <span class="keyword">int</span> statusCode, String reasonPhrase, Gson gson)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (SearchResult)<span class="keyword">this</span>.createNewElasticSearchResult(<span class="keyword">new</span> SearchResult(gson), responseBody, statusCode, reasonPhrase, gson);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.indexName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.typeName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">buildURI</span><span class="params">(ElasticsearchVersion elasticsearchVersion)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.buildURI(elasticsearchVersion) + <span class="string">"/_search"</span> + <span class="keyword">this</span>.templateSuffix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPathToResult</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hits/hits/_source"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRestMethodName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"POST"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getData</span><span class="params">(Gson gson)</span> </span>&#123;</span><br><span class="line">        String data;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.sortList.isEmpty() &amp;&amp; <span class="keyword">this</span>.includePatternList.isEmpty() &amp;&amp; <span class="keyword">this</span>.excludePatternList.isEmpty()) &#123;</span><br><span class="line">            data = <span class="keyword">this</span>.query;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            JsonObject queryObject = (JsonObject)gson.fromJson(<span class="keyword">this</span>.query, JsonObject.class);</span><br><span class="line">            <span class="keyword">if</span> (queryObject == <span class="keyword">null</span>) &#123;</span><br><span class="line">                queryObject = <span class="keyword">new</span> JsonObject();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">this</span>.sortList.isEmpty()) &#123;</span><br><span class="line">                JsonArray sortArray = normalizeSortClause(queryObject);</span><br><span class="line">                Iterator var5 = <span class="keyword">this</span>.sortList.iterator();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span>(var5.hasNext()) &#123;</span><br><span class="line">                    Sort sort = (Sort)var5.next();</span><br><span class="line">                    sortArray.add(sort.toJsonObject());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">this</span>.includePatternList.isEmpty() || !<span class="keyword">this</span>.excludePatternList.isEmpty()) &#123;</span><br><span class="line">                JsonObject sourceObject = normalizeSourceClause(queryObject);</span><br><span class="line">                addPatternListToSource(sourceObject, <span class="string">"includes"</span>, <span class="keyword">this</span>.includePatternList);</span><br><span class="line">                addPatternListToSource(sourceObject, <span class="string">"excludes"</span>, <span class="keyword">this</span>.excludePatternList);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            data = gson.toJson(queryObject);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> JsonArray <span class="title">normalizeSortClause</span><span class="params">(JsonObject queryObject)</span> </span>&#123;</span><br><span class="line">        JsonArray sortArray;</span><br><span class="line">        <span class="keyword">if</span> (queryObject.has(<span class="string">"sort"</span>)) &#123;</span><br><span class="line">            JsonElement sortElement = queryObject.get(<span class="string">"sort"</span>);</span><br><span class="line">            <span class="keyword">if</span> (sortElement.isJsonArray()) &#123;</span><br><span class="line">                sortArray = sortElement.getAsJsonArray();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sortElement.isJsonObject()) &#123;</span><br><span class="line">                sortArray = <span class="keyword">new</span> JsonArray();</span><br><span class="line">                sortArray.add(sortElement.getAsJsonObject());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!sortElement.isJsonPrimitive() || !sortElement.getAsJsonPrimitive().isString()) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> JsonSyntaxException(<span class="string">"_source must be an array, an object or a string"</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                String sortField = sortElement.getAsString();</span><br><span class="line">                sortArray = <span class="keyword">new</span> JsonArray();</span><br><span class="line">                queryObject.add(<span class="string">"sort"</span>, sortArray);</span><br><span class="line">                String order;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"_score"</span>.equals(sortField)) &#123;</span><br><span class="line">                    order = <span class="string">"desc"</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    order = <span class="string">"asc"</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                JsonObject sortOrder = <span class="keyword">new</span> JsonObject();</span><br><span class="line">                sortOrder.add(<span class="string">"order"</span>, <span class="keyword">new</span> JsonPrimitive(order));</span><br><span class="line">                JsonObject sortDefinition = <span class="keyword">new</span> JsonObject();</span><br><span class="line">                sortDefinition.add(sortField, sortOrder);</span><br><span class="line">                sortArray.add(sortDefinition);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sortArray = <span class="keyword">new</span> JsonArray();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        queryObject.add(<span class="string">"sort"</span>, sortArray);</span><br><span class="line">        <span class="keyword">return</span> sortArray;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> JsonObject <span class="title">normalizeSourceClause</span><span class="params">(JsonObject queryObject)</span> </span>&#123;</span><br><span class="line">        JsonObject sourceObject;</span><br><span class="line">        <span class="keyword">if</span> (queryObject.has(<span class="string">"_source"</span>)) &#123;</span><br><span class="line">            JsonElement sourceElement = queryObject.get(<span class="string">"_source"</span>);</span><br><span class="line">            <span class="keyword">if</span> (sourceElement.isJsonObject()) &#123;</span><br><span class="line">                sourceObject = sourceElement.getAsJsonObject();</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (sourceElement.isJsonArray()) &#123;</span><br><span class="line">                sourceObject = <span class="keyword">new</span> JsonObject();</span><br><span class="line">                queryObject.add(<span class="string">"_source"</span>, sourceObject);</span><br><span class="line">                sourceObject.add(<span class="string">"includes"</span>, sourceElement.getAsJsonArray());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!sourceElement.isJsonPrimitive() || !sourceElement.getAsJsonPrimitive().isBoolean()) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> JsonSyntaxException(<span class="string">"_source must be an object, an array or a boolean"</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                sourceObject = <span class="keyword">new</span> JsonObject();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sourceObject = <span class="keyword">new</span> JsonObject();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        queryObject.add(<span class="string">"_source"</span>, sourceObject);</span><br><span class="line">        <span class="keyword">return</span> sourceObject;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addPatternListToSource</span><span class="params">(JsonObject sourceObject, String rule, List&lt;String&gt; patternList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!patternList.isEmpty()) &#123;</span><br><span class="line">            JsonArray ruleArray;</span><br><span class="line">            <span class="keyword">if</span> (sourceObject.has(rule)) &#123;</span><br><span class="line">                ruleArray = sourceObject.get(rule).getAsJsonArray();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ruleArray = <span class="keyword">new</span> JsonArray();</span><br><span class="line">                sourceObject.add(rule, ruleArray);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Iterator var4 = patternList.iterator();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(var4.hasNext()) &#123;</span><br><span class="line">                String pattern = (String)var4.next();</span><br><span class="line">                ruleArray.add(pattern);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hash(<span class="keyword">new</span> Object[]&#123;<span class="keyword">super</span>.hashCode(), <span class="keyword">this</span>.query, <span class="keyword">this</span>.sortList, <span class="keyword">this</span>.includePatternList, <span class="keyword">this</span>.excludePatternList&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj == <span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj.getClass() != <span class="keyword">this</span>.getClass()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Search rhs = (Search)obj;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.equals(obj) &amp;&amp; Objects.equals(<span class="keyword">this</span>.query, rhs.query) &amp;&amp; Objects.equals(<span class="keyword">this</span>.sortList, rhs.sortList) &amp;&amp; Objects.equals(<span class="keyword">this</span>.includePatternList, rhs.includePatternList) &amp;&amp; Objects.equals(<span class="keyword">this</span>.excludePatternList, rhs.excludePatternList);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TemplateBuilder</span> <span class="keyword">extends</span> <span class="title">Search</span>.<span class="title">Builder</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">TemplateBuilder</span><span class="params">(String templatedQuery)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(templatedQuery);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Search <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Search(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">VersionBuilder</span> <span class="keyword">extends</span> <span class="title">Search</span>.<span class="title">Builder</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">VersionBuilder</span><span class="params">(String query)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(query);</span><br><span class="line">            <span class="keyword">this</span>.setParameter(<span class="string">"version"</span>, <span class="string">"true"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> <span class="keyword">extends</span> <span class="title">AbstractMultiTypeActionBuilder</span>&lt;<span class="title">Search</span>, <span class="title">Search</span>.<span class="title">Builder</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> String query;</span><br><span class="line">        <span class="keyword">protected</span> List&lt;Sort&gt; sortList = <span class="keyword">new</span> LinkedList();</span><br><span class="line">        <span class="keyword">protected</span> List&lt;String&gt; includePatternList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="keyword">protected</span> List&lt;String&gt; excludePatternList = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(String query)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.query = query;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Search.<span class="function">Builder <span class="title">setSearchType</span><span class="params">(SearchType searchType)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (Search.Builder)<span class="keyword">this</span>.setParameter(<span class="string">"search_type"</span>, searchType);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Search.<span class="function">Builder <span class="title">enableTrackScores</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.setParameter(<span class="string">"track_scores"</span>, <span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Search.<span class="function">Builder <span class="title">addSort</span><span class="params">(Sort sort)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.sortList.add(sort);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Search.<span class="function">Builder <span class="title">addSourceExcludePattern</span><span class="params">(String excludePattern)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.excludePatternList.add(excludePattern);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Search.<span class="function">Builder <span class="title">addSourceIncludePattern</span><span class="params">(String includePattern)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.includePatternList.add(includePattern);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Search.<span class="function">Builder <span class="title">addSort</span><span class="params">(Collection&lt;Sort&gt; sorts)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.sortList.addAll(sorts);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Search <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Search(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>put新增后，原ID，username，password不见了？</p><h3 id="新增属性用POST"><a href="#新增属性用POST" class="headerlink" title="新增属性用POST"></a><font size="3px">新增属性用POST</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestSearch</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    list.add(<span class="string">"1"</span>);</span><br><span class="line">    list.add(<span class="string">"2"</span>);</span><br><span class="line">    list.add(<span class="string">"3"</span>);</span><br><span class="line">    list.add(<span class="string">"4"</span>);</span><br><span class="line">    String str = <span class="string">"&#123;\n"</span> +</span><br><span class="line">        <span class="string">"  \"doc\":&#123;\n"</span> +</span><br><span class="line">        <span class="string">"    \"video\":"</span>+list+<span class="string">"\n"</span> +</span><br><span class="line">        <span class="string">"  &#125;\n"</span> +</span><br><span class="line">        <span class="string">"&#125;"</span>;</span><br><span class="line">    Update update = <span class="keyword">new</span> Update.Builder(str).index(<span class="string">"online"</span>).type(<span class="string">"user"</span>).id(<span class="string">"1"</span>).build();</span><br><span class="line">    DocumentResult execute = jestClient.execute(update);</span><br><span class="line">    System.out.println(execute.getJsonString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="源码采用-POST的-update"><a href="#源码采用-POST的-update" class="headerlink" title="源码采用 POST的_update"></a><font size="3px">源码采用 POST的<code>_update</code></font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> io.searchbox.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.BulkableAction;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.SingleResultAbstractDocumentTargetedAction;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.client.config.ElasticsearchVersion;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Update</span> <span class="keyword">extends</span> <span class="title">SingleResultAbstractDocumentTargetedAction</span> <span class="keyword">implements</span> <span class="title">BulkableAction</span>&lt;<span class="title">DocumentResult</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Update</span><span class="params">(Update.Builder builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(builder);</span><br><span class="line">        <span class="keyword">this</span>.payload = builder.payload;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBulkMethodName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"update"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">buildURI</span><span class="params">(ElasticsearchVersion elasticsearchVersion)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.buildURI(elasticsearchVersion) + <span class="string">"/_update"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRestMethodName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"POST"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPathToResult</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">VersionBuilder</span> <span class="keyword">extends</span> <span class="title">Update</span>.<span class="title">Builder</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">VersionBuilder</span><span class="params">(Object payload, Long version)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(payload);</span><br><span class="line">            <span class="keyword">this</span>.setParameter(<span class="string">"version"</span>, version);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> <span class="keyword">extends</span> <span class="title">io</span>.<span class="title">searchbox</span>.<span class="title">action</span>.<span class="title">AbstractDocumentTargetedAction</span>.<span class="title">Builder</span>&lt;<span class="title">Update</span>, <span class="title">Update</span>.<span class="title">Builder</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> Object payload;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(Object payload)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.payload = payload;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Update <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Update(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a><font size="3px">删除</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestDelete</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    Delete delete = <span class="keyword">new</span> Delete.Builder(<span class="string">""</span>).index(<span class="string">"online"</span>).build();</span><br><span class="line">    DocumentResult execute = jestClient.execute(delete);</span><br><span class="line">    System.out.println(execute.isSucceeded());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="源代码-DELETE请求"><a href="#源代码-DELETE请求" class="headerlink" title="源代码 -DELETE请求"></a><font size="3px">源代码 -DELETE请求</font></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> io.searchbox.core;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.BulkableAction;</span><br><span class="line"><span class="keyword">import</span> io.searchbox.action.SingleResultAbstractDocumentTargetedAction;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Delete</span> <span class="keyword">extends</span> <span class="title">SingleResultAbstractDocumentTargetedAction</span> <span class="keyword">implements</span> <span class="title">BulkableAction</span>&lt;<span class="title">DocumentResult</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Delete</span><span class="params">(Delete.Builder builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(builder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRestMethodName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"DELETE"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPathToResult</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getBulkMethodName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"delete"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> <span class="keyword">extends</span> <span class="title">io</span>.<span class="title">searchbox</span>.<span class="title">action</span>.<span class="title">AbstractDocumentTargetedAction</span>.<span class="title">Builder</span>&lt;<span class="title">Delete</span>, <span class="title">Delete</span>.<span class="title">Builder</span>&gt; </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.id(id);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Delete <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Delete(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="dubbo集群容错"><a href="#dubbo集群容错" class="headerlink" title="dubbo集群容错"></a><font size="4px">dubbo集群容错</font></h1><p><a href="http://dubbo.apache.org/zh-cn/docs/source_code_guide/cluster.html" target="_blank" rel="noopener">http://dubbo.apache.org/zh-cn/docs/source_code_guide/cluster.html</a></p><h1 id="图片无法传输"><a href="#图片无法传输" class="headerlink" title="图片无法传输"></a><font size="4px">图片无法传输</font></h1><p>java.lang.IllegalStateException: Serialized class org.apache.catalina.core.ApplicationPart must implement java.io.Serializable</p><p>dubbo适用范围：传入传出参数数据包较小（建议小于100K），消费者比提供者个数多，单一消费者无法压满提供者，尽量不要用 dubbo 协议传输大文件或超大字符串。</p><p>采用字节流传输</p><h1 id="teacher-mapping"><a href="#teacher-mapping" class="headerlink" title="teacher-mapping"></a><font size="4px">teacher-mapping</font></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TestMapping</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">  String str = <span class="string">"&#123;\"mappings\": &#123;\"teacher\":&#123; \"properties\":&#123;\n"</span> +</span><br><span class="line">          <span class="string">"      \"id\":&#123;\"type\":\"text\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"avatar\":&#123;\"type\":\"text\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"name\":&#123;\"type\":\"text\",\"analyzer\":\"ik_max_word\",\"search_analyzer\":\"ik_smart\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"intro\":&#123;\"type\":\"text\",\"analyzer\":\"ik_max_word\",\"search_analyzer\":\"ik_smart\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"career\":&#123;\"type\":\"text\",\"analyzer\":\"ik_max_word\",\"search_analyzer\":\"ik_smart\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"level\":&#123;\"type\":\"long\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"isDeleted\":&#123;\"type\":\"boolean\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"gmtCreate\":&#123;\"type\":\"date\",\"format\":\"yyyy-MM-dd HH:mm:ss\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"gmtModified\":&#123;\"type\":\"date\",\"format\":\"yyyy-MM-dd HH:mm:ss\"&#125;,\n"</span> +</span><br><span class="line">          <span class="string">"      \"sort\":&#123;\"type\":\"long\"&#125;\n"</span> +</span><br><span class="line">          <span class="string">"    &#125;&#125;&#125;\n"</span> +</span><br><span class="line">          <span class="string">"&#125;"</span>;</span><br><span class="line">  System.out.println(str);</span><br><span class="line">  CreateIndex index = <span class="keyword">new</span> CreateIndex.Builder(<span class="string">"online"</span>).settings(str).build();</span><br><span class="line">  JestResult execute = jestClient.execute(index);</span><br><span class="line">  System.out.println(execute.getJsonObject());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;dubbo构建项目&lt;/blockquote&gt;
    
    </summary>
    
      <category term="项目" scheme="https://www.runaccepted.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="SpringBoot" scheme="https://www.runaccepted.com/tags/SpringBoot/"/>
    
      <category term="项目" scheme="https://www.runaccepted.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
</feed>
